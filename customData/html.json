{"version":"1.1","globalAttributes":[{"name":"l-state","description":{"kind":"markdown","value":"`l-state` allows you to create component scopes with inline Javascript objects. This means you can pass state that can later be accessed in directives inside that scope. Components can be nested and declared inline with other directives as well.\r\n\r\n**Syntax:** `<div l-state=\"[object]\">...</div>`\r\n\r\n**Example:** `<div l-state=\"{ key: 'value' }\">...</div>`"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/state-directive"}]},{"name":"l-init","description":{"kind":"markdown","value":"`l-init` executes an expression once the component it is attached to is initialized. `l-init` is special because it requires an `l-state` directive to be inline with it. `l-init` cannot access state props, as only child elements with directives under the component scope can access them.\r\n\r\n**Syntax:** `<div l-state=\"{...}\" l-init=\"[expression]\">...</div>`\r\n\r\n**Example:** `<div l-state=\"{ key: 'value' }\" l-init=\"console.log('I am initialized')\">...</div>`"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/init-directive"}]},{"name":"l-text","description":{"kind":"markdown","value":"`l-text` allows you to set the `textContent` of an element. Any HTML will be stringified, check out [`l-html`](/docs/directives/html-directive) if you want to render dynamic content.\r\n\r\n**Syntax:** `<p l-text=\"[expression]\">...</p>`\r\n\r\n**Example:** `<p l-text=\"key\">...</p>`"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/text-directive"}]},{"name":"l-html","description":{"kind":"markdown","value":"`l-html` allows you to set the `innerHTML` of an element. This directive is somewhat dangerous because it can potentially result in unintended [XSS](https://developer.mozilla.org/en-US/docs/Glossary/Cross-site_scripting).\r\n\r\n**Syntax:** `<p l-html=\"[expression]\">...</p>`\r\n\r\n**Example:** `<p l-html=\"key\">...</p>`"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/html-directive"}]},{"name":"l-on:abort","description":{"kind":"markdown","value":"The loading of a resource has been aborted.\n\n> Note: The shorthand property for `l-bind` is `:`\r\n\r\n`l-bind` changes the value of an attribute based on the expression. If the value is a boolean, the attribute will be conditionally rendered.\r\n\r\n**Syntax:** `<button l-bind:[attribute]=\"[expression]\">...</button>`\r\n\r\n**Example:** `<button l-bind:title=\"key\">...</button>`"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:blur","description":{"kind":"markdown","value":"An element has lost focus (does not bubble).\n\n> Note: The shorthand property for `l-bind` is `:`\r\n\r\n`l-bind` changes the value of an attribute based on the expression. If the value is a boolean, the attribute will be conditionally rendered.\r\n\r\n**Syntax:** `<button l-bind:[attribute]=\"[expression]\">...</button>`\r\n\r\n**Example:** `<button l-bind:title=\"key\">...</button>`"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:canplay","description":{"kind":"markdown","value":"The user agent can play the media, but estimates that not enough data has been loaded to play the media up to its end without having to stop for further buffering of content.\n\n> Note: The shorthand property for `l-bind` is `:`\r\n\r\n`l-bind` changes the value of an attribute based on the expression. If the value is a boolean, the attribute will be conditionally rendered.\r\n\r\n**Syntax:** `<button l-bind:[attribute]=\"[expression]\">...</button>`\r\n\r\n**Example:** `<button l-bind:title=\"key\">...</button>`"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:canplaythrough","description":{"kind":"markdown","value":"The user agent can play the media up to its end without having to stop for further buffering of content.\n\n> Note: The shorthand property for `l-bind` is `:`\r\n\r\n`l-bind` changes the value of an attribute based on the expression. If the value is a boolean, the attribute will be conditionally rendered.\r\n\r\n**Syntax:** `<button l-bind:[attribute]=\"[expression]\">...</button>`\r\n\r\n**Example:** `<button l-bind:title=\"key\">...</button>`"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:change","description":{"kind":"markdown","value":"The change event is fired for <input>, <select>, and <textarea> elements when a change to the element's value is committed by the user.\n\n> Note: The shorthand property for `l-bind` is `:`\r\n\r\n`l-bind` changes the value of an attribute based on the expression. If the value is a boolean, the attribute will be conditionally rendered.\r\n\r\n**Syntax:** `<button l-bind:[attribute]=\"[expression]\">...</button>`\r\n\r\n**Example:** `<button l-bind:title=\"key\">...</button>`"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:click","description":{"kind":"markdown","value":"A pointing device button has been pressed and released on an element.\n\n> Note: The shorthand property for `l-bind` is `:`\r\n\r\n`l-bind` changes the value of an attribute based on the expression. If the value is a boolean, the attribute will be conditionally rendered.\r\n\r\n**Syntax:** `<button l-bind:[attribute]=\"[expression]\">...</button>`\r\n\r\n**Example:** `<button l-bind:title=\"key\">...</button>`"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:contextmenu","description":{"kind":"markdown","value":"The right button of the mouse is clicked (before the context menu is displayed).\n\n> Note: The shorthand property for `l-bind` is `:`\r\n\r\n`l-bind` changes the value of an attribute based on the expression. If the value is a boolean, the attribute will be conditionally rendered.\r\n\r\n**Syntax:** `<button l-bind:[attribute]=\"[expression]\">...</button>`\r\n\r\n**Example:** `<button l-bind:title=\"key\">...</button>`"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:dblclick","description":{"kind":"markdown","value":"A pointing device button is clicked twice on an element.\n\n> Note: The shorthand property for `l-bind` is `:`\r\n\r\n`l-bind` changes the value of an attribute based on the expression. If the value is a boolean, the attribute will be conditionally rendered.\r\n\r\n**Syntax:** `<button l-bind:[attribute]=\"[expression]\">...</button>`\r\n\r\n**Example:** `<button l-bind:title=\"key\">...</button>`"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:drag","description":{"kind":"markdown","value":"An element or text selection is being dragged (every 350ms).\n\n> Note: The shorthand property for `l-bind` is `:`\r\n\r\n`l-bind` changes the value of an attribute based on the expression. If the value is a boolean, the attribute will be conditionally rendered.\r\n\r\n**Syntax:** `<button l-bind:[attribute]=\"[expression]\">...</button>`\r\n\r\n**Example:** `<button l-bind:title=\"key\">...</button>`"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:dragend","description":{"kind":"markdown","value":"A drag operation is being ended (by releasing a mouse button or hitting the escape key).\n\n> Note: The shorthand property for `l-bind` is `:`\r\n\r\n`l-bind` changes the value of an attribute based on the expression. If the value is a boolean, the attribute will be conditionally rendered.\r\n\r\n**Syntax:** `<button l-bind:[attribute]=\"[expression]\">...</button>`\r\n\r\n**Example:** `<button l-bind:title=\"key\">...</button>`"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:dragenter","description":{"kind":"markdown","value":"A dragged element or text selection enters a valid drop target.\n\n> Note: The shorthand property for `l-bind` is `:`\r\n\r\n`l-bind` changes the value of an attribute based on the expression. If the value is a boolean, the attribute will be conditionally rendered.\r\n\r\n**Syntax:** `<button l-bind:[attribute]=\"[expression]\">...</button>`\r\n\r\n**Example:** `<button l-bind:title=\"key\">...</button>`"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:dragleave","description":{"kind":"markdown","value":"A dragged element or text selection leaves a valid drop target.\n\n> Note: The shorthand property for `l-bind` is `:`\r\n\r\n`l-bind` changes the value of an attribute based on the expression. If the value is a boolean, the attribute will be conditionally rendered.\r\n\r\n**Syntax:** `<button l-bind:[attribute]=\"[expression]\">...</button>`\r\n\r\n**Example:** `<button l-bind:title=\"key\">...</button>`"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:dragover","description":{"kind":"markdown","value":"An element or text selection is being dragged over a valid drop target (every 350ms).\n\n> Note: The shorthand property for `l-bind` is `:`\r\n\r\n`l-bind` changes the value of an attribute based on the expression. If the value is a boolean, the attribute will be conditionally rendered.\r\n\r\n**Syntax:** `<button l-bind:[attribute]=\"[expression]\">...</button>`\r\n\r\n**Example:** `<button l-bind:title=\"key\">...</button>`"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:dragstart","description":{"kind":"markdown","value":"The user starts dragging an element or text selection.\n\n> Note: The shorthand property for `l-bind` is `:`\r\n\r\n`l-bind` changes the value of an attribute based on the expression. If the value is a boolean, the attribute will be conditionally rendered.\r\n\r\n**Syntax:** `<button l-bind:[attribute]=\"[expression]\">...</button>`\r\n\r\n**Example:** `<button l-bind:title=\"key\">...</button>`"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:drop","description":{"kind":"markdown","value":"An element is dropped on a valid drop target.\n\n> Note: The shorthand property for `l-bind` is `:`\r\n\r\n`l-bind` changes the value of an attribute based on the expression. If the value is a boolean, the attribute will be conditionally rendered.\r\n\r\n**Syntax:** `<button l-bind:[attribute]=\"[expression]\">...</button>`\r\n\r\n**Example:** `<button l-bind:title=\"key\">...</button>`"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:durationchange","description":{"kind":"markdown","value":"The duration attribute has been updated.\n\n> Note: The shorthand property for `l-bind` is `:`\r\n\r\n`l-bind` changes the value of an attribute based on the expression. If the value is a boolean, the attribute will be conditionally rendered.\r\n\r\n**Syntax:** `<button l-bind:[attribute]=\"[expression]\">...</button>`\r\n\r\n**Example:** `<button l-bind:title=\"key\">...</button>`"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:emptied","description":{"kind":"markdown","value":"The media has become empty; for example, this event is sent if the media has already been loaded (or partially loaded), and the load() method is called to reload it.\n\n> Note: The shorthand property for `l-bind` is `:`\r\n\r\n`l-bind` changes the value of an attribute based on the expression. If the value is a boolean, the attribute will be conditionally rendered.\r\n\r\n**Syntax:** `<button l-bind:[attribute]=\"[expression]\">...</button>`\r\n\r\n**Example:** `<button l-bind:title=\"key\">...</button>`"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:ended","description":{"kind":"markdown","value":"Playback has stopped because the end of the media was reached.\n\n> Note: The shorthand property for `l-bind` is `:`\r\n\r\n`l-bind` changes the value of an attribute based on the expression. If the value is a boolean, the attribute will be conditionally rendered.\r\n\r\n**Syntax:** `<button l-bind:[attribute]=\"[expression]\">...</button>`\r\n\r\n**Example:** `<button l-bind:title=\"key\">...</button>`"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:error","description":{"kind":"markdown","value":"A resource failed to load.\n\n> Note: The shorthand property for `l-bind` is `:`\r\n\r\n`l-bind` changes the value of an attribute based on the expression. If the value is a boolean, the attribute will be conditionally rendered.\r\n\r\n**Syntax:** `<button l-bind:[attribute]=\"[expression]\">...</button>`\r\n\r\n**Example:** `<button l-bind:title=\"key\">...</button>`"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:focus","description":{"kind":"markdown","value":"An element has received focus (does not bubble).\n\n> Note: The shorthand property for `l-bind` is `:`\r\n\r\n`l-bind` changes the value of an attribute based on the expression. If the value is a boolean, the attribute will be conditionally rendered.\r\n\r\n**Syntax:** `<button l-bind:[attribute]=\"[expression]\">...</button>`\r\n\r\n**Example:** `<button l-bind:title=\"key\">...</button>`"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:input","description":{"kind":"markdown","value":"The value of an element changes or the content of an element with the attribute contenteditable is modified.\n\n> Note: The shorthand property for `l-bind` is `:`\r\n\r\n`l-bind` changes the value of an attribute based on the expression. If the value is a boolean, the attribute will be conditionally rendered.\r\n\r\n**Syntax:** `<button l-bind:[attribute]=\"[expression]\">...</button>`\r\n\r\n**Example:** `<button l-bind:title=\"key\">...</button>`"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:invalid","description":{"kind":"markdown","value":"A submittable element has been checked and doesn't satisfy its constraints.\n\n> Note: The shorthand property for `l-bind` is `:`\r\n\r\n`l-bind` changes the value of an attribute based on the expression. If the value is a boolean, the attribute will be conditionally rendered.\r\n\r\n**Syntax:** `<button l-bind:[attribute]=\"[expression]\">...</button>`\r\n\r\n**Example:** `<button l-bind:title=\"key\">...</button>`"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:keydown","description":{"kind":"markdown","value":"A key is pressed down.\n\n> Note: The shorthand property for `l-bind` is `:`\r\n\r\n`l-bind` changes the value of an attribute based on the expression. If the value is a boolean, the attribute will be conditionally rendered.\r\n\r\n**Syntax:** `<button l-bind:[attribute]=\"[expression]\">...</button>`\r\n\r\n**Example:** `<button l-bind:title=\"key\">...</button>`"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:keypress","description":{"kind":"markdown","value":"A key is pressed down and that key normally produces a character value (use input instead).\n\n> Note: The shorthand property for `l-bind` is `:`\r\n\r\n`l-bind` changes the value of an attribute based on the expression. If the value is a boolean, the attribute will be conditionally rendered.\r\n\r\n**Syntax:** `<button l-bind:[attribute]=\"[expression]\">...</button>`\r\n\r\n**Example:** `<button l-bind:title=\"key\">...</button>`"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:keyup","description":{"kind":"markdown","value":"A key is released.\n\n> Note: The shorthand property for `l-bind` is `:`\r\n\r\n`l-bind` changes the value of an attribute based on the expression. If the value is a boolean, the attribute will be conditionally rendered.\r\n\r\n**Syntax:** `<button l-bind:[attribute]=\"[expression]\">...</button>`\r\n\r\n**Example:** `<button l-bind:title=\"key\">...</button>`"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:load","description":{"kind":"markdown","value":"A resource and its dependent resources have finished loading.\n\n> Note: The shorthand property for `l-bind` is `:`\r\n\r\n`l-bind` changes the value of an attribute based on the expression. If the value is a boolean, the attribute will be conditionally rendered.\r\n\r\n**Syntax:** `<button l-bind:[attribute]=\"[expression]\">...</button>`\r\n\r\n**Example:** `<button l-bind:title=\"key\">...</button>`"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:loadeddata","description":{"kind":"markdown","value":"The first frame of the media has finished loading.\n\n> Note: The shorthand property for `l-bind` is `:`\r\n\r\n`l-bind` changes the value of an attribute based on the expression. If the value is a boolean, the attribute will be conditionally rendered.\r\n\r\n**Syntax:** `<button l-bind:[attribute]=\"[expression]\">...</button>`\r\n\r\n**Example:** `<button l-bind:title=\"key\">...</button>`"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:loadedmetadata","description":{"kind":"markdown","value":"The metadata has been loaded.\n\n> Note: The shorthand property for `l-bind` is `:`\r\n\r\n`l-bind` changes the value of an attribute based on the expression. If the value is a boolean, the attribute will be conditionally rendered.\r\n\r\n**Syntax:** `<button l-bind:[attribute]=\"[expression]\">...</button>`\r\n\r\n**Example:** `<button l-bind:title=\"key\">...</button>`"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:loadstart","description":{"kind":"markdown","value":"Progress has begun.\n\n> Note: The shorthand property for `l-bind` is `:`\r\n\r\n`l-bind` changes the value of an attribute based on the expression. If the value is a boolean, the attribute will be conditionally rendered.\r\n\r\n**Syntax:** `<button l-bind:[attribute]=\"[expression]\">...</button>`\r\n\r\n**Example:** `<button l-bind:title=\"key\">...</button>`"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:mousedown","description":{"kind":"markdown","value":"A pointing device button (usually a mouse) is pressed on an element.\n\n> Note: The shorthand property for `l-bind` is `:`\r\n\r\n`l-bind` changes the value of an attribute based on the expression. If the value is a boolean, the attribute will be conditionally rendered.\r\n\r\n**Syntax:** `<button l-bind:[attribute]=\"[expression]\">...</button>`\r\n\r\n**Example:** `<button l-bind:title=\"key\">...</button>`"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:mousemove","description":{"kind":"markdown","value":"A pointing device is moved over an element.\n\n> Note: The shorthand property for `l-bind` is `:`\r\n\r\n`l-bind` changes the value of an attribute based on the expression. If the value is a boolean, the attribute will be conditionally rendered.\r\n\r\n**Syntax:** `<button l-bind:[attribute]=\"[expression]\">...</button>`\r\n\r\n**Example:** `<button l-bind:title=\"key\">...</button>`"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:mouseout","description":{"kind":"markdown","value":"A pointing device is moved off the element that has the listener attached or off one of its children.\n\n> Note: The shorthand property for `l-bind` is `:`\r\n\r\n`l-bind` changes the value of an attribute based on the expression. If the value is a boolean, the attribute will be conditionally rendered.\r\n\r\n**Syntax:** `<button l-bind:[attribute]=\"[expression]\">...</button>`\r\n\r\n**Example:** `<button l-bind:title=\"key\">...</button>`"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:mouseover","description":{"kind":"markdown","value":"A pointing device is moved onto the element that has the listener attached or onto one of its children.\n\n> Note: The shorthand property for `l-bind` is `:`\r\n\r\n`l-bind` changes the value of an attribute based on the expression. If the value is a boolean, the attribute will be conditionally rendered.\r\n\r\n**Syntax:** `<button l-bind:[attribute]=\"[expression]\">...</button>`\r\n\r\n**Example:** `<button l-bind:title=\"key\">...</button>`"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:mouseup","description":{"kind":"markdown","value":"A pointing device button is released over an element.\n\n> Note: The shorthand property for `l-bind` is `:`\r\n\r\n`l-bind` changes the value of an attribute based on the expression. If the value is a boolean, the attribute will be conditionally rendered.\r\n\r\n**Syntax:** `<button l-bind:[attribute]=\"[expression]\">...</button>`\r\n\r\n**Example:** `<button l-bind:title=\"key\">...</button>`"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:pause","description":{"kind":"markdown","value":"Playback has been paused.\n\n> Note: The shorthand property for `l-bind` is `:`\r\n\r\n`l-bind` changes the value of an attribute based on the expression. If the value is a boolean, the attribute will be conditionally rendered.\r\n\r\n**Syntax:** `<button l-bind:[attribute]=\"[expression]\">...</button>`\r\n\r\n**Example:** `<button l-bind:title=\"key\">...</button>`"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:play","description":{"kind":"markdown","value":"Playback has begun.\n\n> Note: The shorthand property for `l-bind` is `:`\r\n\r\n`l-bind` changes the value of an attribute based on the expression. If the value is a boolean, the attribute will be conditionally rendered.\r\n\r\n**Syntax:** `<button l-bind:[attribute]=\"[expression]\">...</button>`\r\n\r\n**Example:** `<button l-bind:title=\"key\">...</button>`"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:playing","description":{"kind":"markdown","value":"Playback is ready to start after having been paused or delayed due to lack of data.\n\n> Note: The shorthand property for `l-bind` is `:`\r\n\r\n`l-bind` changes the value of an attribute based on the expression. If the value is a boolean, the attribute will be conditionally rendered.\r\n\r\n**Syntax:** `<button l-bind:[attribute]=\"[expression]\">...</button>`\r\n\r\n**Example:** `<button l-bind:title=\"key\">...</button>`"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:progress","description":{"kind":"markdown","value":"In progress.\n\n> Note: The shorthand property for `l-bind` is `:`\r\n\r\n`l-bind` changes the value of an attribute based on the expression. If the value is a boolean, the attribute will be conditionally rendered.\r\n\r\n**Syntax:** `<button l-bind:[attribute]=\"[expression]\">...</button>`\r\n\r\n**Example:** `<button l-bind:title=\"key\">...</button>`"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:ratechange","description":{"kind":"markdown","value":"The playback rate has changed.\n\n> Note: The shorthand property for `l-bind` is `:`\r\n\r\n`l-bind` changes the value of an attribute based on the expression. If the value is a boolean, the attribute will be conditionally rendered.\r\n\r\n**Syntax:** `<button l-bind:[attribute]=\"[expression]\">...</button>`\r\n\r\n**Example:** `<button l-bind:title=\"key\">...</button>`"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:reset","description":{"kind":"markdown","value":"A form is reset.\n\n> Note: The shorthand property for `l-bind` is `:`\r\n\r\n`l-bind` changes the value of an attribute based on the expression. If the value is a boolean, the attribute will be conditionally rendered.\r\n\r\n**Syntax:** `<button l-bind:[attribute]=\"[expression]\">...</button>`\r\n\r\n**Example:** `<button l-bind:title=\"key\">...</button>`"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:resize","description":{"kind":"markdown","value":"The document view has been resized.\n\n> Note: The shorthand property for `l-bind` is `:`\r\n\r\n`l-bind` changes the value of an attribute based on the expression. If the value is a boolean, the attribute will be conditionally rendered.\r\n\r\n**Syntax:** `<button l-bind:[attribute]=\"[expression]\">...</button>`\r\n\r\n**Example:** `<button l-bind:title=\"key\">...</button>`"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:readystatechange","description":{"kind":"markdown","value":"The readyState attribute of a document has changed.\n\n> Note: The shorthand property for `l-bind` is `:`\r\n\r\n`l-bind` changes the value of an attribute based on the expression. If the value is a boolean, the attribute will be conditionally rendered.\r\n\r\n**Syntax:** `<button l-bind:[attribute]=\"[expression]\">...</button>`\r\n\r\n**Example:** `<button l-bind:title=\"key\">...</button>`"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:scroll","description":{"kind":"markdown","value":"The document view or an element has been scrolled.\n\n> Note: The shorthand property for `l-bind` is `:`\r\n\r\n`l-bind` changes the value of an attribute based on the expression. If the value is a boolean, the attribute will be conditionally rendered.\r\n\r\n**Syntax:** `<button l-bind:[attribute]=\"[expression]\">...</button>`\r\n\r\n**Example:** `<button l-bind:title=\"key\">...</button>`"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:seeked","description":{"kind":"markdown","value":"A seek operation completed.\n\n> Note: The shorthand property for `l-bind` is `:`\r\n\r\n`l-bind` changes the value of an attribute based on the expression. If the value is a boolean, the attribute will be conditionally rendered.\r\n\r\n**Syntax:** `<button l-bind:[attribute]=\"[expression]\">...</button>`\r\n\r\n**Example:** `<button l-bind:title=\"key\">...</button>`"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:seeking","description":{"kind":"markdown","value":"A seek operation began.\n\n> Note: The shorthand property for `l-bind` is `:`\r\n\r\n`l-bind` changes the value of an attribute based on the expression. If the value is a boolean, the attribute will be conditionally rendered.\r\n\r\n**Syntax:** `<button l-bind:[attribute]=\"[expression]\">...</button>`\r\n\r\n**Example:** `<button l-bind:title=\"key\">...</button>`"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:select","description":{"kind":"markdown","value":"Some text is being selected.\n\n> Note: The shorthand property for `l-bind` is `:`\r\n\r\n`l-bind` changes the value of an attribute based on the expression. If the value is a boolean, the attribute will be conditionally rendered.\r\n\r\n**Syntax:** `<button l-bind:[attribute]=\"[expression]\">...</button>`\r\n\r\n**Example:** `<button l-bind:title=\"key\">...</button>`"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:show","description":{"kind":"markdown","value":"A contextmenu event was fired on/bubbled to an element that has a contextmenu attribute\n\n> Note: The shorthand property for `l-bind` is `:`\r\n\r\n`l-bind` changes the value of an attribute based on the expression. If the value is a boolean, the attribute will be conditionally rendered.\r\n\r\n**Syntax:** `<button l-bind:[attribute]=\"[expression]\">...</button>`\r\n\r\n**Example:** `<button l-bind:title=\"key\">...</button>`"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:stalled","description":{"kind":"markdown","value":"The user agent is trying to fetch media data, but data is unexpectedly not forthcoming.\n\n> Note: The shorthand property for `l-bind` is `:`\r\n\r\n`l-bind` changes the value of an attribute based on the expression. If the value is a boolean, the attribute will be conditionally rendered.\r\n\r\n**Syntax:** `<button l-bind:[attribute]=\"[expression]\">...</button>`\r\n\r\n**Example:** `<button l-bind:title=\"key\">...</button>`"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:submit","description":{"kind":"markdown","value":"A form is submitted.\n\n> Note: The shorthand property for `l-bind` is `:`\r\n\r\n`l-bind` changes the value of an attribute based on the expression. If the value is a boolean, the attribute will be conditionally rendered.\r\n\r\n**Syntax:** `<button l-bind:[attribute]=\"[expression]\">...</button>`\r\n\r\n**Example:** `<button l-bind:title=\"key\">...</button>`"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:suspend","description":{"kind":"markdown","value":"Media data loading has been suspended.\n\n> Note: The shorthand property for `l-bind` is `:`\r\n\r\n`l-bind` changes the value of an attribute based on the expression. If the value is a boolean, the attribute will be conditionally rendered.\r\n\r\n**Syntax:** `<button l-bind:[attribute]=\"[expression]\">...</button>`\r\n\r\n**Example:** `<button l-bind:title=\"key\">...</button>`"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:timeupdate","description":{"kind":"markdown","value":"The time indicated by the currentTime attribute has been updated.\n\n> Note: The shorthand property for `l-bind` is `:`\r\n\r\n`l-bind` changes the value of an attribute based on the expression. If the value is a boolean, the attribute will be conditionally rendered.\r\n\r\n**Syntax:** `<button l-bind:[attribute]=\"[expression]\">...</button>`\r\n\r\n**Example:** `<button l-bind:title=\"key\">...</button>`"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:volumechange","description":{"kind":"markdown","value":"The volume has changed.\n\n> Note: The shorthand property for `l-bind` is `:`\r\n\r\n`l-bind` changes the value of an attribute based on the expression. If the value is a boolean, the attribute will be conditionally rendered.\r\n\r\n**Syntax:** `<button l-bind:[attribute]=\"[expression]\">...</button>`\r\n\r\n**Example:** `<button l-bind:title=\"key\">...</button>`"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:waiting","description":{"kind":"markdown","value":"Playback has stopped because of a temporary lack of data.\n\n> Note: The shorthand property for `l-bind` is `:`\r\n\r\n`l-bind` changes the value of an attribute based on the expression. If the value is a boolean, the attribute will be conditionally rendered.\r\n\r\n**Syntax:** `<button l-bind:[attribute]=\"[expression]\">...</button>`\r\n\r\n**Example:** `<button l-bind:title=\"key\">...</button>`"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@abort","description":{"kind":"markdown","value":"The loading of a resource has been aborted.\n\n> Note: The shorthand property for `l-bind` is `:`\r\n\r\n`l-bind` changes the value of an attribute based on the expression. If the value is a boolean, the attribute will be conditionally rendered.\r\n\r\n**Syntax:** `<button l-bind:[attribute]=\"[expression]\">...</button>`\r\n\r\n**Example:** `<button l-bind:title=\"key\">...</button>`"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@blur","description":{"kind":"markdown","value":"An element has lost focus (does not bubble).\n\n> Note: The shorthand property for `l-bind` is `:`\r\n\r\n`l-bind` changes the value of an attribute based on the expression. If the value is a boolean, the attribute will be conditionally rendered.\r\n\r\n**Syntax:** `<button l-bind:[attribute]=\"[expression]\">...</button>`\r\n\r\n**Example:** `<button l-bind:title=\"key\">...</button>`"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@canplay","description":{"kind":"markdown","value":"The user agent can play the media, but estimates that not enough data has been loaded to play the media up to its end without having to stop for further buffering of content.\n\n> Note: The shorthand property for `l-bind` is `:`\r\n\r\n`l-bind` changes the value of an attribute based on the expression. If the value is a boolean, the attribute will be conditionally rendered.\r\n\r\n**Syntax:** `<button l-bind:[attribute]=\"[expression]\">...</button>`\r\n\r\n**Example:** `<button l-bind:title=\"key\">...</button>`"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@canplaythrough","description":{"kind":"markdown","value":"The user agent can play the media up to its end without having to stop for further buffering of content.\n\n> Note: The shorthand property for `l-bind` is `:`\r\n\r\n`l-bind` changes the value of an attribute based on the expression. If the value is a boolean, the attribute will be conditionally rendered.\r\n\r\n**Syntax:** `<button l-bind:[attribute]=\"[expression]\">...</button>`\r\n\r\n**Example:** `<button l-bind:title=\"key\">...</button>`"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@change","description":{"kind":"markdown","value":"The change event is fired for <input>, <select>, and <textarea> elements when a change to the element's value is committed by the user.\n\n> Note: The shorthand property for `l-bind` is `:`\r\n\r\n`l-bind` changes the value of an attribute based on the expression. If the value is a boolean, the attribute will be conditionally rendered.\r\n\r\n**Syntax:** `<button l-bind:[attribute]=\"[expression]\">...</button>`\r\n\r\n**Example:** `<button l-bind:title=\"key\">...</button>`"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@click","description":{"kind":"markdown","value":"A pointing device button has been pressed and released on an element.\n\n> Note: The shorthand property for `l-bind` is `:`\r\n\r\n`l-bind` changes the value of an attribute based on the expression. If the value is a boolean, the attribute will be conditionally rendered.\r\n\r\n**Syntax:** `<button l-bind:[attribute]=\"[expression]\">...</button>`\r\n\r\n**Example:** `<button l-bind:title=\"key\">...</button>`"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@contextmenu","description":{"kind":"markdown","value":"The right button of the mouse is clicked (before the context menu is displayed).\n\n> Note: The shorthand property for `l-bind` is `:`\r\n\r\n`l-bind` changes the value of an attribute based on the expression. If the value is a boolean, the attribute will be conditionally rendered.\r\n\r\n**Syntax:** `<button l-bind:[attribute]=\"[expression]\">...</button>`\r\n\r\n**Example:** `<button l-bind:title=\"key\">...</button>`"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@dblclick","description":{"kind":"markdown","value":"A pointing device button is clicked twice on an element.\n\n> Note: The shorthand property for `l-bind` is `:`\r\n\r\n`l-bind` changes the value of an attribute based on the expression. If the value is a boolean, the attribute will be conditionally rendered.\r\n\r\n**Syntax:** `<button l-bind:[attribute]=\"[expression]\">...</button>`\r\n\r\n**Example:** `<button l-bind:title=\"key\">...</button>`"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@drag","description":{"kind":"markdown","value":"An element or text selection is being dragged (every 350ms).\n\n> Note: The shorthand property for `l-bind` is `:`\r\n\r\n`l-bind` changes the value of an attribute based on the expression. If the value is a boolean, the attribute will be conditionally rendered.\r\n\r\n**Syntax:** `<button l-bind:[attribute]=\"[expression]\">...</button>`\r\n\r\n**Example:** `<button l-bind:title=\"key\">...</button>`"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@dragend","description":{"kind":"markdown","value":"A drag operation is being ended (by releasing a mouse button or hitting the escape key).\n\n> Note: The shorthand property for `l-bind` is `:`\r\n\r\n`l-bind` changes the value of an attribute based on the expression. If the value is a boolean, the attribute will be conditionally rendered.\r\n\r\n**Syntax:** `<button l-bind:[attribute]=\"[expression]\">...</button>`\r\n\r\n**Example:** `<button l-bind:title=\"key\">...</button>`"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@dragenter","description":{"kind":"markdown","value":"A dragged element or text selection enters a valid drop target.\n\n> Note: The shorthand property for `l-bind` is `:`\r\n\r\n`l-bind` changes the value of an attribute based on the expression. If the value is a boolean, the attribute will be conditionally rendered.\r\n\r\n**Syntax:** `<button l-bind:[attribute]=\"[expression]\">...</button>`\r\n\r\n**Example:** `<button l-bind:title=\"key\">...</button>`"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@dragleave","description":{"kind":"markdown","value":"A dragged element or text selection leaves a valid drop target.\n\n> Note: The shorthand property for `l-bind` is `:`\r\n\r\n`l-bind` changes the value of an attribute based on the expression. If the value is a boolean, the attribute will be conditionally rendered.\r\n\r\n**Syntax:** `<button l-bind:[attribute]=\"[expression]\">...</button>`\r\n\r\n**Example:** `<button l-bind:title=\"key\">...</button>`"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@dragover","description":{"kind":"markdown","value":"An element or text selection is being dragged over a valid drop target (every 350ms).\n\n> Note: The shorthand property for `l-bind` is `:`\r\n\r\n`l-bind` changes the value of an attribute based on the expression. If the value is a boolean, the attribute will be conditionally rendered.\r\n\r\n**Syntax:** `<button l-bind:[attribute]=\"[expression]\">...</button>`\r\n\r\n**Example:** `<button l-bind:title=\"key\">...</button>`"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@dragstart","description":{"kind":"markdown","value":"The user starts dragging an element or text selection.\n\n> Note: The shorthand property for `l-bind` is `:`\r\n\r\n`l-bind` changes the value of an attribute based on the expression. If the value is a boolean, the attribute will be conditionally rendered.\r\n\r\n**Syntax:** `<button l-bind:[attribute]=\"[expression]\">...</button>`\r\n\r\n**Example:** `<button l-bind:title=\"key\">...</button>`"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@drop","description":{"kind":"markdown","value":"An element is dropped on a valid drop target.\n\n> Note: The shorthand property for `l-bind` is `:`\r\n\r\n`l-bind` changes the value of an attribute based on the expression. If the value is a boolean, the attribute will be conditionally rendered.\r\n\r\n**Syntax:** `<button l-bind:[attribute]=\"[expression]\">...</button>`\r\n\r\n**Example:** `<button l-bind:title=\"key\">...</button>`"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@durationchange","description":{"kind":"markdown","value":"The duration attribute has been updated.\n\n> Note: The shorthand property for `l-bind` is `:`\r\n\r\n`l-bind` changes the value of an attribute based on the expression. If the value is a boolean, the attribute will be conditionally rendered.\r\n\r\n**Syntax:** `<button l-bind:[attribute]=\"[expression]\">...</button>`\r\n\r\n**Example:** `<button l-bind:title=\"key\">...</button>`"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@emptied","description":{"kind":"markdown","value":"The media has become empty; for example, this event is sent if the media has already been loaded (or partially loaded), and the load() method is called to reload it.\n\n> Note: The shorthand property for `l-bind` is `:`\r\n\r\n`l-bind` changes the value of an attribute based on the expression. If the value is a boolean, the attribute will be conditionally rendered.\r\n\r\n**Syntax:** `<button l-bind:[attribute]=\"[expression]\">...</button>`\r\n\r\n**Example:** `<button l-bind:title=\"key\">...</button>`"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@ended","description":{"kind":"markdown","value":"Playback has stopped because the end of the media was reached.\n\n> Note: The shorthand property for `l-bind` is `:`\r\n\r\n`l-bind` changes the value of an attribute based on the expression. If the value is a boolean, the attribute will be conditionally rendered.\r\n\r\n**Syntax:** `<button l-bind:[attribute]=\"[expression]\">...</button>`\r\n\r\n**Example:** `<button l-bind:title=\"key\">...</button>`"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@error","description":{"kind":"markdown","value":"A resource failed to load.\n\n> Note: The shorthand property for `l-bind` is `:`\r\n\r\n`l-bind` changes the value of an attribute based on the expression. If the value is a boolean, the attribute will be conditionally rendered.\r\n\r\n**Syntax:** `<button l-bind:[attribute]=\"[expression]\">...</button>`\r\n\r\n**Example:** `<button l-bind:title=\"key\">...</button>`"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@focus","description":{"kind":"markdown","value":"An element has received focus (does not bubble).\n\n> Note: The shorthand property for `l-bind` is `:`\r\n\r\n`l-bind` changes the value of an attribute based on the expression. If the value is a boolean, the attribute will be conditionally rendered.\r\n\r\n**Syntax:** `<button l-bind:[attribute]=\"[expression]\">...</button>`\r\n\r\n**Example:** `<button l-bind:title=\"key\">...</button>`"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@input","description":{"kind":"markdown","value":"The value of an element changes or the content of an element with the attribute contenteditable is modified.\n\n> Note: The shorthand property for `l-bind` is `:`\r\n\r\n`l-bind` changes the value of an attribute based on the expression. If the value is a boolean, the attribute will be conditionally rendered.\r\n\r\n**Syntax:** `<button l-bind:[attribute]=\"[expression]\">...</button>`\r\n\r\n**Example:** `<button l-bind:title=\"key\">...</button>`"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@invalid","description":{"kind":"markdown","value":"A submittable element has been checked and doesn't satisfy its constraints.\n\n> Note: The shorthand property for `l-bind` is `:`\r\n\r\n`l-bind` changes the value of an attribute based on the expression. If the value is a boolean, the attribute will be conditionally rendered.\r\n\r\n**Syntax:** `<button l-bind:[attribute]=\"[expression]\">...</button>`\r\n\r\n**Example:** `<button l-bind:title=\"key\">...</button>`"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@keydown","description":{"kind":"markdown","value":"A key is pressed down.\n\n> Note: The shorthand property for `l-bind` is `:`\r\n\r\n`l-bind` changes the value of an attribute based on the expression. If the value is a boolean, the attribute will be conditionally rendered.\r\n\r\n**Syntax:** `<button l-bind:[attribute]=\"[expression]\">...</button>`\r\n\r\n**Example:** `<button l-bind:title=\"key\">...</button>`"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@keypress","description":{"kind":"markdown","value":"A key is pressed down and that key normally produces a character value (use input instead).\n\n> Note: The shorthand property for `l-bind` is `:`\r\n\r\n`l-bind` changes the value of an attribute based on the expression. If the value is a boolean, the attribute will be conditionally rendered.\r\n\r\n**Syntax:** `<button l-bind:[attribute]=\"[expression]\">...</button>`\r\n\r\n**Example:** `<button l-bind:title=\"key\">...</button>`"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@keyup","description":{"kind":"markdown","value":"A key is released.\n\n> Note: The shorthand property for `l-bind` is `:`\r\n\r\n`l-bind` changes the value of an attribute based on the expression. If the value is a boolean, the attribute will be conditionally rendered.\r\n\r\n**Syntax:** `<button l-bind:[attribute]=\"[expression]\">...</button>`\r\n\r\n**Example:** `<button l-bind:title=\"key\">...</button>`"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@load","description":{"kind":"markdown","value":"A resource and its dependent resources have finished loading.\n\n> Note: The shorthand property for `l-bind` is `:`\r\n\r\n`l-bind` changes the value of an attribute based on the expression. If the value is a boolean, the attribute will be conditionally rendered.\r\n\r\n**Syntax:** `<button l-bind:[attribute]=\"[expression]\">...</button>`\r\n\r\n**Example:** `<button l-bind:title=\"key\">...</button>`"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@loadeddata","description":{"kind":"markdown","value":"The first frame of the media has finished loading.\n\n> Note: The shorthand property for `l-bind` is `:`\r\n\r\n`l-bind` changes the value of an attribute based on the expression. If the value is a boolean, the attribute will be conditionally rendered.\r\n\r\n**Syntax:** `<button l-bind:[attribute]=\"[expression]\">...</button>`\r\n\r\n**Example:** `<button l-bind:title=\"key\">...</button>`"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@loadedmetadata","description":{"kind":"markdown","value":"The metadata has been loaded.\n\n> Note: The shorthand property for `l-bind` is `:`\r\n\r\n`l-bind` changes the value of an attribute based on the expression. If the value is a boolean, the attribute will be conditionally rendered.\r\n\r\n**Syntax:** `<button l-bind:[attribute]=\"[expression]\">...</button>`\r\n\r\n**Example:** `<button l-bind:title=\"key\">...</button>`"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@loadstart","description":{"kind":"markdown","value":"Progress has begun.\n\n> Note: The shorthand property for `l-bind` is `:`\r\n\r\n`l-bind` changes the value of an attribute based on the expression. If the value is a boolean, the attribute will be conditionally rendered.\r\n\r\n**Syntax:** `<button l-bind:[attribute]=\"[expression]\">...</button>`\r\n\r\n**Example:** `<button l-bind:title=\"key\">...</button>`"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@mousedown","description":{"kind":"markdown","value":"A pointing device button (usually a mouse) is pressed on an element.\n\n> Note: The shorthand property for `l-bind` is `:`\r\n\r\n`l-bind` changes the value of an attribute based on the expression. If the value is a boolean, the attribute will be conditionally rendered.\r\n\r\n**Syntax:** `<button l-bind:[attribute]=\"[expression]\">...</button>`\r\n\r\n**Example:** `<button l-bind:title=\"key\">...</button>`"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@mousemove","description":{"kind":"markdown","value":"A pointing device is moved over an element.\n\n> Note: The shorthand property for `l-bind` is `:`\r\n\r\n`l-bind` changes the value of an attribute based on the expression. If the value is a boolean, the attribute will be conditionally rendered.\r\n\r\n**Syntax:** `<button l-bind:[attribute]=\"[expression]\">...</button>`\r\n\r\n**Example:** `<button l-bind:title=\"key\">...</button>`"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@mouseout","description":{"kind":"markdown","value":"A pointing device is moved off the element that has the listener attached or off one of its children.\n\n> Note: The shorthand property for `l-bind` is `:`\r\n\r\n`l-bind` changes the value of an attribute based on the expression. If the value is a boolean, the attribute will be conditionally rendered.\r\n\r\n**Syntax:** `<button l-bind:[attribute]=\"[expression]\">...</button>`\r\n\r\n**Example:** `<button l-bind:title=\"key\">...</button>`"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@mouseover","description":{"kind":"markdown","value":"A pointing device is moved onto the element that has the listener attached or onto one of its children.\n\n> Note: The shorthand property for `l-bind` is `:`\r\n\r\n`l-bind` changes the value of an attribute based on the expression. If the value is a boolean, the attribute will be conditionally rendered.\r\n\r\n**Syntax:** `<button l-bind:[attribute]=\"[expression]\">...</button>`\r\n\r\n**Example:** `<button l-bind:title=\"key\">...</button>`"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@mouseup","description":{"kind":"markdown","value":"A pointing device button is released over an element.\n\n> Note: The shorthand property for `l-bind` is `:`\r\n\r\n`l-bind` changes the value of an attribute based on the expression. If the value is a boolean, the attribute will be conditionally rendered.\r\n\r\n**Syntax:** `<button l-bind:[attribute]=\"[expression]\">...</button>`\r\n\r\n**Example:** `<button l-bind:title=\"key\">...</button>`"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@pause","description":{"kind":"markdown","value":"Playback has been paused.\n\n> Note: The shorthand property for `l-bind` is `:`\r\n\r\n`l-bind` changes the value of an attribute based on the expression. If the value is a boolean, the attribute will be conditionally rendered.\r\n\r\n**Syntax:** `<button l-bind:[attribute]=\"[expression]\">...</button>`\r\n\r\n**Example:** `<button l-bind:title=\"key\">...</button>`"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@play","description":{"kind":"markdown","value":"Playback has begun.\n\n> Note: The shorthand property for `l-bind` is `:`\r\n\r\n`l-bind` changes the value of an attribute based on the expression. If the value is a boolean, the attribute will be conditionally rendered.\r\n\r\n**Syntax:** `<button l-bind:[attribute]=\"[expression]\">...</button>`\r\n\r\n**Example:** `<button l-bind:title=\"key\">...</button>`"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@playing","description":{"kind":"markdown","value":"Playback is ready to start after having been paused or delayed due to lack of data.\n\n> Note: The shorthand property for `l-bind` is `:`\r\n\r\n`l-bind` changes the value of an attribute based on the expression. If the value is a boolean, the attribute will be conditionally rendered.\r\n\r\n**Syntax:** `<button l-bind:[attribute]=\"[expression]\">...</button>`\r\n\r\n**Example:** `<button l-bind:title=\"key\">...</button>`"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@progress","description":{"kind":"markdown","value":"In progress.\n\n> Note: The shorthand property for `l-bind` is `:`\r\n\r\n`l-bind` changes the value of an attribute based on the expression. If the value is a boolean, the attribute will be conditionally rendered.\r\n\r\n**Syntax:** `<button l-bind:[attribute]=\"[expression]\">...</button>`\r\n\r\n**Example:** `<button l-bind:title=\"key\">...</button>`"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@ratechange","description":{"kind":"markdown","value":"The playback rate has changed.\n\n> Note: The shorthand property for `l-bind` is `:`\r\n\r\n`l-bind` changes the value of an attribute based on the expression. If the value is a boolean, the attribute will be conditionally rendered.\r\n\r\n**Syntax:** `<button l-bind:[attribute]=\"[expression]\">...</button>`\r\n\r\n**Example:** `<button l-bind:title=\"key\">...</button>`"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@reset","description":{"kind":"markdown","value":"A form is reset.\n\n> Note: The shorthand property for `l-bind` is `:`\r\n\r\n`l-bind` changes the value of an attribute based on the expression. If the value is a boolean, the attribute will be conditionally rendered.\r\n\r\n**Syntax:** `<button l-bind:[attribute]=\"[expression]\">...</button>`\r\n\r\n**Example:** `<button l-bind:title=\"key\">...</button>`"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@resize","description":{"kind":"markdown","value":"The document view has been resized.\n\n> Note: The shorthand property for `l-bind` is `:`\r\n\r\n`l-bind` changes the value of an attribute based on the expression. If the value is a boolean, the attribute will be conditionally rendered.\r\n\r\n**Syntax:** `<button l-bind:[attribute]=\"[expression]\">...</button>`\r\n\r\n**Example:** `<button l-bind:title=\"key\">...</button>`"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@readystatechange","description":{"kind":"markdown","value":"The readyState attribute of a document has changed.\n\n> Note: The shorthand property for `l-bind` is `:`\r\n\r\n`l-bind` changes the value of an attribute based on the expression. If the value is a boolean, the attribute will be conditionally rendered.\r\n\r\n**Syntax:** `<button l-bind:[attribute]=\"[expression]\">...</button>`\r\n\r\n**Example:** `<button l-bind:title=\"key\">...</button>`"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@scroll","description":{"kind":"markdown","value":"The document view or an element has been scrolled.\n\n> Note: The shorthand property for `l-bind` is `:`\r\n\r\n`l-bind` changes the value of an attribute based on the expression. If the value is a boolean, the attribute will be conditionally rendered.\r\n\r\n**Syntax:** `<button l-bind:[attribute]=\"[expression]\">...</button>`\r\n\r\n**Example:** `<button l-bind:title=\"key\">...</button>`"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@seeked","description":{"kind":"markdown","value":"A seek operation completed.\n\n> Note: The shorthand property for `l-bind` is `:`\r\n\r\n`l-bind` changes the value of an attribute based on the expression. If the value is a boolean, the attribute will be conditionally rendered.\r\n\r\n**Syntax:** `<button l-bind:[attribute]=\"[expression]\">...</button>`\r\n\r\n**Example:** `<button l-bind:title=\"key\">...</button>`"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@seeking","description":{"kind":"markdown","value":"A seek operation began.\n\n> Note: The shorthand property for `l-bind` is `:`\r\n\r\n`l-bind` changes the value of an attribute based on the expression. If the value is a boolean, the attribute will be conditionally rendered.\r\n\r\n**Syntax:** `<button l-bind:[attribute]=\"[expression]\">...</button>`\r\n\r\n**Example:** `<button l-bind:title=\"key\">...</button>`"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@select","description":{"kind":"markdown","value":"Some text is being selected.\n\n> Note: The shorthand property for `l-bind` is `:`\r\n\r\n`l-bind` changes the value of an attribute based on the expression. If the value is a boolean, the attribute will be conditionally rendered.\r\n\r\n**Syntax:** `<button l-bind:[attribute]=\"[expression]\">...</button>`\r\n\r\n**Example:** `<button l-bind:title=\"key\">...</button>`"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@show","description":{"kind":"markdown","value":"A contextmenu event was fired on/bubbled to an element that has a contextmenu attribute\n\n> Note: The shorthand property for `l-bind` is `:`\r\n\r\n`l-bind` changes the value of an attribute based on the expression. If the value is a boolean, the attribute will be conditionally rendered.\r\n\r\n**Syntax:** `<button l-bind:[attribute]=\"[expression]\">...</button>`\r\n\r\n**Example:** `<button l-bind:title=\"key\">...</button>`"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@stalled","description":{"kind":"markdown","value":"The user agent is trying to fetch media data, but data is unexpectedly not forthcoming.\n\n> Note: The shorthand property for `l-bind` is `:`\r\n\r\n`l-bind` changes the value of an attribute based on the expression. If the value is a boolean, the attribute will be conditionally rendered.\r\n\r\n**Syntax:** `<button l-bind:[attribute]=\"[expression]\">...</button>`\r\n\r\n**Example:** `<button l-bind:title=\"key\">...</button>`"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@submit","description":{"kind":"markdown","value":"A form is submitted.\n\n> Note: The shorthand property for `l-bind` is `:`\r\n\r\n`l-bind` changes the value of an attribute based on the expression. If the value is a boolean, the attribute will be conditionally rendered.\r\n\r\n**Syntax:** `<button l-bind:[attribute]=\"[expression]\">...</button>`\r\n\r\n**Example:** `<button l-bind:title=\"key\">...</button>`"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@suspend","description":{"kind":"markdown","value":"Media data loading has been suspended.\n\n> Note: The shorthand property for `l-bind` is `:`\r\n\r\n`l-bind` changes the value of an attribute based on the expression. If the value is a boolean, the attribute will be conditionally rendered.\r\n\r\n**Syntax:** `<button l-bind:[attribute]=\"[expression]\">...</button>`\r\n\r\n**Example:** `<button l-bind:title=\"key\">...</button>`"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@timeupdate","description":{"kind":"markdown","value":"The time indicated by the currentTime attribute has been updated.\n\n> Note: The shorthand property for `l-bind` is `:`\r\n\r\n`l-bind` changes the value of an attribute based on the expression. If the value is a boolean, the attribute will be conditionally rendered.\r\n\r\n**Syntax:** `<button l-bind:[attribute]=\"[expression]\">...</button>`\r\n\r\n**Example:** `<button l-bind:title=\"key\">...</button>`"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@volumechange","description":{"kind":"markdown","value":"The volume has changed.\n\n> Note: The shorthand property for `l-bind` is `:`\r\n\r\n`l-bind` changes the value of an attribute based on the expression. If the value is a boolean, the attribute will be conditionally rendered.\r\n\r\n**Syntax:** `<button l-bind:[attribute]=\"[expression]\">...</button>`\r\n\r\n**Example:** `<button l-bind:title=\"key\">...</button>`"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@waiting","description":{"kind":"markdown","value":"Playback has stopped because of a temporary lack of data.\n\n> Note: The shorthand property for `l-bind` is `:`\r\n\r\n`l-bind` changes the value of an attribute based on the expression. If the value is a boolean, the attribute will be conditionally rendered.\r\n\r\n**Syntax:** `<button l-bind:[attribute]=\"[expression]\">...</button>`\r\n\r\n**Example:** `<button l-bind:title=\"key\">...</button>`"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-bind:class","description":{"kind":"markdown","value":"A space-separated list of the classes of the element. Classes allows CSS and JavaScript to select and access specific elements via the [class selectors](/en-US/docs/Web/CSS/Class_selectors) or functions like the method [`Document.getElementsByClassName()`](/en-US/docs/Web/API/Document/getElementsByClassName \"returns an array-like object of all child elements which have all of the given class names.\").\n\n> Note: The shorthand property for `l-bind` is `:`\r\n\r\n`l-bind` changes the value of an attribute based on the expression. If the value is a boolean, the attribute will be conditionally rendered.\r\n\r\n**Syntax:** `<button l-bind:[attribute]=\"[expression]\">...</button>`\r\n\r\n**Example:** `<button l-bind:title=\"key\">...</button>`"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/bind-directive"}]},{"name":"l-bind:disabled","description":{"kind":"markdown","value":"This Boolean attribute indicates that the user cannot interact with the control.\n\n> Note: The shorthand property for `l-bind` is `:`\r\n\r\n`l-bind` changes the value of an attribute based on the expression. If the value is a boolean, the attribute will be conditionally rendered.\r\n\r\n**Syntax:** `<button l-bind:[attribute]=\"[expression]\">...</button>`\r\n\r\n**Example:** `<button l-bind:title=\"key\">...</button>`"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/bind-directive"}]},{"name":"l-bind:readonly","description":{"kind":"markdown","value":"This Boolean attribute indicates that the user cannot modify the value of the control.\n\n> Note: The shorthand property for `l-bind` is `:`\r\n\r\n`l-bind` changes the value of an attribute based on the expression. If the value is a boolean, the attribute will be conditionally rendered.\r\n\r\n**Syntax:** `<button l-bind:[attribute]=\"[expression]\">...</button>`\r\n\r\n**Example:** `<button l-bind:title=\"key\">...</button>`"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/bind-directive"}]},{"name":"l-bind:required","description":{"kind":"markdown","value":"This attribute specifies that the user must fill in a value before submitting a form.\n\n> Note: The shorthand property for `l-bind` is `:`\r\n\r\n`l-bind` changes the value of an attribute based on the expression. If the value is a boolean, the attribute will be conditionally rendered.\r\n\r\n**Syntax:** `<button l-bind:[attribute]=\"[expression]\">...</button>`\r\n\r\n**Example:** `<button l-bind:title=\"key\">...</button>`"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/bind-directive"}]},{"name":"l-bind:checked","description":{"kind":"markdown","value":"Indicates the current \"checked\" state of checkboxes, radio buttons, and other widgets.\n\n> Note: The shorthand property for `l-bind` is `:`\r\n\r\n`l-bind` changes the value of an attribute based on the expression. If the value is a boolean, the attribute will be conditionally rendered.\r\n\r\n**Syntax:** `<button l-bind:[attribute]=\"[expression]\">...</button>`\r\n\r\n**Example:** `<button l-bind:title=\"key\">...</button>`"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/bind-directive"}]},{"name":"l-bind:hidden","description":{"kind":"markdown","value":"A Boolean attribute indicates that the element is not yet, or is no longer, _relevant_. For example, it can be used to hide elements of the page that can't be used until the login process has been completed. The browser won't render such elements. This attribute must not be used to hide content that could legitimately be shown.\n\n> Note: The shorthand property for `l-bind` is `:`\r\n\r\n`l-bind` changes the value of an attribute based on the expression. If the value is a boolean, the attribute will be conditionally rendered.\r\n\r\n**Syntax:** `<button l-bind:[attribute]=\"[expression]\">...</button>`\r\n\r\n**Example:** `<button l-bind:title=\"key\">...</button>`"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/bind-directive"}]},{"name":"l-bind:selected","description":{"kind":"markdown","value":"If present, this Boolean attribute indicates that the option is initially selected. If the `<option>` element is the descendant of a [`<select>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/select \"The HTML <select> element represents a control that provides a menu of options\") element whose [`multiple`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/select#attr-multiple) attribute is not set, only one single `<option>` of this [`<select>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/select \"The HTML <select> element represents a control that provides a menu of options\") element may have the `selected` attribute.\n\n> Note: The shorthand property for `l-bind` is `:`\r\n\r\n`l-bind` changes the value of an attribute based on the expression. If the value is a boolean, the attribute will be conditionally rendered.\r\n\r\n**Syntax:** `<button l-bind:[attribute]=\"[expression]\">...</button>`\r\n\r\n**Example:** `<button l-bind:title=\"key\">...</button>`"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/bind-directive"}]},{"name":":class","description":{"kind":"markdown","value":"A space-separated list of the classes of the element. Classes allows CSS and JavaScript to select and access specific elements via the [class selectors](/en-US/docs/Web/CSS/Class_selectors) or functions like the method [`Document.getElementsByClassName()`](/en-US/docs/Web/API/Document/getElementsByClassName \"returns an array-like object of all child elements which have all of the given class names.\").\n\n> Note: The shorthand property for `l-bind` is `:`\r\n\r\n`l-bind` changes the value of an attribute based on the expression. If the value is a boolean, the attribute will be conditionally rendered.\r\n\r\n**Syntax:** `<button l-bind:[attribute]=\"[expression]\">...</button>`\r\n\r\n**Example:** `<button l-bind:title=\"key\">...</button>`"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/bind-directive"}]},{"name":":disabled","description":{"kind":"markdown","value":"This Boolean attribute indicates that the user cannot interact with the control.\n\n> Note: The shorthand property for `l-bind` is `:`\r\n\r\n`l-bind` changes the value of an attribute based on the expression. If the value is a boolean, the attribute will be conditionally rendered.\r\n\r\n**Syntax:** `<button l-bind:[attribute]=\"[expression]\">...</button>`\r\n\r\n**Example:** `<button l-bind:title=\"key\">...</button>`"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/bind-directive"}]},{"name":":readonly","description":{"kind":"markdown","value":"This Boolean attribute indicates that the user cannot modify the value of the control.\n\n> Note: The shorthand property for `l-bind` is `:`\r\n\r\n`l-bind` changes the value of an attribute based on the expression. If the value is a boolean, the attribute will be conditionally rendered.\r\n\r\n**Syntax:** `<button l-bind:[attribute]=\"[expression]\">...</button>`\r\n\r\n**Example:** `<button l-bind:title=\"key\">...</button>`"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/bind-directive"}]},{"name":":required","description":{"kind":"markdown","value":"This attribute specifies that the user must fill in a value before submitting a form.\n\n> Note: The shorthand property for `l-bind` is `:`\r\n\r\n`l-bind` changes the value of an attribute based on the expression. If the value is a boolean, the attribute will be conditionally rendered.\r\n\r\n**Syntax:** `<button l-bind:[attribute]=\"[expression]\">...</button>`\r\n\r\n**Example:** `<button l-bind:title=\"key\">...</button>`"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/bind-directive"}]},{"name":":checked","description":{"kind":"markdown","value":"Indicates the current \"checked\" state of checkboxes, radio buttons, and other widgets.\n\n> Note: The shorthand property for `l-bind` is `:`\r\n\r\n`l-bind` changes the value of an attribute based on the expression. If the value is a boolean, the attribute will be conditionally rendered.\r\n\r\n**Syntax:** `<button l-bind:[attribute]=\"[expression]\">...</button>`\r\n\r\n**Example:** `<button l-bind:title=\"key\">...</button>`"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/bind-directive"}]},{"name":":hidden","description":{"kind":"markdown","value":"A Boolean attribute indicates that the element is not yet, or is no longer, _relevant_. For example, it can be used to hide elements of the page that can't be used until the login process has been completed. The browser won't render such elements. This attribute must not be used to hide content that could legitimately be shown.\n\n> Note: The shorthand property for `l-bind` is `:`\r\n\r\n`l-bind` changes the value of an attribute based on the expression. If the value is a boolean, the attribute will be conditionally rendered.\r\n\r\n**Syntax:** `<button l-bind:[attribute]=\"[expression]\">...</button>`\r\n\r\n**Example:** `<button l-bind:title=\"key\">...</button>`"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/bind-directive"}]},{"name":":selected","description":{"kind":"markdown","value":"If present, this Boolean attribute indicates that the option is initially selected. If the `<option>` element is the descendant of a [`<select>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/select \"The HTML <select> element represents a control that provides a menu of options\") element whose [`multiple`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/select#attr-multiple) attribute is not set, only one single `<option>` of this [`<select>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/select \"The HTML <select> element represents a control that provides a menu of options\") element may have the `selected` attribute.\n\n> Note: The shorthand property for `l-bind` is `:`\r\n\r\n`l-bind` changes the value of an attribute based on the expression. If the value is a boolean, the attribute will be conditionally rendered.\r\n\r\n**Syntax:** `<button l-bind:[attribute]=\"[expression]\">...</button>`\r\n\r\n**Example:** `<button l-bind:title=\"key\">...</button>`"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/bind-directive"}]},{"name":"l-for","description":{"kind":"markdown","value":"`l-for` allows for iterative rendering, where elements are created based on the value of an array. The expression must adhere to a special syntax, which is detailed below. There can only be one child element in the scope. When referencing the `item` or `index` it must be prepended with `this.`. The children under the `l-for` element cannot be components.\r\n\r\n**Syntax:** `(item, index) in array`\r\n\r\n**Example:**\r\n```html\r\n<div l-for=\"(item, index) in items\">\r\n  <p l-text=\"this.item\"></p>\r\n</div>\r\n```"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/for-directive"}]},{"name":"l-model","description":{"kind":"markdown","value":"`l-model` allows the value of the input element will be kept in sync with the value of the state property of the component, allowing two-way binding. When the input is changed, `l-model` automatically detects the values of text inputs, checkboxes, radio buttons, textareas, selects, and multiple selects.\r\n\r\n> Note: `l-model` will automatically attempt to coerce the type of the value to the same type of the state property value.\r\n\r\n**Syntax:** `<input type=\"text\" l-model=\"[prop]\">`\r\n\r\n**Example:** `<input type=\"text\" l-model=\"key\">`\r\n"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/model-directive"}]},{"name":"l-mask","description":{"kind":"markdown","value":"`l-mask` is removed when an element is rendered. If you want elements to have a certain style on load, this is really useful for you. A typical use case is to use it to hide anything you don't want to show until Lucia renders it.\r\n\r\n```css\r\n[l-mask] {\r\n  display: none;\r\n}\r\n```\r\n\r\n**Syntax:** `<div l-mask></div>`\r\n"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/mask-directive"}]}]}
