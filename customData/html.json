{"version":"1.1","globalAttributes":[{"name":"l-state","description":{"kind":"markdown","value":"`l-state` allows you to create component scopes with inline Javascript objects. This means you can pass state that can later be accessed in directives inside that scope. Components can be nested and declared inline with other directives as well.\n\n**Syntax:** `<div l-state=\"[object]\">...</div>`\n\n**Example:** `<div l-state=\"{ key: 'value' }\">...</div>`"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/state-directive"}]},{"name":"l-text","description":{"kind":"markdown","value":"`l-text` allows you to set the `textContent` of an element. Any HTML will be stringified, check out `l-html` if you want to render dynamic content.\n\n**Syntax:** `<p l-text=\"[expression]\">...</p>`\n\n**Example:** `<p l-text=\"key\">...</p>`"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/text-directive"}]},{"name":"l-html","description":{"kind":"markdown","value":"`l-html` allows you to set the `innerHTML` of an element. This directive is somewhat dangerous because it can potentially result in unintended [XSS](https://developer.mozilla.org/en-US/docs/Glossary/Cross-site_scripting).\n\n**Syntax:** `<p l-html=\"[expression]\">...</p>`\n\n**Example:** `<p l-html=\"key\">...</p>`"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/html-directive"}]},{"name":"l-show","description":{"kind":"markdown","value":"`l-show` allows you to toggles `display: none;` on an element based on whether the expression returns `true` or `false`."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/show-directive"}]},{"name":"l-ref","description":{"kind":"markdown","value":"`l-ref` allows you to specify a property that can later be accessed using the `$refs` special property."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/ref-directive"}]},{"name":"l-on:abort","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe loading of a resource has been aborted.\n\n**Property:**\n"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:abort.global","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe loading of a resource has been aborted.\n\n**Property:**\nThe `.global` property forces the event listener to be attached to the `document` instead of the target element."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:abort.self","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe loading of a resource has been aborted.\n\n**Property:**\nThe `.self` property attaches an event handler to the element, conditionally excluding the children of that element. This means that it only executes the expression when only target element is fired. This could be used for cards with additional interactives."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:abort.stop","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe loading of a resource has been aborted.\n\n**Property:**\nThe `.stop` property calls the `stopPropogation()` on the event when it is called, essentially preventing bubbling from child elements to parent elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:abort.outside","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe loading of a resource has been aborted.\n\n**Property:**\nThe `.outside` property attaches an event handler to the document, conditionally excluding the element it is attached to. This means that it only executes the expression when anything other than the target element is fired. This could be used for modals or special UI elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:abort.once","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe loading of a resource has been aborted.\n\n**Property:**\nThe `.once` property forces the event listener to only be called once, meaning that event calls after will not work. This can be useful for one-time actions, such as loading HTML into the document from Ajax."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:abort.passive","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe loading of a resource has been aborted.\n\n**Property:**\nThe `.passive` property helps with better scroll performance, especially on mobile devices."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:blur","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nAn element has lost focus (does not bubble).\n\n**Property:**\n"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:blur.global","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nAn element has lost focus (does not bubble).\n\n**Property:**\nThe `.global` property forces the event listener to be attached to the `document` instead of the target element."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:blur.self","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nAn element has lost focus (does not bubble).\n\n**Property:**\nThe `.self` property attaches an event handler to the element, conditionally excluding the children of that element. This means that it only executes the expression when only target element is fired. This could be used for cards with additional interactives."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:blur.stop","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nAn element has lost focus (does not bubble).\n\n**Property:**\nThe `.stop` property calls the `stopPropogation()` on the event when it is called, essentially preventing bubbling from child elements to parent elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:blur.outside","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nAn element has lost focus (does not bubble).\n\n**Property:**\nThe `.outside` property attaches an event handler to the document, conditionally excluding the element it is attached to. This means that it only executes the expression when anything other than the target element is fired. This could be used for modals or special UI elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:blur.once","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nAn element has lost focus (does not bubble).\n\n**Property:**\nThe `.once` property forces the event listener to only be called once, meaning that event calls after will not work. This can be useful for one-time actions, such as loading HTML into the document from Ajax."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:blur.passive","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nAn element has lost focus (does not bubble).\n\n**Property:**\nThe `.passive` property helps with better scroll performance, especially on mobile devices."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:canplay","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe user agent can play the media, but estimates that not enough data has been loaded to play the media up to its end without having to stop for further buffering of content.\n\n**Property:**\n"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:canplay.global","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe user agent can play the media, but estimates that not enough data has been loaded to play the media up to its end without having to stop for further buffering of content.\n\n**Property:**\nThe `.global` property forces the event listener to be attached to the `document` instead of the target element."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:canplay.self","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe user agent can play the media, but estimates that not enough data has been loaded to play the media up to its end without having to stop for further buffering of content.\n\n**Property:**\nThe `.self` property attaches an event handler to the element, conditionally excluding the children of that element. This means that it only executes the expression when only target element is fired. This could be used for cards with additional interactives."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:canplay.stop","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe user agent can play the media, but estimates that not enough data has been loaded to play the media up to its end without having to stop for further buffering of content.\n\n**Property:**\nThe `.stop` property calls the `stopPropogation()` on the event when it is called, essentially preventing bubbling from child elements to parent elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:canplay.outside","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe user agent can play the media, but estimates that not enough data has been loaded to play the media up to its end without having to stop for further buffering of content.\n\n**Property:**\nThe `.outside` property attaches an event handler to the document, conditionally excluding the element it is attached to. This means that it only executes the expression when anything other than the target element is fired. This could be used for modals or special UI elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:canplay.once","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe user agent can play the media, but estimates that not enough data has been loaded to play the media up to its end without having to stop for further buffering of content.\n\n**Property:**\nThe `.once` property forces the event listener to only be called once, meaning that event calls after will not work. This can be useful for one-time actions, such as loading HTML into the document from Ajax."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:canplay.passive","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe user agent can play the media, but estimates that not enough data has been loaded to play the media up to its end without having to stop for further buffering of content.\n\n**Property:**\nThe `.passive` property helps with better scroll performance, especially on mobile devices."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:canplaythrough","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe user agent can play the media up to its end without having to stop for further buffering of content.\n\n**Property:**\n"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:canplaythrough.global","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe user agent can play the media up to its end without having to stop for further buffering of content.\n\n**Property:**\nThe `.global` property forces the event listener to be attached to the `document` instead of the target element."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:canplaythrough.self","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe user agent can play the media up to its end without having to stop for further buffering of content.\n\n**Property:**\nThe `.self` property attaches an event handler to the element, conditionally excluding the children of that element. This means that it only executes the expression when only target element is fired. This could be used for cards with additional interactives."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:canplaythrough.stop","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe user agent can play the media up to its end without having to stop for further buffering of content.\n\n**Property:**\nThe `.stop` property calls the `stopPropogation()` on the event when it is called, essentially preventing bubbling from child elements to parent elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:canplaythrough.outside","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe user agent can play the media up to its end without having to stop for further buffering of content.\n\n**Property:**\nThe `.outside` property attaches an event handler to the document, conditionally excluding the element it is attached to. This means that it only executes the expression when anything other than the target element is fired. This could be used for modals or special UI elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:canplaythrough.once","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe user agent can play the media up to its end without having to stop for further buffering of content.\n\n**Property:**\nThe `.once` property forces the event listener to only be called once, meaning that event calls after will not work. This can be useful for one-time actions, such as loading HTML into the document from Ajax."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:canplaythrough.passive","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe user agent can play the media up to its end without having to stop for further buffering of content.\n\n**Property:**\nThe `.passive` property helps with better scroll performance, especially on mobile devices."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:change","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe change event is fired for <input>, <select>, and <textarea> elements when a change to the element's value is committed by the user.\n\n**Property:**\n"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:change.global","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe change event is fired for <input>, <select>, and <textarea> elements when a change to the element's value is committed by the user.\n\n**Property:**\nThe `.global` property forces the event listener to be attached to the `document` instead of the target element."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:change.self","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe change event is fired for <input>, <select>, and <textarea> elements when a change to the element's value is committed by the user.\n\n**Property:**\nThe `.self` property attaches an event handler to the element, conditionally excluding the children of that element. This means that it only executes the expression when only target element is fired. This could be used for cards with additional interactives."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:change.stop","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe change event is fired for <input>, <select>, and <textarea> elements when a change to the element's value is committed by the user.\n\n**Property:**\nThe `.stop` property calls the `stopPropogation()` on the event when it is called, essentially preventing bubbling from child elements to parent elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:change.outside","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe change event is fired for <input>, <select>, and <textarea> elements when a change to the element's value is committed by the user.\n\n**Property:**\nThe `.outside` property attaches an event handler to the document, conditionally excluding the element it is attached to. This means that it only executes the expression when anything other than the target element is fired. This could be used for modals or special UI elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:change.once","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe change event is fired for <input>, <select>, and <textarea> elements when a change to the element's value is committed by the user.\n\n**Property:**\nThe `.once` property forces the event listener to only be called once, meaning that event calls after will not work. This can be useful for one-time actions, such as loading HTML into the document from Ajax."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:change.passive","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe change event is fired for <input>, <select>, and <textarea> elements when a change to the element's value is committed by the user.\n\n**Property:**\nThe `.passive` property helps with better scroll performance, especially on mobile devices."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:click","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA pointing device button has been pressed and released on an element.\n\n**Property:**\n"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:click.global","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA pointing device button has been pressed and released on an element.\n\n**Property:**\nThe `.global` property forces the event listener to be attached to the `document` instead of the target element."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:click.self","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA pointing device button has been pressed and released on an element.\n\n**Property:**\nThe `.self` property attaches an event handler to the element, conditionally excluding the children of that element. This means that it only executes the expression when only target element is fired. This could be used for cards with additional interactives."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:click.stop","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA pointing device button has been pressed and released on an element.\n\n**Property:**\nThe `.stop` property calls the `stopPropogation()` on the event when it is called, essentially preventing bubbling from child elements to parent elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:click.outside","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA pointing device button has been pressed and released on an element.\n\n**Property:**\nThe `.outside` property attaches an event handler to the document, conditionally excluding the element it is attached to. This means that it only executes the expression when anything other than the target element is fired. This could be used for modals or special UI elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:click.once","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA pointing device button has been pressed and released on an element.\n\n**Property:**\nThe `.once` property forces the event listener to only be called once, meaning that event calls after will not work. This can be useful for one-time actions, such as loading HTML into the document from Ajax."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:click.passive","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA pointing device button has been pressed and released on an element.\n\n**Property:**\nThe `.passive` property helps with better scroll performance, especially on mobile devices."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:contextmenu","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe right button of the mouse is clicked (before the context menu is displayed).\n\n**Property:**\n"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:contextmenu.global","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe right button of the mouse is clicked (before the context menu is displayed).\n\n**Property:**\nThe `.global` property forces the event listener to be attached to the `document` instead of the target element."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:contextmenu.self","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe right button of the mouse is clicked (before the context menu is displayed).\n\n**Property:**\nThe `.self` property attaches an event handler to the element, conditionally excluding the children of that element. This means that it only executes the expression when only target element is fired. This could be used for cards with additional interactives."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:contextmenu.stop","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe right button of the mouse is clicked (before the context menu is displayed).\n\n**Property:**\nThe `.stop` property calls the `stopPropogation()` on the event when it is called, essentially preventing bubbling from child elements to parent elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:contextmenu.outside","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe right button of the mouse is clicked (before the context menu is displayed).\n\n**Property:**\nThe `.outside` property attaches an event handler to the document, conditionally excluding the element it is attached to. This means that it only executes the expression when anything other than the target element is fired. This could be used for modals or special UI elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:contextmenu.once","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe right button of the mouse is clicked (before the context menu is displayed).\n\n**Property:**\nThe `.once` property forces the event listener to only be called once, meaning that event calls after will not work. This can be useful for one-time actions, such as loading HTML into the document from Ajax."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:contextmenu.passive","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe right button of the mouse is clicked (before the context menu is displayed).\n\n**Property:**\nThe `.passive` property helps with better scroll performance, especially on mobile devices."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:dblclick","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA pointing device button is clicked twice on an element.\n\n**Property:**\n"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:dblclick.global","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA pointing device button is clicked twice on an element.\n\n**Property:**\nThe `.global` property forces the event listener to be attached to the `document` instead of the target element."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:dblclick.self","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA pointing device button is clicked twice on an element.\n\n**Property:**\nThe `.self` property attaches an event handler to the element, conditionally excluding the children of that element. This means that it only executes the expression when only target element is fired. This could be used for cards with additional interactives."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:dblclick.stop","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA pointing device button is clicked twice on an element.\n\n**Property:**\nThe `.stop` property calls the `stopPropogation()` on the event when it is called, essentially preventing bubbling from child elements to parent elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:dblclick.outside","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA pointing device button is clicked twice on an element.\n\n**Property:**\nThe `.outside` property attaches an event handler to the document, conditionally excluding the element it is attached to. This means that it only executes the expression when anything other than the target element is fired. This could be used for modals or special UI elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:dblclick.once","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA pointing device button is clicked twice on an element.\n\n**Property:**\nThe `.once` property forces the event listener to only be called once, meaning that event calls after will not work. This can be useful for one-time actions, such as loading HTML into the document from Ajax."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:dblclick.passive","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA pointing device button is clicked twice on an element.\n\n**Property:**\nThe `.passive` property helps with better scroll performance, especially on mobile devices."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:drag","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nAn element or text selection is being dragged (every 350ms).\n\n**Property:**\n"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:drag.global","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nAn element or text selection is being dragged (every 350ms).\n\n**Property:**\nThe `.global` property forces the event listener to be attached to the `document` instead of the target element."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:drag.self","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nAn element or text selection is being dragged (every 350ms).\n\n**Property:**\nThe `.self` property attaches an event handler to the element, conditionally excluding the children of that element. This means that it only executes the expression when only target element is fired. This could be used for cards with additional interactives."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:drag.stop","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nAn element or text selection is being dragged (every 350ms).\n\n**Property:**\nThe `.stop` property calls the `stopPropogation()` on the event when it is called, essentially preventing bubbling from child elements to parent elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:drag.outside","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nAn element or text selection is being dragged (every 350ms).\n\n**Property:**\nThe `.outside` property attaches an event handler to the document, conditionally excluding the element it is attached to. This means that it only executes the expression when anything other than the target element is fired. This could be used for modals or special UI elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:drag.once","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nAn element or text selection is being dragged (every 350ms).\n\n**Property:**\nThe `.once` property forces the event listener to only be called once, meaning that event calls after will not work. This can be useful for one-time actions, such as loading HTML into the document from Ajax."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:drag.passive","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nAn element or text selection is being dragged (every 350ms).\n\n**Property:**\nThe `.passive` property helps with better scroll performance, especially on mobile devices."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:dragend","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA drag operation is being ended (by releasing a mouse button or hitting the escape key).\n\n**Property:**\n"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:dragend.global","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA drag operation is being ended (by releasing a mouse button or hitting the escape key).\n\n**Property:**\nThe `.global` property forces the event listener to be attached to the `document` instead of the target element."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:dragend.self","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA drag operation is being ended (by releasing a mouse button or hitting the escape key).\n\n**Property:**\nThe `.self` property attaches an event handler to the element, conditionally excluding the children of that element. This means that it only executes the expression when only target element is fired. This could be used for cards with additional interactives."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:dragend.stop","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA drag operation is being ended (by releasing a mouse button or hitting the escape key).\n\n**Property:**\nThe `.stop` property calls the `stopPropogation()` on the event when it is called, essentially preventing bubbling from child elements to parent elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:dragend.outside","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA drag operation is being ended (by releasing a mouse button or hitting the escape key).\n\n**Property:**\nThe `.outside` property attaches an event handler to the document, conditionally excluding the element it is attached to. This means that it only executes the expression when anything other than the target element is fired. This could be used for modals or special UI elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:dragend.once","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA drag operation is being ended (by releasing a mouse button or hitting the escape key).\n\n**Property:**\nThe `.once` property forces the event listener to only be called once, meaning that event calls after will not work. This can be useful for one-time actions, such as loading HTML into the document from Ajax."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:dragend.passive","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA drag operation is being ended (by releasing a mouse button or hitting the escape key).\n\n**Property:**\nThe `.passive` property helps with better scroll performance, especially on mobile devices."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:dragenter","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA dragged element or text selection enters a valid drop target.\n\n**Property:**\n"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:dragenter.global","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA dragged element or text selection enters a valid drop target.\n\n**Property:**\nThe `.global` property forces the event listener to be attached to the `document` instead of the target element."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:dragenter.self","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA dragged element or text selection enters a valid drop target.\n\n**Property:**\nThe `.self` property attaches an event handler to the element, conditionally excluding the children of that element. This means that it only executes the expression when only target element is fired. This could be used for cards with additional interactives."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:dragenter.stop","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA dragged element or text selection enters a valid drop target.\n\n**Property:**\nThe `.stop` property calls the `stopPropogation()` on the event when it is called, essentially preventing bubbling from child elements to parent elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:dragenter.outside","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA dragged element or text selection enters a valid drop target.\n\n**Property:**\nThe `.outside` property attaches an event handler to the document, conditionally excluding the element it is attached to. This means that it only executes the expression when anything other than the target element is fired. This could be used for modals or special UI elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:dragenter.once","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA dragged element or text selection enters a valid drop target.\n\n**Property:**\nThe `.once` property forces the event listener to only be called once, meaning that event calls after will not work. This can be useful for one-time actions, such as loading HTML into the document from Ajax."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:dragenter.passive","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA dragged element or text selection enters a valid drop target.\n\n**Property:**\nThe `.passive` property helps with better scroll performance, especially on mobile devices."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:dragleave","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA dragged element or text selection leaves a valid drop target.\n\n**Property:**\n"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:dragleave.global","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA dragged element or text selection leaves a valid drop target.\n\n**Property:**\nThe `.global` property forces the event listener to be attached to the `document` instead of the target element."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:dragleave.self","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA dragged element or text selection leaves a valid drop target.\n\n**Property:**\nThe `.self` property attaches an event handler to the element, conditionally excluding the children of that element. This means that it only executes the expression when only target element is fired. This could be used for cards with additional interactives."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:dragleave.stop","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA dragged element or text selection leaves a valid drop target.\n\n**Property:**\nThe `.stop` property calls the `stopPropogation()` on the event when it is called, essentially preventing bubbling from child elements to parent elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:dragleave.outside","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA dragged element or text selection leaves a valid drop target.\n\n**Property:**\nThe `.outside` property attaches an event handler to the document, conditionally excluding the element it is attached to. This means that it only executes the expression when anything other than the target element is fired. This could be used for modals or special UI elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:dragleave.once","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA dragged element or text selection leaves a valid drop target.\n\n**Property:**\nThe `.once` property forces the event listener to only be called once, meaning that event calls after will not work. This can be useful for one-time actions, such as loading HTML into the document from Ajax."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:dragleave.passive","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA dragged element or text selection leaves a valid drop target.\n\n**Property:**\nThe `.passive` property helps with better scroll performance, especially on mobile devices."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:dragover","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nAn element or text selection is being dragged over a valid drop target (every 350ms).\n\n**Property:**\n"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:dragover.global","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nAn element or text selection is being dragged over a valid drop target (every 350ms).\n\n**Property:**\nThe `.global` property forces the event listener to be attached to the `document` instead of the target element."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:dragover.self","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nAn element or text selection is being dragged over a valid drop target (every 350ms).\n\n**Property:**\nThe `.self` property attaches an event handler to the element, conditionally excluding the children of that element. This means that it only executes the expression when only target element is fired. This could be used for cards with additional interactives."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:dragover.stop","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nAn element or text selection is being dragged over a valid drop target (every 350ms).\n\n**Property:**\nThe `.stop` property calls the `stopPropogation()` on the event when it is called, essentially preventing bubbling from child elements to parent elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:dragover.outside","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nAn element or text selection is being dragged over a valid drop target (every 350ms).\n\n**Property:**\nThe `.outside` property attaches an event handler to the document, conditionally excluding the element it is attached to. This means that it only executes the expression when anything other than the target element is fired. This could be used for modals or special UI elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:dragover.once","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nAn element or text selection is being dragged over a valid drop target (every 350ms).\n\n**Property:**\nThe `.once` property forces the event listener to only be called once, meaning that event calls after will not work. This can be useful for one-time actions, such as loading HTML into the document from Ajax."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:dragover.passive","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nAn element or text selection is being dragged over a valid drop target (every 350ms).\n\n**Property:**\nThe `.passive` property helps with better scroll performance, especially on mobile devices."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:dragstart","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe user starts dragging an element or text selection.\n\n**Property:**\n"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:dragstart.global","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe user starts dragging an element or text selection.\n\n**Property:**\nThe `.global` property forces the event listener to be attached to the `document` instead of the target element."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:dragstart.self","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe user starts dragging an element or text selection.\n\n**Property:**\nThe `.self` property attaches an event handler to the element, conditionally excluding the children of that element. This means that it only executes the expression when only target element is fired. This could be used for cards with additional interactives."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:dragstart.stop","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe user starts dragging an element or text selection.\n\n**Property:**\nThe `.stop` property calls the `stopPropogation()` on the event when it is called, essentially preventing bubbling from child elements to parent elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:dragstart.outside","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe user starts dragging an element or text selection.\n\n**Property:**\nThe `.outside` property attaches an event handler to the document, conditionally excluding the element it is attached to. This means that it only executes the expression when anything other than the target element is fired. This could be used for modals or special UI elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:dragstart.once","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe user starts dragging an element or text selection.\n\n**Property:**\nThe `.once` property forces the event listener to only be called once, meaning that event calls after will not work. This can be useful for one-time actions, such as loading HTML into the document from Ajax."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:dragstart.passive","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe user starts dragging an element or text selection.\n\n**Property:**\nThe `.passive` property helps with better scroll performance, especially on mobile devices."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:drop","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nAn element is dropped on a valid drop target.\n\n**Property:**\n"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:drop.global","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nAn element is dropped on a valid drop target.\n\n**Property:**\nThe `.global` property forces the event listener to be attached to the `document` instead of the target element."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:drop.self","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nAn element is dropped on a valid drop target.\n\n**Property:**\nThe `.self` property attaches an event handler to the element, conditionally excluding the children of that element. This means that it only executes the expression when only target element is fired. This could be used for cards with additional interactives."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:drop.stop","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nAn element is dropped on a valid drop target.\n\n**Property:**\nThe `.stop` property calls the `stopPropogation()` on the event when it is called, essentially preventing bubbling from child elements to parent elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:drop.outside","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nAn element is dropped on a valid drop target.\n\n**Property:**\nThe `.outside` property attaches an event handler to the document, conditionally excluding the element it is attached to. This means that it only executes the expression when anything other than the target element is fired. This could be used for modals or special UI elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:drop.once","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nAn element is dropped on a valid drop target.\n\n**Property:**\nThe `.once` property forces the event listener to only be called once, meaning that event calls after will not work. This can be useful for one-time actions, such as loading HTML into the document from Ajax."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:drop.passive","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nAn element is dropped on a valid drop target.\n\n**Property:**\nThe `.passive` property helps with better scroll performance, especially on mobile devices."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:durationchange","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe duration attribute has been updated.\n\n**Property:**\n"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:durationchange.global","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe duration attribute has been updated.\n\n**Property:**\nThe `.global` property forces the event listener to be attached to the `document` instead of the target element."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:durationchange.self","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe duration attribute has been updated.\n\n**Property:**\nThe `.self` property attaches an event handler to the element, conditionally excluding the children of that element. This means that it only executes the expression when only target element is fired. This could be used for cards with additional interactives."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:durationchange.stop","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe duration attribute has been updated.\n\n**Property:**\nThe `.stop` property calls the `stopPropogation()` on the event when it is called, essentially preventing bubbling from child elements to parent elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:durationchange.outside","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe duration attribute has been updated.\n\n**Property:**\nThe `.outside` property attaches an event handler to the document, conditionally excluding the element it is attached to. This means that it only executes the expression when anything other than the target element is fired. This could be used for modals or special UI elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:durationchange.once","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe duration attribute has been updated.\n\n**Property:**\nThe `.once` property forces the event listener to only be called once, meaning that event calls after will not work. This can be useful for one-time actions, such as loading HTML into the document from Ajax."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:durationchange.passive","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe duration attribute has been updated.\n\n**Property:**\nThe `.passive` property helps with better scroll performance, especially on mobile devices."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:effect","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nWhen the element is updated by Lucia.\n\n**Property:**\n"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:effect.global","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nWhen the element is updated by Lucia.\n\n**Property:**\nThe `.global` property forces the event listener to be attached to the `document` instead of the target element."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:effect.self","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nWhen the element is updated by Lucia.\n\n**Property:**\nThe `.self` property attaches an event handler to the element, conditionally excluding the children of that element. This means that it only executes the expression when only target element is fired. This could be used for cards with additional interactives."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:effect.stop","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nWhen the element is updated by Lucia.\n\n**Property:**\nThe `.stop` property calls the `stopPropogation()` on the event when it is called, essentially preventing bubbling from child elements to parent elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:effect.outside","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nWhen the element is updated by Lucia.\n\n**Property:**\nThe `.outside` property attaches an event handler to the document, conditionally excluding the element it is attached to. This means that it only executes the expression when anything other than the target element is fired. This could be used for modals or special UI elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:effect.once","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nWhen the element is updated by Lucia.\n\n**Property:**\nThe `.once` property forces the event listener to only be called once, meaning that event calls after will not work. This can be useful for one-time actions, such as loading HTML into the document from Ajax."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:effect.passive","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nWhen the element is updated by Lucia.\n\n**Property:**\nThe `.passive` property helps with better scroll performance, especially on mobile devices."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:emptied","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe media has become empty; for example, this event is sent if the media has already been loaded (or partially loaded), and the load() method is called to reload it.\n\n**Property:**\n"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:emptied.global","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe media has become empty; for example, this event is sent if the media has already been loaded (or partially loaded), and the load() method is called to reload it.\n\n**Property:**\nThe `.global` property forces the event listener to be attached to the `document` instead of the target element."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:emptied.self","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe media has become empty; for example, this event is sent if the media has already been loaded (or partially loaded), and the load() method is called to reload it.\n\n**Property:**\nThe `.self` property attaches an event handler to the element, conditionally excluding the children of that element. This means that it only executes the expression when only target element is fired. This could be used for cards with additional interactives."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:emptied.stop","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe media has become empty; for example, this event is sent if the media has already been loaded (or partially loaded), and the load() method is called to reload it.\n\n**Property:**\nThe `.stop` property calls the `stopPropogation()` on the event when it is called, essentially preventing bubbling from child elements to parent elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:emptied.outside","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe media has become empty; for example, this event is sent if the media has already been loaded (or partially loaded), and the load() method is called to reload it.\n\n**Property:**\nThe `.outside` property attaches an event handler to the document, conditionally excluding the element it is attached to. This means that it only executes the expression when anything other than the target element is fired. This could be used for modals or special UI elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:emptied.once","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe media has become empty; for example, this event is sent if the media has already been loaded (or partially loaded), and the load() method is called to reload it.\n\n**Property:**\nThe `.once` property forces the event listener to only be called once, meaning that event calls after will not work. This can be useful for one-time actions, such as loading HTML into the document from Ajax."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:emptied.passive","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe media has become empty; for example, this event is sent if the media has already been loaded (or partially loaded), and the load() method is called to reload it.\n\n**Property:**\nThe `.passive` property helps with better scroll performance, especially on mobile devices."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:ended","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nPlayback has stopped because the end of the media was reached.\n\n**Property:**\n"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:ended.global","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nPlayback has stopped because the end of the media was reached.\n\n**Property:**\nThe `.global` property forces the event listener to be attached to the `document` instead of the target element."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:ended.self","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nPlayback has stopped because the end of the media was reached.\n\n**Property:**\nThe `.self` property attaches an event handler to the element, conditionally excluding the children of that element. This means that it only executes the expression when only target element is fired. This could be used for cards with additional interactives."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:ended.stop","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nPlayback has stopped because the end of the media was reached.\n\n**Property:**\nThe `.stop` property calls the `stopPropogation()` on the event when it is called, essentially preventing bubbling from child elements to parent elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:ended.outside","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nPlayback has stopped because the end of the media was reached.\n\n**Property:**\nThe `.outside` property attaches an event handler to the document, conditionally excluding the element it is attached to. This means that it only executes the expression when anything other than the target element is fired. This could be used for modals or special UI elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:ended.once","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nPlayback has stopped because the end of the media was reached.\n\n**Property:**\nThe `.once` property forces the event listener to only be called once, meaning that event calls after will not work. This can be useful for one-time actions, such as loading HTML into the document from Ajax."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:ended.passive","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nPlayback has stopped because the end of the media was reached.\n\n**Property:**\nThe `.passive` property helps with better scroll performance, especially on mobile devices."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:error","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA resource failed to load.\n\n**Property:**\n"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:error.global","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA resource failed to load.\n\n**Property:**\nThe `.global` property forces the event listener to be attached to the `document` instead of the target element."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:error.self","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA resource failed to load.\n\n**Property:**\nThe `.self` property attaches an event handler to the element, conditionally excluding the children of that element. This means that it only executes the expression when only target element is fired. This could be used for cards with additional interactives."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:error.stop","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA resource failed to load.\n\n**Property:**\nThe `.stop` property calls the `stopPropogation()` on the event when it is called, essentially preventing bubbling from child elements to parent elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:error.outside","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA resource failed to load.\n\n**Property:**\nThe `.outside` property attaches an event handler to the document, conditionally excluding the element it is attached to. This means that it only executes the expression when anything other than the target element is fired. This could be used for modals or special UI elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:error.once","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA resource failed to load.\n\n**Property:**\nThe `.once` property forces the event listener to only be called once, meaning that event calls after will not work. This can be useful for one-time actions, such as loading HTML into the document from Ajax."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:error.passive","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA resource failed to load.\n\n**Property:**\nThe `.passive` property helps with better scroll performance, especially on mobile devices."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:focus","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nAn element has received focus (does not bubble).\n\n**Property:**\n"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:focus.global","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nAn element has received focus (does not bubble).\n\n**Property:**\nThe `.global` property forces the event listener to be attached to the `document` instead of the target element."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:focus.self","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nAn element has received focus (does not bubble).\n\n**Property:**\nThe `.self` property attaches an event handler to the element, conditionally excluding the children of that element. This means that it only executes the expression when only target element is fired. This could be used for cards with additional interactives."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:focus.stop","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nAn element has received focus (does not bubble).\n\n**Property:**\nThe `.stop` property calls the `stopPropogation()` on the event when it is called, essentially preventing bubbling from child elements to parent elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:focus.outside","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nAn element has received focus (does not bubble).\n\n**Property:**\nThe `.outside` property attaches an event handler to the document, conditionally excluding the element it is attached to. This means that it only executes the expression when anything other than the target element is fired. This could be used for modals or special UI elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:focus.once","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nAn element has received focus (does not bubble).\n\n**Property:**\nThe `.once` property forces the event listener to only be called once, meaning that event calls after will not work. This can be useful for one-time actions, such as loading HTML into the document from Ajax."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:focus.passive","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nAn element has received focus (does not bubble).\n\n**Property:**\nThe `.passive` property helps with better scroll performance, especially on mobile devices."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:input","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe value of an element changes or the content of an element with the attribute contenteditable is modified.\n\n**Property:**\n"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:input.global","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe value of an element changes or the content of an element with the attribute contenteditable is modified.\n\n**Property:**\nThe `.global` property forces the event listener to be attached to the `document` instead of the target element."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:input.self","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe value of an element changes or the content of an element with the attribute contenteditable is modified.\n\n**Property:**\nThe `.self` property attaches an event handler to the element, conditionally excluding the children of that element. This means that it only executes the expression when only target element is fired. This could be used for cards with additional interactives."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:input.stop","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe value of an element changes or the content of an element with the attribute contenteditable is modified.\n\n**Property:**\nThe `.stop` property calls the `stopPropogation()` on the event when it is called, essentially preventing bubbling from child elements to parent elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:input.outside","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe value of an element changes or the content of an element with the attribute contenteditable is modified.\n\n**Property:**\nThe `.outside` property attaches an event handler to the document, conditionally excluding the element it is attached to. This means that it only executes the expression when anything other than the target element is fired. This could be used for modals or special UI elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:input.once","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe value of an element changes or the content of an element with the attribute contenteditable is modified.\n\n**Property:**\nThe `.once` property forces the event listener to only be called once, meaning that event calls after will not work. This can be useful for one-time actions, such as loading HTML into the document from Ajax."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:input.passive","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe value of an element changes or the content of an element with the attribute contenteditable is modified.\n\n**Property:**\nThe `.passive` property helps with better scroll performance, especially on mobile devices."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:invalid","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA submittable element has been checked and doesn't satisfy its constraints.\n\n**Property:**\n"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:invalid.global","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA submittable element has been checked and doesn't satisfy its constraints.\n\n**Property:**\nThe `.global` property forces the event listener to be attached to the `document` instead of the target element."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:invalid.self","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA submittable element has been checked and doesn't satisfy its constraints.\n\n**Property:**\nThe `.self` property attaches an event handler to the element, conditionally excluding the children of that element. This means that it only executes the expression when only target element is fired. This could be used for cards with additional interactives."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:invalid.stop","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA submittable element has been checked and doesn't satisfy its constraints.\n\n**Property:**\nThe `.stop` property calls the `stopPropogation()` on the event when it is called, essentially preventing bubbling from child elements to parent elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:invalid.outside","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA submittable element has been checked and doesn't satisfy its constraints.\n\n**Property:**\nThe `.outside` property attaches an event handler to the document, conditionally excluding the element it is attached to. This means that it only executes the expression when anything other than the target element is fired. This could be used for modals or special UI elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:invalid.once","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA submittable element has been checked and doesn't satisfy its constraints.\n\n**Property:**\nThe `.once` property forces the event listener to only be called once, meaning that event calls after will not work. This can be useful for one-time actions, such as loading HTML into the document from Ajax."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:invalid.passive","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA submittable element has been checked and doesn't satisfy its constraints.\n\n**Property:**\nThe `.passive` property helps with better scroll performance, especially on mobile devices."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:keydown","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA key is pressed down.\n\n**Property:**\n"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:keydown.global","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA key is pressed down.\n\n**Property:**\nThe `.global` property forces the event listener to be attached to the `document` instead of the target element."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:keydown.self","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA key is pressed down.\n\n**Property:**\nThe `.self` property attaches an event handler to the element, conditionally excluding the children of that element. This means that it only executes the expression when only target element is fired. This could be used for cards with additional interactives."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:keydown.stop","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA key is pressed down.\n\n**Property:**\nThe `.stop` property calls the `stopPropogation()` on the event when it is called, essentially preventing bubbling from child elements to parent elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:keydown.outside","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA key is pressed down.\n\n**Property:**\nThe `.outside` property attaches an event handler to the document, conditionally excluding the element it is attached to. This means that it only executes the expression when anything other than the target element is fired. This could be used for modals or special UI elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:keydown.once","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA key is pressed down.\n\n**Property:**\nThe `.once` property forces the event listener to only be called once, meaning that event calls after will not work. This can be useful for one-time actions, such as loading HTML into the document from Ajax."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:keydown.passive","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA key is pressed down.\n\n**Property:**\nThe `.passive` property helps with better scroll performance, especially on mobile devices."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:keypress","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA key is pressed down and that key normally produces a character value (use input instead).\n\n**Property:**\n"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:keypress.global","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA key is pressed down and that key normally produces a character value (use input instead).\n\n**Property:**\nThe `.global` property forces the event listener to be attached to the `document` instead of the target element."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:keypress.self","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA key is pressed down and that key normally produces a character value (use input instead).\n\n**Property:**\nThe `.self` property attaches an event handler to the element, conditionally excluding the children of that element. This means that it only executes the expression when only target element is fired. This could be used for cards with additional interactives."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:keypress.stop","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA key is pressed down and that key normally produces a character value (use input instead).\n\n**Property:**\nThe `.stop` property calls the `stopPropogation()` on the event when it is called, essentially preventing bubbling from child elements to parent elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:keypress.outside","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA key is pressed down and that key normally produces a character value (use input instead).\n\n**Property:**\nThe `.outside` property attaches an event handler to the document, conditionally excluding the element it is attached to. This means that it only executes the expression when anything other than the target element is fired. This could be used for modals or special UI elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:keypress.once","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA key is pressed down and that key normally produces a character value (use input instead).\n\n**Property:**\nThe `.once` property forces the event listener to only be called once, meaning that event calls after will not work. This can be useful for one-time actions, such as loading HTML into the document from Ajax."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:keypress.passive","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA key is pressed down and that key normally produces a character value (use input instead).\n\n**Property:**\nThe `.passive` property helps with better scroll performance, especially on mobile devices."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:keyup","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA key is released.\n\n**Property:**\n"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:keyup.global","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA key is released.\n\n**Property:**\nThe `.global` property forces the event listener to be attached to the `document` instead of the target element."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:keyup.self","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA key is released.\n\n**Property:**\nThe `.self` property attaches an event handler to the element, conditionally excluding the children of that element. This means that it only executes the expression when only target element is fired. This could be used for cards with additional interactives."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:keyup.stop","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA key is released.\n\n**Property:**\nThe `.stop` property calls the `stopPropogation()` on the event when it is called, essentially preventing bubbling from child elements to parent elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:keyup.outside","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA key is released.\n\n**Property:**\nThe `.outside` property attaches an event handler to the document, conditionally excluding the element it is attached to. This means that it only executes the expression when anything other than the target element is fired. This could be used for modals or special UI elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:keyup.once","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA key is released.\n\n**Property:**\nThe `.once` property forces the event listener to only be called once, meaning that event calls after will not work. This can be useful for one-time actions, such as loading HTML into the document from Ajax."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:keyup.passive","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA key is released.\n\n**Property:**\nThe `.passive` property helps with better scroll performance, especially on mobile devices."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:load","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA resource and its dependent resources have finished loading.\n\n**Property:**\n"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:load.global","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA resource and its dependent resources have finished loading.\n\n**Property:**\nThe `.global` property forces the event listener to be attached to the `document` instead of the target element."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:load.self","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA resource and its dependent resources have finished loading.\n\n**Property:**\nThe `.self` property attaches an event handler to the element, conditionally excluding the children of that element. This means that it only executes the expression when only target element is fired. This could be used for cards with additional interactives."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:load.stop","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA resource and its dependent resources have finished loading.\n\n**Property:**\nThe `.stop` property calls the `stopPropogation()` on the event when it is called, essentially preventing bubbling from child elements to parent elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:load.outside","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA resource and its dependent resources have finished loading.\n\n**Property:**\nThe `.outside` property attaches an event handler to the document, conditionally excluding the element it is attached to. This means that it only executes the expression when anything other than the target element is fired. This could be used for modals or special UI elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:load.once","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA resource and its dependent resources have finished loading.\n\n**Property:**\nThe `.once` property forces the event listener to only be called once, meaning that event calls after will not work. This can be useful for one-time actions, such as loading HTML into the document from Ajax."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:load.passive","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA resource and its dependent resources have finished loading.\n\n**Property:**\nThe `.passive` property helps with better scroll performance, especially on mobile devices."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:loadeddata","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe first frame of the media has finished loading.\n\n**Property:**\n"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:loadeddata.global","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe first frame of the media has finished loading.\n\n**Property:**\nThe `.global` property forces the event listener to be attached to the `document` instead of the target element."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:loadeddata.self","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe first frame of the media has finished loading.\n\n**Property:**\nThe `.self` property attaches an event handler to the element, conditionally excluding the children of that element. This means that it only executes the expression when only target element is fired. This could be used for cards with additional interactives."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:loadeddata.stop","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe first frame of the media has finished loading.\n\n**Property:**\nThe `.stop` property calls the `stopPropogation()` on the event when it is called, essentially preventing bubbling from child elements to parent elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:loadeddata.outside","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe first frame of the media has finished loading.\n\n**Property:**\nThe `.outside` property attaches an event handler to the document, conditionally excluding the element it is attached to. This means that it only executes the expression when anything other than the target element is fired. This could be used for modals or special UI elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:loadeddata.once","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe first frame of the media has finished loading.\n\n**Property:**\nThe `.once` property forces the event listener to only be called once, meaning that event calls after will not work. This can be useful for one-time actions, such as loading HTML into the document from Ajax."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:loadeddata.passive","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe first frame of the media has finished loading.\n\n**Property:**\nThe `.passive` property helps with better scroll performance, especially on mobile devices."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:loadedmetadata","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe metadata has been loaded.\n\n**Property:**\n"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:loadedmetadata.global","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe metadata has been loaded.\n\n**Property:**\nThe `.global` property forces the event listener to be attached to the `document` instead of the target element."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:loadedmetadata.self","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe metadata has been loaded.\n\n**Property:**\nThe `.self` property attaches an event handler to the element, conditionally excluding the children of that element. This means that it only executes the expression when only target element is fired. This could be used for cards with additional interactives."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:loadedmetadata.stop","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe metadata has been loaded.\n\n**Property:**\nThe `.stop` property calls the `stopPropogation()` on the event when it is called, essentially preventing bubbling from child elements to parent elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:loadedmetadata.outside","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe metadata has been loaded.\n\n**Property:**\nThe `.outside` property attaches an event handler to the document, conditionally excluding the element it is attached to. This means that it only executes the expression when anything other than the target element is fired. This could be used for modals or special UI elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:loadedmetadata.once","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe metadata has been loaded.\n\n**Property:**\nThe `.once` property forces the event listener to only be called once, meaning that event calls after will not work. This can be useful for one-time actions, such as loading HTML into the document from Ajax."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:loadedmetadata.passive","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe metadata has been loaded.\n\n**Property:**\nThe `.passive` property helps with better scroll performance, especially on mobile devices."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:loadstart","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nProgress has begun.\n\n**Property:**\n"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:loadstart.global","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nProgress has begun.\n\n**Property:**\nThe `.global` property forces the event listener to be attached to the `document` instead of the target element."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:loadstart.self","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nProgress has begun.\n\n**Property:**\nThe `.self` property attaches an event handler to the element, conditionally excluding the children of that element. This means that it only executes the expression when only target element is fired. This could be used for cards with additional interactives."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:loadstart.stop","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nProgress has begun.\n\n**Property:**\nThe `.stop` property calls the `stopPropogation()` on the event when it is called, essentially preventing bubbling from child elements to parent elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:loadstart.outside","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nProgress has begun.\n\n**Property:**\nThe `.outside` property attaches an event handler to the document, conditionally excluding the element it is attached to. This means that it only executes the expression when anything other than the target element is fired. This could be used for modals or special UI elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:loadstart.once","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nProgress has begun.\n\n**Property:**\nThe `.once` property forces the event listener to only be called once, meaning that event calls after will not work. This can be useful for one-time actions, such as loading HTML into the document from Ajax."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:loadstart.passive","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nProgress has begun.\n\n**Property:**\nThe `.passive` property helps with better scroll performance, especially on mobile devices."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:mounted","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nWhen a component is mounted onto an element, must be inline with `l-state`\n\n**Property:**\n"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:mounted.global","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nWhen a component is mounted onto an element, must be inline with `l-state`\n\n**Property:**\nThe `.global` property forces the event listener to be attached to the `document` instead of the target element."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:mounted.self","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nWhen a component is mounted onto an element, must be inline with `l-state`\n\n**Property:**\nThe `.self` property attaches an event handler to the element, conditionally excluding the children of that element. This means that it only executes the expression when only target element is fired. This could be used for cards with additional interactives."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:mounted.stop","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nWhen a component is mounted onto an element, must be inline with `l-state`\n\n**Property:**\nThe `.stop` property calls the `stopPropogation()` on the event when it is called, essentially preventing bubbling from child elements to parent elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:mounted.outside","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nWhen a component is mounted onto an element, must be inline with `l-state`\n\n**Property:**\nThe `.outside` property attaches an event handler to the document, conditionally excluding the element it is attached to. This means that it only executes the expression when anything other than the target element is fired. This could be used for modals or special UI elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:mounted.once","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nWhen a component is mounted onto an element, must be inline with `l-state`\n\n**Property:**\nThe `.once` property forces the event listener to only be called once, meaning that event calls after will not work. This can be useful for one-time actions, such as loading HTML into the document from Ajax."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:mounted.passive","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nWhen a component is mounted onto an element, must be inline with `l-state`\n\n**Property:**\nThe `.passive` property helps with better scroll performance, especially on mobile devices."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:mousedown","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA pointing device button (usually a mouse) is pressed on an element.\n\n**Property:**\n"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:mousedown.global","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA pointing device button (usually a mouse) is pressed on an element.\n\n**Property:**\nThe `.global` property forces the event listener to be attached to the `document` instead of the target element."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:mousedown.self","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA pointing device button (usually a mouse) is pressed on an element.\n\n**Property:**\nThe `.self` property attaches an event handler to the element, conditionally excluding the children of that element. This means that it only executes the expression when only target element is fired. This could be used for cards with additional interactives."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:mousedown.stop","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA pointing device button (usually a mouse) is pressed on an element.\n\n**Property:**\nThe `.stop` property calls the `stopPropogation()` on the event when it is called, essentially preventing bubbling from child elements to parent elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:mousedown.outside","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA pointing device button (usually a mouse) is pressed on an element.\n\n**Property:**\nThe `.outside` property attaches an event handler to the document, conditionally excluding the element it is attached to. This means that it only executes the expression when anything other than the target element is fired. This could be used for modals or special UI elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:mousedown.once","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA pointing device button (usually a mouse) is pressed on an element.\n\n**Property:**\nThe `.once` property forces the event listener to only be called once, meaning that event calls after will not work. This can be useful for one-time actions, such as loading HTML into the document from Ajax."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:mousedown.passive","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA pointing device button (usually a mouse) is pressed on an element.\n\n**Property:**\nThe `.passive` property helps with better scroll performance, especially on mobile devices."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:mousemove","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA pointing device is moved over an element.\n\n**Property:**\n"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:mousemove.global","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA pointing device is moved over an element.\n\n**Property:**\nThe `.global` property forces the event listener to be attached to the `document` instead of the target element."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:mousemove.self","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA pointing device is moved over an element.\n\n**Property:**\nThe `.self` property attaches an event handler to the element, conditionally excluding the children of that element. This means that it only executes the expression when only target element is fired. This could be used for cards with additional interactives."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:mousemove.stop","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA pointing device is moved over an element.\n\n**Property:**\nThe `.stop` property calls the `stopPropogation()` on the event when it is called, essentially preventing bubbling from child elements to parent elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:mousemove.outside","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA pointing device is moved over an element.\n\n**Property:**\nThe `.outside` property attaches an event handler to the document, conditionally excluding the element it is attached to. This means that it only executes the expression when anything other than the target element is fired. This could be used for modals or special UI elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:mousemove.once","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA pointing device is moved over an element.\n\n**Property:**\nThe `.once` property forces the event listener to only be called once, meaning that event calls after will not work. This can be useful for one-time actions, such as loading HTML into the document from Ajax."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:mousemove.passive","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA pointing device is moved over an element.\n\n**Property:**\nThe `.passive` property helps with better scroll performance, especially on mobile devices."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:mouseout","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA pointing device is moved off the element that has the listener attached or off one of its children.\n\n**Property:**\n"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:mouseout.global","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA pointing device is moved off the element that has the listener attached or off one of its children.\n\n**Property:**\nThe `.global` property forces the event listener to be attached to the `document` instead of the target element."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:mouseout.self","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA pointing device is moved off the element that has the listener attached or off one of its children.\n\n**Property:**\nThe `.self` property attaches an event handler to the element, conditionally excluding the children of that element. This means that it only executes the expression when only target element is fired. This could be used for cards with additional interactives."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:mouseout.stop","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA pointing device is moved off the element that has the listener attached or off one of its children.\n\n**Property:**\nThe `.stop` property calls the `stopPropogation()` on the event when it is called, essentially preventing bubbling from child elements to parent elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:mouseout.outside","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA pointing device is moved off the element that has the listener attached or off one of its children.\n\n**Property:**\nThe `.outside` property attaches an event handler to the document, conditionally excluding the element it is attached to. This means that it only executes the expression when anything other than the target element is fired. This could be used for modals or special UI elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:mouseout.once","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA pointing device is moved off the element that has the listener attached or off one of its children.\n\n**Property:**\nThe `.once` property forces the event listener to only be called once, meaning that event calls after will not work. This can be useful for one-time actions, such as loading HTML into the document from Ajax."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:mouseout.passive","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA pointing device is moved off the element that has the listener attached or off one of its children.\n\n**Property:**\nThe `.passive` property helps with better scroll performance, especially on mobile devices."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:mouseover","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA pointing device is moved onto the element that has the listener attached or onto one of its children.\n\n**Property:**\n"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:mouseover.global","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA pointing device is moved onto the element that has the listener attached or onto one of its children.\n\n**Property:**\nThe `.global` property forces the event listener to be attached to the `document` instead of the target element."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:mouseover.self","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA pointing device is moved onto the element that has the listener attached or onto one of its children.\n\n**Property:**\nThe `.self` property attaches an event handler to the element, conditionally excluding the children of that element. This means that it only executes the expression when only target element is fired. This could be used for cards with additional interactives."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:mouseover.stop","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA pointing device is moved onto the element that has the listener attached or onto one of its children.\n\n**Property:**\nThe `.stop` property calls the `stopPropogation()` on the event when it is called, essentially preventing bubbling from child elements to parent elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:mouseover.outside","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA pointing device is moved onto the element that has the listener attached or onto one of its children.\n\n**Property:**\nThe `.outside` property attaches an event handler to the document, conditionally excluding the element it is attached to. This means that it only executes the expression when anything other than the target element is fired. This could be used for modals or special UI elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:mouseover.once","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA pointing device is moved onto the element that has the listener attached or onto one of its children.\n\n**Property:**\nThe `.once` property forces the event listener to only be called once, meaning that event calls after will not work. This can be useful for one-time actions, such as loading HTML into the document from Ajax."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:mouseover.passive","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA pointing device is moved onto the element that has the listener attached or onto one of its children.\n\n**Property:**\nThe `.passive` property helps with better scroll performance, especially on mobile devices."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:mouseup","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA pointing device button is released over an element.\n\n**Property:**\n"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:mouseup.global","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA pointing device button is released over an element.\n\n**Property:**\nThe `.global` property forces the event listener to be attached to the `document` instead of the target element."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:mouseup.self","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA pointing device button is released over an element.\n\n**Property:**\nThe `.self` property attaches an event handler to the element, conditionally excluding the children of that element. This means that it only executes the expression when only target element is fired. This could be used for cards with additional interactives."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:mouseup.stop","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA pointing device button is released over an element.\n\n**Property:**\nThe `.stop` property calls the `stopPropogation()` on the event when it is called, essentially preventing bubbling from child elements to parent elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:mouseup.outside","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA pointing device button is released over an element.\n\n**Property:**\nThe `.outside` property attaches an event handler to the document, conditionally excluding the element it is attached to. This means that it only executes the expression when anything other than the target element is fired. This could be used for modals or special UI elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:mouseup.once","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA pointing device button is released over an element.\n\n**Property:**\nThe `.once` property forces the event listener to only be called once, meaning that event calls after will not work. This can be useful for one-time actions, such as loading HTML into the document from Ajax."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:mouseup.passive","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA pointing device button is released over an element.\n\n**Property:**\nThe `.passive` property helps with better scroll performance, especially on mobile devices."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:pause","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nPlayback has been paused.\n\n**Property:**\n"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:pause.global","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nPlayback has been paused.\n\n**Property:**\nThe `.global` property forces the event listener to be attached to the `document` instead of the target element."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:pause.self","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nPlayback has been paused.\n\n**Property:**\nThe `.self` property attaches an event handler to the element, conditionally excluding the children of that element. This means that it only executes the expression when only target element is fired. This could be used for cards with additional interactives."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:pause.stop","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nPlayback has been paused.\n\n**Property:**\nThe `.stop` property calls the `stopPropogation()` on the event when it is called, essentially preventing bubbling from child elements to parent elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:pause.outside","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nPlayback has been paused.\n\n**Property:**\nThe `.outside` property attaches an event handler to the document, conditionally excluding the element it is attached to. This means that it only executes the expression when anything other than the target element is fired. This could be used for modals or special UI elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:pause.once","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nPlayback has been paused.\n\n**Property:**\nThe `.once` property forces the event listener to only be called once, meaning that event calls after will not work. This can be useful for one-time actions, such as loading HTML into the document from Ajax."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:pause.passive","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nPlayback has been paused.\n\n**Property:**\nThe `.passive` property helps with better scroll performance, especially on mobile devices."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:play","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nPlayback has begun.\n\n**Property:**\n"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:play.global","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nPlayback has begun.\n\n**Property:**\nThe `.global` property forces the event listener to be attached to the `document` instead of the target element."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:play.self","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nPlayback has begun.\n\n**Property:**\nThe `.self` property attaches an event handler to the element, conditionally excluding the children of that element. This means that it only executes the expression when only target element is fired. This could be used for cards with additional interactives."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:play.stop","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nPlayback has begun.\n\n**Property:**\nThe `.stop` property calls the `stopPropogation()` on the event when it is called, essentially preventing bubbling from child elements to parent elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:play.outside","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nPlayback has begun.\n\n**Property:**\nThe `.outside` property attaches an event handler to the document, conditionally excluding the element it is attached to. This means that it only executes the expression when anything other than the target element is fired. This could be used for modals or special UI elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:play.once","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nPlayback has begun.\n\n**Property:**\nThe `.once` property forces the event listener to only be called once, meaning that event calls after will not work. This can be useful for one-time actions, such as loading HTML into the document from Ajax."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:play.passive","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nPlayback has begun.\n\n**Property:**\nThe `.passive` property helps with better scroll performance, especially on mobile devices."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:playing","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nPlayback is ready to start after having been paused or delayed due to lack of data.\n\n**Property:**\n"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:playing.global","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nPlayback is ready to start after having been paused or delayed due to lack of data.\n\n**Property:**\nThe `.global` property forces the event listener to be attached to the `document` instead of the target element."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:playing.self","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nPlayback is ready to start after having been paused or delayed due to lack of data.\n\n**Property:**\nThe `.self` property attaches an event handler to the element, conditionally excluding the children of that element. This means that it only executes the expression when only target element is fired. This could be used for cards with additional interactives."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:playing.stop","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nPlayback is ready to start after having been paused or delayed due to lack of data.\n\n**Property:**\nThe `.stop` property calls the `stopPropogation()` on the event when it is called, essentially preventing bubbling from child elements to parent elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:playing.outside","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nPlayback is ready to start after having been paused or delayed due to lack of data.\n\n**Property:**\nThe `.outside` property attaches an event handler to the document, conditionally excluding the element it is attached to. This means that it only executes the expression when anything other than the target element is fired. This could be used for modals or special UI elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:playing.once","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nPlayback is ready to start after having been paused or delayed due to lack of data.\n\n**Property:**\nThe `.once` property forces the event listener to only be called once, meaning that event calls after will not work. This can be useful for one-time actions, such as loading HTML into the document from Ajax."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:playing.passive","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nPlayback is ready to start after having been paused or delayed due to lack of data.\n\n**Property:**\nThe `.passive` property helps with better scroll performance, especially on mobile devices."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:progress","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nIn progress.\n\n**Property:**\n"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:progress.global","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nIn progress.\n\n**Property:**\nThe `.global` property forces the event listener to be attached to the `document` instead of the target element."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:progress.self","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nIn progress.\n\n**Property:**\nThe `.self` property attaches an event handler to the element, conditionally excluding the children of that element. This means that it only executes the expression when only target element is fired. This could be used for cards with additional interactives."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:progress.stop","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nIn progress.\n\n**Property:**\nThe `.stop` property calls the `stopPropogation()` on the event when it is called, essentially preventing bubbling from child elements to parent elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:progress.outside","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nIn progress.\n\n**Property:**\nThe `.outside` property attaches an event handler to the document, conditionally excluding the element it is attached to. This means that it only executes the expression when anything other than the target element is fired. This could be used for modals or special UI elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:progress.once","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nIn progress.\n\n**Property:**\nThe `.once` property forces the event listener to only be called once, meaning that event calls after will not work. This can be useful for one-time actions, such as loading HTML into the document from Ajax."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:progress.passive","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nIn progress.\n\n**Property:**\nThe `.passive` property helps with better scroll performance, especially on mobile devices."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:ratechange","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe playback rate has changed.\n\n**Property:**\n"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:ratechange.global","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe playback rate has changed.\n\n**Property:**\nThe `.global` property forces the event listener to be attached to the `document` instead of the target element."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:ratechange.self","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe playback rate has changed.\n\n**Property:**\nThe `.self` property attaches an event handler to the element, conditionally excluding the children of that element. This means that it only executes the expression when only target element is fired. This could be used for cards with additional interactives."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:ratechange.stop","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe playback rate has changed.\n\n**Property:**\nThe `.stop` property calls the `stopPropogation()` on the event when it is called, essentially preventing bubbling from child elements to parent elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:ratechange.outside","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe playback rate has changed.\n\n**Property:**\nThe `.outside` property attaches an event handler to the document, conditionally excluding the element it is attached to. This means that it only executes the expression when anything other than the target element is fired. This could be used for modals or special UI elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:ratechange.once","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe playback rate has changed.\n\n**Property:**\nThe `.once` property forces the event listener to only be called once, meaning that event calls after will not work. This can be useful for one-time actions, such as loading HTML into the document from Ajax."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:ratechange.passive","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe playback rate has changed.\n\n**Property:**\nThe `.passive` property helps with better scroll performance, especially on mobile devices."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:reset","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA form is reset.\n\n**Property:**\n"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:reset.global","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA form is reset.\n\n**Property:**\nThe `.global` property forces the event listener to be attached to the `document` instead of the target element."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:reset.self","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA form is reset.\n\n**Property:**\nThe `.self` property attaches an event handler to the element, conditionally excluding the children of that element. This means that it only executes the expression when only target element is fired. This could be used for cards with additional interactives."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:reset.stop","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA form is reset.\n\n**Property:**\nThe `.stop` property calls the `stopPropogation()` on the event when it is called, essentially preventing bubbling from child elements to parent elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:reset.outside","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA form is reset.\n\n**Property:**\nThe `.outside` property attaches an event handler to the document, conditionally excluding the element it is attached to. This means that it only executes the expression when anything other than the target element is fired. This could be used for modals or special UI elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:reset.once","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA form is reset.\n\n**Property:**\nThe `.once` property forces the event listener to only be called once, meaning that event calls after will not work. This can be useful for one-time actions, such as loading HTML into the document from Ajax."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:reset.passive","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA form is reset.\n\n**Property:**\nThe `.passive` property helps with better scroll performance, especially on mobile devices."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:resize","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe document view has been resized.\n\n**Property:**\n"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:resize.global","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe document view has been resized.\n\n**Property:**\nThe `.global` property forces the event listener to be attached to the `document` instead of the target element."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:resize.self","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe document view has been resized.\n\n**Property:**\nThe `.self` property attaches an event handler to the element, conditionally excluding the children of that element. This means that it only executes the expression when only target element is fired. This could be used for cards with additional interactives."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:resize.stop","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe document view has been resized.\n\n**Property:**\nThe `.stop` property calls the `stopPropogation()` on the event when it is called, essentially preventing bubbling from child elements to parent elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:resize.outside","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe document view has been resized.\n\n**Property:**\nThe `.outside` property attaches an event handler to the document, conditionally excluding the element it is attached to. This means that it only executes the expression when anything other than the target element is fired. This could be used for modals or special UI elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:resize.once","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe document view has been resized.\n\n**Property:**\nThe `.once` property forces the event listener to only be called once, meaning that event calls after will not work. This can be useful for one-time actions, such as loading HTML into the document from Ajax."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:resize.passive","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe document view has been resized.\n\n**Property:**\nThe `.passive` property helps with better scroll performance, especially on mobile devices."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:readystatechange","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe readyState attribute of a document has changed.\n\n**Property:**\n"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:readystatechange.global","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe readyState attribute of a document has changed.\n\n**Property:**\nThe `.global` property forces the event listener to be attached to the `document` instead of the target element."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:readystatechange.self","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe readyState attribute of a document has changed.\n\n**Property:**\nThe `.self` property attaches an event handler to the element, conditionally excluding the children of that element. This means that it only executes the expression when only target element is fired. This could be used for cards with additional interactives."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:readystatechange.stop","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe readyState attribute of a document has changed.\n\n**Property:**\nThe `.stop` property calls the `stopPropogation()` on the event when it is called, essentially preventing bubbling from child elements to parent elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:readystatechange.outside","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe readyState attribute of a document has changed.\n\n**Property:**\nThe `.outside` property attaches an event handler to the document, conditionally excluding the element it is attached to. This means that it only executes the expression when anything other than the target element is fired. This could be used for modals or special UI elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:readystatechange.once","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe readyState attribute of a document has changed.\n\n**Property:**\nThe `.once` property forces the event listener to only be called once, meaning that event calls after will not work. This can be useful for one-time actions, such as loading HTML into the document from Ajax."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:readystatechange.passive","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe readyState attribute of a document has changed.\n\n**Property:**\nThe `.passive` property helps with better scroll performance, especially on mobile devices."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:scroll","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe document view or an element has been scrolled.\n\n**Property:**\n"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:scroll.global","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe document view or an element has been scrolled.\n\n**Property:**\nThe `.global` property forces the event listener to be attached to the `document` instead of the target element."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:scroll.self","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe document view or an element has been scrolled.\n\n**Property:**\nThe `.self` property attaches an event handler to the element, conditionally excluding the children of that element. This means that it only executes the expression when only target element is fired. This could be used for cards with additional interactives."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:scroll.stop","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe document view or an element has been scrolled.\n\n**Property:**\nThe `.stop` property calls the `stopPropogation()` on the event when it is called, essentially preventing bubbling from child elements to parent elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:scroll.outside","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe document view or an element has been scrolled.\n\n**Property:**\nThe `.outside` property attaches an event handler to the document, conditionally excluding the element it is attached to. This means that it only executes the expression when anything other than the target element is fired. This could be used for modals or special UI elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:scroll.once","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe document view or an element has been scrolled.\n\n**Property:**\nThe `.once` property forces the event listener to only be called once, meaning that event calls after will not work. This can be useful for one-time actions, such as loading HTML into the document from Ajax."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:scroll.passive","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe document view or an element has been scrolled.\n\n**Property:**\nThe `.passive` property helps with better scroll performance, especially on mobile devices."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:seeked","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA seek operation completed.\n\n**Property:**\n"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:seeked.global","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA seek operation completed.\n\n**Property:**\nThe `.global` property forces the event listener to be attached to the `document` instead of the target element."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:seeked.self","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA seek operation completed.\n\n**Property:**\nThe `.self` property attaches an event handler to the element, conditionally excluding the children of that element. This means that it only executes the expression when only target element is fired. This could be used for cards with additional interactives."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:seeked.stop","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA seek operation completed.\n\n**Property:**\nThe `.stop` property calls the `stopPropogation()` on the event when it is called, essentially preventing bubbling from child elements to parent elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:seeked.outside","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA seek operation completed.\n\n**Property:**\nThe `.outside` property attaches an event handler to the document, conditionally excluding the element it is attached to. This means that it only executes the expression when anything other than the target element is fired. This could be used for modals or special UI elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:seeked.once","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA seek operation completed.\n\n**Property:**\nThe `.once` property forces the event listener to only be called once, meaning that event calls after will not work. This can be useful for one-time actions, such as loading HTML into the document from Ajax."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:seeked.passive","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA seek operation completed.\n\n**Property:**\nThe `.passive` property helps with better scroll performance, especially on mobile devices."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:seeking","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA seek operation began.\n\n**Property:**\n"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:seeking.global","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA seek operation began.\n\n**Property:**\nThe `.global` property forces the event listener to be attached to the `document` instead of the target element."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:seeking.self","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA seek operation began.\n\n**Property:**\nThe `.self` property attaches an event handler to the element, conditionally excluding the children of that element. This means that it only executes the expression when only target element is fired. This could be used for cards with additional interactives."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:seeking.stop","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA seek operation began.\n\n**Property:**\nThe `.stop` property calls the `stopPropogation()` on the event when it is called, essentially preventing bubbling from child elements to parent elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:seeking.outside","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA seek operation began.\n\n**Property:**\nThe `.outside` property attaches an event handler to the document, conditionally excluding the element it is attached to. This means that it only executes the expression when anything other than the target element is fired. This could be used for modals or special UI elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:seeking.once","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA seek operation began.\n\n**Property:**\nThe `.once` property forces the event listener to only be called once, meaning that event calls after will not work. This can be useful for one-time actions, such as loading HTML into the document from Ajax."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:seeking.passive","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA seek operation began.\n\n**Property:**\nThe `.passive` property helps with better scroll performance, especially on mobile devices."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:select","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nSome text is being selected.\n\n**Property:**\n"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:select.global","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nSome text is being selected.\n\n**Property:**\nThe `.global` property forces the event listener to be attached to the `document` instead of the target element."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:select.self","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nSome text is being selected.\n\n**Property:**\nThe `.self` property attaches an event handler to the element, conditionally excluding the children of that element. This means that it only executes the expression when only target element is fired. This could be used for cards with additional interactives."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:select.stop","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nSome text is being selected.\n\n**Property:**\nThe `.stop` property calls the `stopPropogation()` on the event when it is called, essentially preventing bubbling from child elements to parent elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:select.outside","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nSome text is being selected.\n\n**Property:**\nThe `.outside` property attaches an event handler to the document, conditionally excluding the element it is attached to. This means that it only executes the expression when anything other than the target element is fired. This could be used for modals or special UI elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:select.once","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nSome text is being selected.\n\n**Property:**\nThe `.once` property forces the event listener to only be called once, meaning that event calls after will not work. This can be useful for one-time actions, such as loading HTML into the document from Ajax."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:select.passive","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nSome text is being selected.\n\n**Property:**\nThe `.passive` property helps with better scroll performance, especially on mobile devices."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:show","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA contextmenu event was fired on/bubbled to an element that has a contextmenu attribute\n\n**Property:**\n"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:show.global","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA contextmenu event was fired on/bubbled to an element that has a contextmenu attribute\n\n**Property:**\nThe `.global` property forces the event listener to be attached to the `document` instead of the target element."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:show.self","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA contextmenu event was fired on/bubbled to an element that has a contextmenu attribute\n\n**Property:**\nThe `.self` property attaches an event handler to the element, conditionally excluding the children of that element. This means that it only executes the expression when only target element is fired. This could be used for cards with additional interactives."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:show.stop","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA contextmenu event was fired on/bubbled to an element that has a contextmenu attribute\n\n**Property:**\nThe `.stop` property calls the `stopPropogation()` on the event when it is called, essentially preventing bubbling from child elements to parent elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:show.outside","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA contextmenu event was fired on/bubbled to an element that has a contextmenu attribute\n\n**Property:**\nThe `.outside` property attaches an event handler to the document, conditionally excluding the element it is attached to. This means that it only executes the expression when anything other than the target element is fired. This could be used for modals or special UI elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:show.once","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA contextmenu event was fired on/bubbled to an element that has a contextmenu attribute\n\n**Property:**\nThe `.once` property forces the event listener to only be called once, meaning that event calls after will not work. This can be useful for one-time actions, such as loading HTML into the document from Ajax."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:show.passive","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA contextmenu event was fired on/bubbled to an element that has a contextmenu attribute\n\n**Property:**\nThe `.passive` property helps with better scroll performance, especially on mobile devices."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:stalled","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe user agent is trying to fetch media data, but data is unexpectedly not forthcoming.\n\n**Property:**\n"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:stalled.global","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe user agent is trying to fetch media data, but data is unexpectedly not forthcoming.\n\n**Property:**\nThe `.global` property forces the event listener to be attached to the `document` instead of the target element."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:stalled.self","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe user agent is trying to fetch media data, but data is unexpectedly not forthcoming.\n\n**Property:**\nThe `.self` property attaches an event handler to the element, conditionally excluding the children of that element. This means that it only executes the expression when only target element is fired. This could be used for cards with additional interactives."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:stalled.stop","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe user agent is trying to fetch media data, but data is unexpectedly not forthcoming.\n\n**Property:**\nThe `.stop` property calls the `stopPropogation()` on the event when it is called, essentially preventing bubbling from child elements to parent elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:stalled.outside","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe user agent is trying to fetch media data, but data is unexpectedly not forthcoming.\n\n**Property:**\nThe `.outside` property attaches an event handler to the document, conditionally excluding the element it is attached to. This means that it only executes the expression when anything other than the target element is fired. This could be used for modals or special UI elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:stalled.once","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe user agent is trying to fetch media data, but data is unexpectedly not forthcoming.\n\n**Property:**\nThe `.once` property forces the event listener to only be called once, meaning that event calls after will not work. This can be useful for one-time actions, such as loading HTML into the document from Ajax."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:stalled.passive","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe user agent is trying to fetch media data, but data is unexpectedly not forthcoming.\n\n**Property:**\nThe `.passive` property helps with better scroll performance, especially on mobile devices."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:submit","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA form is submitted.\n\n**Property:**\n"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:submit.global","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA form is submitted.\n\n**Property:**\nThe `.global` property forces the event listener to be attached to the `document` instead of the target element."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:submit.self","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA form is submitted.\n\n**Property:**\nThe `.self` property attaches an event handler to the element, conditionally excluding the children of that element. This means that it only executes the expression when only target element is fired. This could be used for cards with additional interactives."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:submit.stop","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA form is submitted.\n\n**Property:**\nThe `.stop` property calls the `stopPropogation()` on the event when it is called, essentially preventing bubbling from child elements to parent elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:submit.outside","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA form is submitted.\n\n**Property:**\nThe `.outside` property attaches an event handler to the document, conditionally excluding the element it is attached to. This means that it only executes the expression when anything other than the target element is fired. This could be used for modals or special UI elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:submit.once","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA form is submitted.\n\n**Property:**\nThe `.once` property forces the event listener to only be called once, meaning that event calls after will not work. This can be useful for one-time actions, such as loading HTML into the document from Ajax."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:submit.passive","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA form is submitted.\n\n**Property:**\nThe `.passive` property helps with better scroll performance, especially on mobile devices."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:suspend","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nMedia data loading has been suspended.\n\n**Property:**\n"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:suspend.global","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nMedia data loading has been suspended.\n\n**Property:**\nThe `.global` property forces the event listener to be attached to the `document` instead of the target element."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:suspend.self","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nMedia data loading has been suspended.\n\n**Property:**\nThe `.self` property attaches an event handler to the element, conditionally excluding the children of that element. This means that it only executes the expression when only target element is fired. This could be used for cards with additional interactives."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:suspend.stop","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nMedia data loading has been suspended.\n\n**Property:**\nThe `.stop` property calls the `stopPropogation()` on the event when it is called, essentially preventing bubbling from child elements to parent elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:suspend.outside","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nMedia data loading has been suspended.\n\n**Property:**\nThe `.outside` property attaches an event handler to the document, conditionally excluding the element it is attached to. This means that it only executes the expression when anything other than the target element is fired. This could be used for modals or special UI elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:suspend.once","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nMedia data loading has been suspended.\n\n**Property:**\nThe `.once` property forces the event listener to only be called once, meaning that event calls after will not work. This can be useful for one-time actions, such as loading HTML into the document from Ajax."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:suspend.passive","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nMedia data loading has been suspended.\n\n**Property:**\nThe `.passive` property helps with better scroll performance, especially on mobile devices."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:timeupdate","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe time indicated by the currentTime attribute has been updated.\n\n**Property:**\n"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:timeupdate.global","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe time indicated by the currentTime attribute has been updated.\n\n**Property:**\nThe `.global` property forces the event listener to be attached to the `document` instead of the target element."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:timeupdate.self","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe time indicated by the currentTime attribute has been updated.\n\n**Property:**\nThe `.self` property attaches an event handler to the element, conditionally excluding the children of that element. This means that it only executes the expression when only target element is fired. This could be used for cards with additional interactives."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:timeupdate.stop","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe time indicated by the currentTime attribute has been updated.\n\n**Property:**\nThe `.stop` property calls the `stopPropogation()` on the event when it is called, essentially preventing bubbling from child elements to parent elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:timeupdate.outside","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe time indicated by the currentTime attribute has been updated.\n\n**Property:**\nThe `.outside` property attaches an event handler to the document, conditionally excluding the element it is attached to. This means that it only executes the expression when anything other than the target element is fired. This could be used for modals or special UI elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:timeupdate.once","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe time indicated by the currentTime attribute has been updated.\n\n**Property:**\nThe `.once` property forces the event listener to only be called once, meaning that event calls after will not work. This can be useful for one-time actions, such as loading HTML into the document from Ajax."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:timeupdate.passive","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe time indicated by the currentTime attribute has been updated.\n\n**Property:**\nThe `.passive` property helps with better scroll performance, especially on mobile devices."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:volumechange","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe volume has changed.\n\n**Property:**\n"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:volumechange.global","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe volume has changed.\n\n**Property:**\nThe `.global` property forces the event listener to be attached to the `document` instead of the target element."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:volumechange.self","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe volume has changed.\n\n**Property:**\nThe `.self` property attaches an event handler to the element, conditionally excluding the children of that element. This means that it only executes the expression when only target element is fired. This could be used for cards with additional interactives."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:volumechange.stop","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe volume has changed.\n\n**Property:**\nThe `.stop` property calls the `stopPropogation()` on the event when it is called, essentially preventing bubbling from child elements to parent elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:volumechange.outside","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe volume has changed.\n\n**Property:**\nThe `.outside` property attaches an event handler to the document, conditionally excluding the element it is attached to. This means that it only executes the expression when anything other than the target element is fired. This could be used for modals or special UI elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:volumechange.once","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe volume has changed.\n\n**Property:**\nThe `.once` property forces the event listener to only be called once, meaning that event calls after will not work. This can be useful for one-time actions, such as loading HTML into the document from Ajax."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:volumechange.passive","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe volume has changed.\n\n**Property:**\nThe `.passive` property helps with better scroll performance, especially on mobile devices."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:waiting","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nPlayback has stopped because of a temporary lack of data.\n\n**Property:**\n"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:waiting.global","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nPlayback has stopped because of a temporary lack of data.\n\n**Property:**\nThe `.global` property forces the event listener to be attached to the `document` instead of the target element."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:waiting.self","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nPlayback has stopped because of a temporary lack of data.\n\n**Property:**\nThe `.self` property attaches an event handler to the element, conditionally excluding the children of that element. This means that it only executes the expression when only target element is fired. This could be used for cards with additional interactives."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:waiting.stop","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nPlayback has stopped because of a temporary lack of data.\n\n**Property:**\nThe `.stop` property calls the `stopPropogation()` on the event when it is called, essentially preventing bubbling from child elements to parent elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:waiting.outside","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nPlayback has stopped because of a temporary lack of data.\n\n**Property:**\nThe `.outside` property attaches an event handler to the document, conditionally excluding the element it is attached to. This means that it only executes the expression when anything other than the target element is fired. This could be used for modals or special UI elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:waiting.once","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nPlayback has stopped because of a temporary lack of data.\n\n**Property:**\nThe `.once` property forces the event listener to only be called once, meaning that event calls after will not work. This can be useful for one-time actions, such as loading HTML into the document from Ajax."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-on:waiting.passive","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nPlayback has stopped because of a temporary lack of data.\n\n**Property:**\nThe `.passive` property helps with better scroll performance, especially on mobile devices."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@abort","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe loading of a resource has been aborted.\n\n**Property:**\n"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@abort.global","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe loading of a resource has been aborted.\n\n**Property:**\nThe `.global` property forces the event listener to be attached to the `document` instead of the target element."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@abort.self","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe loading of a resource has been aborted.\n\n**Property:**\nThe `.self` property attaches an event handler to the element, conditionally excluding the children of that element. This means that it only executes the expression when only target element is fired. This could be used for cards with additional interactives."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@abort.stop","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe loading of a resource has been aborted.\n\n**Property:**\nThe `.stop` property calls the `stopPropogation()` on the event when it is called, essentially preventing bubbling from child elements to parent elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@abort.outside","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe loading of a resource has been aborted.\n\n**Property:**\nThe `.outside` property attaches an event handler to the document, conditionally excluding the element it is attached to. This means that it only executes the expression when anything other than the target element is fired. This could be used for modals or special UI elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@abort.once","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe loading of a resource has been aborted.\n\n**Property:**\nThe `.once` property forces the event listener to only be called once, meaning that event calls after will not work. This can be useful for one-time actions, such as loading HTML into the document from Ajax."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@abort.passive","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe loading of a resource has been aborted.\n\n**Property:**\nThe `.passive` property helps with better scroll performance, especially on mobile devices."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@blur","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nAn element has lost focus (does not bubble).\n\n**Property:**\n"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@blur.global","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nAn element has lost focus (does not bubble).\n\n**Property:**\nThe `.global` property forces the event listener to be attached to the `document` instead of the target element."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@blur.self","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nAn element has lost focus (does not bubble).\n\n**Property:**\nThe `.self` property attaches an event handler to the element, conditionally excluding the children of that element. This means that it only executes the expression when only target element is fired. This could be used for cards with additional interactives."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@blur.stop","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nAn element has lost focus (does not bubble).\n\n**Property:**\nThe `.stop` property calls the `stopPropogation()` on the event when it is called, essentially preventing bubbling from child elements to parent elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@blur.outside","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nAn element has lost focus (does not bubble).\n\n**Property:**\nThe `.outside` property attaches an event handler to the document, conditionally excluding the element it is attached to. This means that it only executes the expression when anything other than the target element is fired. This could be used for modals or special UI elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@blur.once","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nAn element has lost focus (does not bubble).\n\n**Property:**\nThe `.once` property forces the event listener to only be called once, meaning that event calls after will not work. This can be useful for one-time actions, such as loading HTML into the document from Ajax."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@blur.passive","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nAn element has lost focus (does not bubble).\n\n**Property:**\nThe `.passive` property helps with better scroll performance, especially on mobile devices."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@canplay","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe user agent can play the media, but estimates that not enough data has been loaded to play the media up to its end without having to stop for further buffering of content.\n\n**Property:**\n"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@canplay.global","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe user agent can play the media, but estimates that not enough data has been loaded to play the media up to its end without having to stop for further buffering of content.\n\n**Property:**\nThe `.global` property forces the event listener to be attached to the `document` instead of the target element."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@canplay.self","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe user agent can play the media, but estimates that not enough data has been loaded to play the media up to its end without having to stop for further buffering of content.\n\n**Property:**\nThe `.self` property attaches an event handler to the element, conditionally excluding the children of that element. This means that it only executes the expression when only target element is fired. This could be used for cards with additional interactives."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@canplay.stop","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe user agent can play the media, but estimates that not enough data has been loaded to play the media up to its end without having to stop for further buffering of content.\n\n**Property:**\nThe `.stop` property calls the `stopPropogation()` on the event when it is called, essentially preventing bubbling from child elements to parent elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@canplay.outside","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe user agent can play the media, but estimates that not enough data has been loaded to play the media up to its end without having to stop for further buffering of content.\n\n**Property:**\nThe `.outside` property attaches an event handler to the document, conditionally excluding the element it is attached to. This means that it only executes the expression when anything other than the target element is fired. This could be used for modals or special UI elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@canplay.once","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe user agent can play the media, but estimates that not enough data has been loaded to play the media up to its end without having to stop for further buffering of content.\n\n**Property:**\nThe `.once` property forces the event listener to only be called once, meaning that event calls after will not work. This can be useful for one-time actions, such as loading HTML into the document from Ajax."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@canplay.passive","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe user agent can play the media, but estimates that not enough data has been loaded to play the media up to its end without having to stop for further buffering of content.\n\n**Property:**\nThe `.passive` property helps with better scroll performance, especially on mobile devices."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@canplaythrough","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe user agent can play the media up to its end without having to stop for further buffering of content.\n\n**Property:**\n"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@canplaythrough.global","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe user agent can play the media up to its end without having to stop for further buffering of content.\n\n**Property:**\nThe `.global` property forces the event listener to be attached to the `document` instead of the target element."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@canplaythrough.self","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe user agent can play the media up to its end without having to stop for further buffering of content.\n\n**Property:**\nThe `.self` property attaches an event handler to the element, conditionally excluding the children of that element. This means that it only executes the expression when only target element is fired. This could be used for cards with additional interactives."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@canplaythrough.stop","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe user agent can play the media up to its end without having to stop for further buffering of content.\n\n**Property:**\nThe `.stop` property calls the `stopPropogation()` on the event when it is called, essentially preventing bubbling from child elements to parent elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@canplaythrough.outside","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe user agent can play the media up to its end without having to stop for further buffering of content.\n\n**Property:**\nThe `.outside` property attaches an event handler to the document, conditionally excluding the element it is attached to. This means that it only executes the expression when anything other than the target element is fired. This could be used for modals or special UI elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@canplaythrough.once","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe user agent can play the media up to its end without having to stop for further buffering of content.\n\n**Property:**\nThe `.once` property forces the event listener to only be called once, meaning that event calls after will not work. This can be useful for one-time actions, such as loading HTML into the document from Ajax."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@canplaythrough.passive","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe user agent can play the media up to its end without having to stop for further buffering of content.\n\n**Property:**\nThe `.passive` property helps with better scroll performance, especially on mobile devices."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@change","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe change event is fired for <input>, <select>, and <textarea> elements when a change to the element's value is committed by the user.\n\n**Property:**\n"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@change.global","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe change event is fired for <input>, <select>, and <textarea> elements when a change to the element's value is committed by the user.\n\n**Property:**\nThe `.global` property forces the event listener to be attached to the `document` instead of the target element."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@change.self","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe change event is fired for <input>, <select>, and <textarea> elements when a change to the element's value is committed by the user.\n\n**Property:**\nThe `.self` property attaches an event handler to the element, conditionally excluding the children of that element. This means that it only executes the expression when only target element is fired. This could be used for cards with additional interactives."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@change.stop","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe change event is fired for <input>, <select>, and <textarea> elements when a change to the element's value is committed by the user.\n\n**Property:**\nThe `.stop` property calls the `stopPropogation()` on the event when it is called, essentially preventing bubbling from child elements to parent elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@change.outside","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe change event is fired for <input>, <select>, and <textarea> elements when a change to the element's value is committed by the user.\n\n**Property:**\nThe `.outside` property attaches an event handler to the document, conditionally excluding the element it is attached to. This means that it only executes the expression when anything other than the target element is fired. This could be used for modals or special UI elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@change.once","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe change event is fired for <input>, <select>, and <textarea> elements when a change to the element's value is committed by the user.\n\n**Property:**\nThe `.once` property forces the event listener to only be called once, meaning that event calls after will not work. This can be useful for one-time actions, such as loading HTML into the document from Ajax."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@change.passive","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe change event is fired for <input>, <select>, and <textarea> elements when a change to the element's value is committed by the user.\n\n**Property:**\nThe `.passive` property helps with better scroll performance, especially on mobile devices."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@click","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA pointing device button has been pressed and released on an element.\n\n**Property:**\n"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@click.global","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA pointing device button has been pressed and released on an element.\n\n**Property:**\nThe `.global` property forces the event listener to be attached to the `document` instead of the target element."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@click.self","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA pointing device button has been pressed and released on an element.\n\n**Property:**\nThe `.self` property attaches an event handler to the element, conditionally excluding the children of that element. This means that it only executes the expression when only target element is fired. This could be used for cards with additional interactives."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@click.stop","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA pointing device button has been pressed and released on an element.\n\n**Property:**\nThe `.stop` property calls the `stopPropogation()` on the event when it is called, essentially preventing bubbling from child elements to parent elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@click.outside","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA pointing device button has been pressed and released on an element.\n\n**Property:**\nThe `.outside` property attaches an event handler to the document, conditionally excluding the element it is attached to. This means that it only executes the expression when anything other than the target element is fired. This could be used for modals or special UI elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@click.once","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA pointing device button has been pressed and released on an element.\n\n**Property:**\nThe `.once` property forces the event listener to only be called once, meaning that event calls after will not work. This can be useful for one-time actions, such as loading HTML into the document from Ajax."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@click.passive","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA pointing device button has been pressed and released on an element.\n\n**Property:**\nThe `.passive` property helps with better scroll performance, especially on mobile devices."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@contextmenu","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe right button of the mouse is clicked (before the context menu is displayed).\n\n**Property:**\n"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@contextmenu.global","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe right button of the mouse is clicked (before the context menu is displayed).\n\n**Property:**\nThe `.global` property forces the event listener to be attached to the `document` instead of the target element."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@contextmenu.self","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe right button of the mouse is clicked (before the context menu is displayed).\n\n**Property:**\nThe `.self` property attaches an event handler to the element, conditionally excluding the children of that element. This means that it only executes the expression when only target element is fired. This could be used for cards with additional interactives."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@contextmenu.stop","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe right button of the mouse is clicked (before the context menu is displayed).\n\n**Property:**\nThe `.stop` property calls the `stopPropogation()` on the event when it is called, essentially preventing bubbling from child elements to parent elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@contextmenu.outside","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe right button of the mouse is clicked (before the context menu is displayed).\n\n**Property:**\nThe `.outside` property attaches an event handler to the document, conditionally excluding the element it is attached to. This means that it only executes the expression when anything other than the target element is fired. This could be used for modals or special UI elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@contextmenu.once","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe right button of the mouse is clicked (before the context menu is displayed).\n\n**Property:**\nThe `.once` property forces the event listener to only be called once, meaning that event calls after will not work. This can be useful for one-time actions, such as loading HTML into the document from Ajax."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@contextmenu.passive","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe right button of the mouse is clicked (before the context menu is displayed).\n\n**Property:**\nThe `.passive` property helps with better scroll performance, especially on mobile devices."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@dblclick","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA pointing device button is clicked twice on an element.\n\n**Property:**\n"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@dblclick.global","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA pointing device button is clicked twice on an element.\n\n**Property:**\nThe `.global` property forces the event listener to be attached to the `document` instead of the target element."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@dblclick.self","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA pointing device button is clicked twice on an element.\n\n**Property:**\nThe `.self` property attaches an event handler to the element, conditionally excluding the children of that element. This means that it only executes the expression when only target element is fired. This could be used for cards with additional interactives."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@dblclick.stop","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA pointing device button is clicked twice on an element.\n\n**Property:**\nThe `.stop` property calls the `stopPropogation()` on the event when it is called, essentially preventing bubbling from child elements to parent elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@dblclick.outside","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA pointing device button is clicked twice on an element.\n\n**Property:**\nThe `.outside` property attaches an event handler to the document, conditionally excluding the element it is attached to. This means that it only executes the expression when anything other than the target element is fired. This could be used for modals or special UI elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@dblclick.once","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA pointing device button is clicked twice on an element.\n\n**Property:**\nThe `.once` property forces the event listener to only be called once, meaning that event calls after will not work. This can be useful for one-time actions, such as loading HTML into the document from Ajax."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@dblclick.passive","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA pointing device button is clicked twice on an element.\n\n**Property:**\nThe `.passive` property helps with better scroll performance, especially on mobile devices."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@drag","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nAn element or text selection is being dragged (every 350ms).\n\n**Property:**\n"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@drag.global","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nAn element or text selection is being dragged (every 350ms).\n\n**Property:**\nThe `.global` property forces the event listener to be attached to the `document` instead of the target element."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@drag.self","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nAn element or text selection is being dragged (every 350ms).\n\n**Property:**\nThe `.self` property attaches an event handler to the element, conditionally excluding the children of that element. This means that it only executes the expression when only target element is fired. This could be used for cards with additional interactives."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@drag.stop","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nAn element or text selection is being dragged (every 350ms).\n\n**Property:**\nThe `.stop` property calls the `stopPropogation()` on the event when it is called, essentially preventing bubbling from child elements to parent elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@drag.outside","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nAn element or text selection is being dragged (every 350ms).\n\n**Property:**\nThe `.outside` property attaches an event handler to the document, conditionally excluding the element it is attached to. This means that it only executes the expression when anything other than the target element is fired. This could be used for modals or special UI elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@drag.once","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nAn element or text selection is being dragged (every 350ms).\n\n**Property:**\nThe `.once` property forces the event listener to only be called once, meaning that event calls after will not work. This can be useful for one-time actions, such as loading HTML into the document from Ajax."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@drag.passive","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nAn element or text selection is being dragged (every 350ms).\n\n**Property:**\nThe `.passive` property helps with better scroll performance, especially on mobile devices."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@dragend","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA drag operation is being ended (by releasing a mouse button or hitting the escape key).\n\n**Property:**\n"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@dragend.global","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA drag operation is being ended (by releasing a mouse button or hitting the escape key).\n\n**Property:**\nThe `.global` property forces the event listener to be attached to the `document` instead of the target element."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@dragend.self","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA drag operation is being ended (by releasing a mouse button or hitting the escape key).\n\n**Property:**\nThe `.self` property attaches an event handler to the element, conditionally excluding the children of that element. This means that it only executes the expression when only target element is fired. This could be used for cards with additional interactives."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@dragend.stop","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA drag operation is being ended (by releasing a mouse button or hitting the escape key).\n\n**Property:**\nThe `.stop` property calls the `stopPropogation()` on the event when it is called, essentially preventing bubbling from child elements to parent elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@dragend.outside","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA drag operation is being ended (by releasing a mouse button or hitting the escape key).\n\n**Property:**\nThe `.outside` property attaches an event handler to the document, conditionally excluding the element it is attached to. This means that it only executes the expression when anything other than the target element is fired. This could be used for modals or special UI elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@dragend.once","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA drag operation is being ended (by releasing a mouse button or hitting the escape key).\n\n**Property:**\nThe `.once` property forces the event listener to only be called once, meaning that event calls after will not work. This can be useful for one-time actions, such as loading HTML into the document from Ajax."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@dragend.passive","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA drag operation is being ended (by releasing a mouse button or hitting the escape key).\n\n**Property:**\nThe `.passive` property helps with better scroll performance, especially on mobile devices."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@dragenter","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA dragged element or text selection enters a valid drop target.\n\n**Property:**\n"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@dragenter.global","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA dragged element or text selection enters a valid drop target.\n\n**Property:**\nThe `.global` property forces the event listener to be attached to the `document` instead of the target element."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@dragenter.self","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA dragged element or text selection enters a valid drop target.\n\n**Property:**\nThe `.self` property attaches an event handler to the element, conditionally excluding the children of that element. This means that it only executes the expression when only target element is fired. This could be used for cards with additional interactives."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@dragenter.stop","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA dragged element or text selection enters a valid drop target.\n\n**Property:**\nThe `.stop` property calls the `stopPropogation()` on the event when it is called, essentially preventing bubbling from child elements to parent elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@dragenter.outside","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA dragged element or text selection enters a valid drop target.\n\n**Property:**\nThe `.outside` property attaches an event handler to the document, conditionally excluding the element it is attached to. This means that it only executes the expression when anything other than the target element is fired. This could be used for modals or special UI elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@dragenter.once","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA dragged element or text selection enters a valid drop target.\n\n**Property:**\nThe `.once` property forces the event listener to only be called once, meaning that event calls after will not work. This can be useful for one-time actions, such as loading HTML into the document from Ajax."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@dragenter.passive","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA dragged element or text selection enters a valid drop target.\n\n**Property:**\nThe `.passive` property helps with better scroll performance, especially on mobile devices."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@dragleave","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA dragged element or text selection leaves a valid drop target.\n\n**Property:**\n"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@dragleave.global","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA dragged element or text selection leaves a valid drop target.\n\n**Property:**\nThe `.global` property forces the event listener to be attached to the `document` instead of the target element."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@dragleave.self","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA dragged element or text selection leaves a valid drop target.\n\n**Property:**\nThe `.self` property attaches an event handler to the element, conditionally excluding the children of that element. This means that it only executes the expression when only target element is fired. This could be used for cards with additional interactives."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@dragleave.stop","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA dragged element or text selection leaves a valid drop target.\n\n**Property:**\nThe `.stop` property calls the `stopPropogation()` on the event when it is called, essentially preventing bubbling from child elements to parent elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@dragleave.outside","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA dragged element or text selection leaves a valid drop target.\n\n**Property:**\nThe `.outside` property attaches an event handler to the document, conditionally excluding the element it is attached to. This means that it only executes the expression when anything other than the target element is fired. This could be used for modals or special UI elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@dragleave.once","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA dragged element or text selection leaves a valid drop target.\n\n**Property:**\nThe `.once` property forces the event listener to only be called once, meaning that event calls after will not work. This can be useful for one-time actions, such as loading HTML into the document from Ajax."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@dragleave.passive","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA dragged element or text selection leaves a valid drop target.\n\n**Property:**\nThe `.passive` property helps with better scroll performance, especially on mobile devices."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@dragover","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nAn element or text selection is being dragged over a valid drop target (every 350ms).\n\n**Property:**\n"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@dragover.global","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nAn element or text selection is being dragged over a valid drop target (every 350ms).\n\n**Property:**\nThe `.global` property forces the event listener to be attached to the `document` instead of the target element."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@dragover.self","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nAn element or text selection is being dragged over a valid drop target (every 350ms).\n\n**Property:**\nThe `.self` property attaches an event handler to the element, conditionally excluding the children of that element. This means that it only executes the expression when only target element is fired. This could be used for cards with additional interactives."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@dragover.stop","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nAn element or text selection is being dragged over a valid drop target (every 350ms).\n\n**Property:**\nThe `.stop` property calls the `stopPropogation()` on the event when it is called, essentially preventing bubbling from child elements to parent elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@dragover.outside","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nAn element or text selection is being dragged over a valid drop target (every 350ms).\n\n**Property:**\nThe `.outside` property attaches an event handler to the document, conditionally excluding the element it is attached to. This means that it only executes the expression when anything other than the target element is fired. This could be used for modals or special UI elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@dragover.once","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nAn element or text selection is being dragged over a valid drop target (every 350ms).\n\n**Property:**\nThe `.once` property forces the event listener to only be called once, meaning that event calls after will not work. This can be useful for one-time actions, such as loading HTML into the document from Ajax."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@dragover.passive","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nAn element or text selection is being dragged over a valid drop target (every 350ms).\n\n**Property:**\nThe `.passive` property helps with better scroll performance, especially on mobile devices."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@dragstart","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe user starts dragging an element or text selection.\n\n**Property:**\n"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@dragstart.global","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe user starts dragging an element or text selection.\n\n**Property:**\nThe `.global` property forces the event listener to be attached to the `document` instead of the target element."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@dragstart.self","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe user starts dragging an element or text selection.\n\n**Property:**\nThe `.self` property attaches an event handler to the element, conditionally excluding the children of that element. This means that it only executes the expression when only target element is fired. This could be used for cards with additional interactives."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@dragstart.stop","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe user starts dragging an element or text selection.\n\n**Property:**\nThe `.stop` property calls the `stopPropogation()` on the event when it is called, essentially preventing bubbling from child elements to parent elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@dragstart.outside","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe user starts dragging an element or text selection.\n\n**Property:**\nThe `.outside` property attaches an event handler to the document, conditionally excluding the element it is attached to. This means that it only executes the expression when anything other than the target element is fired. This could be used for modals or special UI elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@dragstart.once","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe user starts dragging an element or text selection.\n\n**Property:**\nThe `.once` property forces the event listener to only be called once, meaning that event calls after will not work. This can be useful for one-time actions, such as loading HTML into the document from Ajax."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@dragstart.passive","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe user starts dragging an element or text selection.\n\n**Property:**\nThe `.passive` property helps with better scroll performance, especially on mobile devices."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@drop","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nAn element is dropped on a valid drop target.\n\n**Property:**\n"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@drop.global","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nAn element is dropped on a valid drop target.\n\n**Property:**\nThe `.global` property forces the event listener to be attached to the `document` instead of the target element."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@drop.self","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nAn element is dropped on a valid drop target.\n\n**Property:**\nThe `.self` property attaches an event handler to the element, conditionally excluding the children of that element. This means that it only executes the expression when only target element is fired. This could be used for cards with additional interactives."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@drop.stop","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nAn element is dropped on a valid drop target.\n\n**Property:**\nThe `.stop` property calls the `stopPropogation()` on the event when it is called, essentially preventing bubbling from child elements to parent elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@drop.outside","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nAn element is dropped on a valid drop target.\n\n**Property:**\nThe `.outside` property attaches an event handler to the document, conditionally excluding the element it is attached to. This means that it only executes the expression when anything other than the target element is fired. This could be used for modals or special UI elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@drop.once","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nAn element is dropped on a valid drop target.\n\n**Property:**\nThe `.once` property forces the event listener to only be called once, meaning that event calls after will not work. This can be useful for one-time actions, such as loading HTML into the document from Ajax."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@drop.passive","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nAn element is dropped on a valid drop target.\n\n**Property:**\nThe `.passive` property helps with better scroll performance, especially on mobile devices."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@durationchange","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe duration attribute has been updated.\n\n**Property:**\n"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@durationchange.global","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe duration attribute has been updated.\n\n**Property:**\nThe `.global` property forces the event listener to be attached to the `document` instead of the target element."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@durationchange.self","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe duration attribute has been updated.\n\n**Property:**\nThe `.self` property attaches an event handler to the element, conditionally excluding the children of that element. This means that it only executes the expression when only target element is fired. This could be used for cards with additional interactives."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@durationchange.stop","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe duration attribute has been updated.\n\n**Property:**\nThe `.stop` property calls the `stopPropogation()` on the event when it is called, essentially preventing bubbling from child elements to parent elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@durationchange.outside","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe duration attribute has been updated.\n\n**Property:**\nThe `.outside` property attaches an event handler to the document, conditionally excluding the element it is attached to. This means that it only executes the expression when anything other than the target element is fired. This could be used for modals or special UI elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@durationchange.once","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe duration attribute has been updated.\n\n**Property:**\nThe `.once` property forces the event listener to only be called once, meaning that event calls after will not work. This can be useful for one-time actions, such as loading HTML into the document from Ajax."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@durationchange.passive","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe duration attribute has been updated.\n\n**Property:**\nThe `.passive` property helps with better scroll performance, especially on mobile devices."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@effect","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nWhen the element is updated by Lucia.\n\n**Property:**\n"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@effect.global","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nWhen the element is updated by Lucia.\n\n**Property:**\nThe `.global` property forces the event listener to be attached to the `document` instead of the target element."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@effect.self","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nWhen the element is updated by Lucia.\n\n**Property:**\nThe `.self` property attaches an event handler to the element, conditionally excluding the children of that element. This means that it only executes the expression when only target element is fired. This could be used for cards with additional interactives."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@effect.stop","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nWhen the element is updated by Lucia.\n\n**Property:**\nThe `.stop` property calls the `stopPropogation()` on the event when it is called, essentially preventing bubbling from child elements to parent elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@effect.outside","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nWhen the element is updated by Lucia.\n\n**Property:**\nThe `.outside` property attaches an event handler to the document, conditionally excluding the element it is attached to. This means that it only executes the expression when anything other than the target element is fired. This could be used for modals or special UI elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@effect.once","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nWhen the element is updated by Lucia.\n\n**Property:**\nThe `.once` property forces the event listener to only be called once, meaning that event calls after will not work. This can be useful for one-time actions, such as loading HTML into the document from Ajax."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@effect.passive","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nWhen the element is updated by Lucia.\n\n**Property:**\nThe `.passive` property helps with better scroll performance, especially on mobile devices."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@emptied","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe media has become empty; for example, this event is sent if the media has already been loaded (or partially loaded), and the load() method is called to reload it.\n\n**Property:**\n"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@emptied.global","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe media has become empty; for example, this event is sent if the media has already been loaded (or partially loaded), and the load() method is called to reload it.\n\n**Property:**\nThe `.global` property forces the event listener to be attached to the `document` instead of the target element."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@emptied.self","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe media has become empty; for example, this event is sent if the media has already been loaded (or partially loaded), and the load() method is called to reload it.\n\n**Property:**\nThe `.self` property attaches an event handler to the element, conditionally excluding the children of that element. This means that it only executes the expression when only target element is fired. This could be used for cards with additional interactives."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@emptied.stop","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe media has become empty; for example, this event is sent if the media has already been loaded (or partially loaded), and the load() method is called to reload it.\n\n**Property:**\nThe `.stop` property calls the `stopPropogation()` on the event when it is called, essentially preventing bubbling from child elements to parent elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@emptied.outside","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe media has become empty; for example, this event is sent if the media has already been loaded (or partially loaded), and the load() method is called to reload it.\n\n**Property:**\nThe `.outside` property attaches an event handler to the document, conditionally excluding the element it is attached to. This means that it only executes the expression when anything other than the target element is fired. This could be used for modals or special UI elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@emptied.once","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe media has become empty; for example, this event is sent if the media has already been loaded (or partially loaded), and the load() method is called to reload it.\n\n**Property:**\nThe `.once` property forces the event listener to only be called once, meaning that event calls after will not work. This can be useful for one-time actions, such as loading HTML into the document from Ajax."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@emptied.passive","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe media has become empty; for example, this event is sent if the media has already been loaded (or partially loaded), and the load() method is called to reload it.\n\n**Property:**\nThe `.passive` property helps with better scroll performance, especially on mobile devices."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@ended","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nPlayback has stopped because the end of the media was reached.\n\n**Property:**\n"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@ended.global","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nPlayback has stopped because the end of the media was reached.\n\n**Property:**\nThe `.global` property forces the event listener to be attached to the `document` instead of the target element."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@ended.self","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nPlayback has stopped because the end of the media was reached.\n\n**Property:**\nThe `.self` property attaches an event handler to the element, conditionally excluding the children of that element. This means that it only executes the expression when only target element is fired. This could be used for cards with additional interactives."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@ended.stop","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nPlayback has stopped because the end of the media was reached.\n\n**Property:**\nThe `.stop` property calls the `stopPropogation()` on the event when it is called, essentially preventing bubbling from child elements to parent elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@ended.outside","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nPlayback has stopped because the end of the media was reached.\n\n**Property:**\nThe `.outside` property attaches an event handler to the document, conditionally excluding the element it is attached to. This means that it only executes the expression when anything other than the target element is fired. This could be used for modals or special UI elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@ended.once","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nPlayback has stopped because the end of the media was reached.\n\n**Property:**\nThe `.once` property forces the event listener to only be called once, meaning that event calls after will not work. This can be useful for one-time actions, such as loading HTML into the document from Ajax."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@ended.passive","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nPlayback has stopped because the end of the media was reached.\n\n**Property:**\nThe `.passive` property helps with better scroll performance, especially on mobile devices."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@error","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA resource failed to load.\n\n**Property:**\n"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@error.global","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA resource failed to load.\n\n**Property:**\nThe `.global` property forces the event listener to be attached to the `document` instead of the target element."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@error.self","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA resource failed to load.\n\n**Property:**\nThe `.self` property attaches an event handler to the element, conditionally excluding the children of that element. This means that it only executes the expression when only target element is fired. This could be used for cards with additional interactives."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@error.stop","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA resource failed to load.\n\n**Property:**\nThe `.stop` property calls the `stopPropogation()` on the event when it is called, essentially preventing bubbling from child elements to parent elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@error.outside","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA resource failed to load.\n\n**Property:**\nThe `.outside` property attaches an event handler to the document, conditionally excluding the element it is attached to. This means that it only executes the expression when anything other than the target element is fired. This could be used for modals or special UI elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@error.once","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA resource failed to load.\n\n**Property:**\nThe `.once` property forces the event listener to only be called once, meaning that event calls after will not work. This can be useful for one-time actions, such as loading HTML into the document from Ajax."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@error.passive","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA resource failed to load.\n\n**Property:**\nThe `.passive` property helps with better scroll performance, especially on mobile devices."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@focus","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nAn element has received focus (does not bubble).\n\n**Property:**\n"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@focus.global","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nAn element has received focus (does not bubble).\n\n**Property:**\nThe `.global` property forces the event listener to be attached to the `document` instead of the target element."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@focus.self","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nAn element has received focus (does not bubble).\n\n**Property:**\nThe `.self` property attaches an event handler to the element, conditionally excluding the children of that element. This means that it only executes the expression when only target element is fired. This could be used for cards with additional interactives."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@focus.stop","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nAn element has received focus (does not bubble).\n\n**Property:**\nThe `.stop` property calls the `stopPropogation()` on the event when it is called, essentially preventing bubbling from child elements to parent elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@focus.outside","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nAn element has received focus (does not bubble).\n\n**Property:**\nThe `.outside` property attaches an event handler to the document, conditionally excluding the element it is attached to. This means that it only executes the expression when anything other than the target element is fired. This could be used for modals or special UI elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@focus.once","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nAn element has received focus (does not bubble).\n\n**Property:**\nThe `.once` property forces the event listener to only be called once, meaning that event calls after will not work. This can be useful for one-time actions, such as loading HTML into the document from Ajax."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@focus.passive","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nAn element has received focus (does not bubble).\n\n**Property:**\nThe `.passive` property helps with better scroll performance, especially on mobile devices."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@input","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe value of an element changes or the content of an element with the attribute contenteditable is modified.\n\n**Property:**\n"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@input.global","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe value of an element changes or the content of an element with the attribute contenteditable is modified.\n\n**Property:**\nThe `.global` property forces the event listener to be attached to the `document` instead of the target element."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@input.self","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe value of an element changes or the content of an element with the attribute contenteditable is modified.\n\n**Property:**\nThe `.self` property attaches an event handler to the element, conditionally excluding the children of that element. This means that it only executes the expression when only target element is fired. This could be used for cards with additional interactives."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@input.stop","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe value of an element changes or the content of an element with the attribute contenteditable is modified.\n\n**Property:**\nThe `.stop` property calls the `stopPropogation()` on the event when it is called, essentially preventing bubbling from child elements to parent elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@input.outside","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe value of an element changes or the content of an element with the attribute contenteditable is modified.\n\n**Property:**\nThe `.outside` property attaches an event handler to the document, conditionally excluding the element it is attached to. This means that it only executes the expression when anything other than the target element is fired. This could be used for modals or special UI elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@input.once","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe value of an element changes or the content of an element with the attribute contenteditable is modified.\n\n**Property:**\nThe `.once` property forces the event listener to only be called once, meaning that event calls after will not work. This can be useful for one-time actions, such as loading HTML into the document from Ajax."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@input.passive","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe value of an element changes or the content of an element with the attribute contenteditable is modified.\n\n**Property:**\nThe `.passive` property helps with better scroll performance, especially on mobile devices."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@invalid","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA submittable element has been checked and doesn't satisfy its constraints.\n\n**Property:**\n"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@invalid.global","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA submittable element has been checked and doesn't satisfy its constraints.\n\n**Property:**\nThe `.global` property forces the event listener to be attached to the `document` instead of the target element."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@invalid.self","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA submittable element has been checked and doesn't satisfy its constraints.\n\n**Property:**\nThe `.self` property attaches an event handler to the element, conditionally excluding the children of that element. This means that it only executes the expression when only target element is fired. This could be used for cards with additional interactives."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@invalid.stop","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA submittable element has been checked and doesn't satisfy its constraints.\n\n**Property:**\nThe `.stop` property calls the `stopPropogation()` on the event when it is called, essentially preventing bubbling from child elements to parent elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@invalid.outside","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA submittable element has been checked and doesn't satisfy its constraints.\n\n**Property:**\nThe `.outside` property attaches an event handler to the document, conditionally excluding the element it is attached to. This means that it only executes the expression when anything other than the target element is fired. This could be used for modals or special UI elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@invalid.once","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA submittable element has been checked and doesn't satisfy its constraints.\n\n**Property:**\nThe `.once` property forces the event listener to only be called once, meaning that event calls after will not work. This can be useful for one-time actions, such as loading HTML into the document from Ajax."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@invalid.passive","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA submittable element has been checked and doesn't satisfy its constraints.\n\n**Property:**\nThe `.passive` property helps with better scroll performance, especially on mobile devices."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@keydown","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA key is pressed down.\n\n**Property:**\n"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@keydown.global","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA key is pressed down.\n\n**Property:**\nThe `.global` property forces the event listener to be attached to the `document` instead of the target element."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@keydown.self","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA key is pressed down.\n\n**Property:**\nThe `.self` property attaches an event handler to the element, conditionally excluding the children of that element. This means that it only executes the expression when only target element is fired. This could be used for cards with additional interactives."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@keydown.stop","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA key is pressed down.\n\n**Property:**\nThe `.stop` property calls the `stopPropogation()` on the event when it is called, essentially preventing bubbling from child elements to parent elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@keydown.outside","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA key is pressed down.\n\n**Property:**\nThe `.outside` property attaches an event handler to the document, conditionally excluding the element it is attached to. This means that it only executes the expression when anything other than the target element is fired. This could be used for modals or special UI elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@keydown.once","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA key is pressed down.\n\n**Property:**\nThe `.once` property forces the event listener to only be called once, meaning that event calls after will not work. This can be useful for one-time actions, such as loading HTML into the document from Ajax."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@keydown.passive","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA key is pressed down.\n\n**Property:**\nThe `.passive` property helps with better scroll performance, especially on mobile devices."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@keypress","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA key is pressed down and that key normally produces a character value (use input instead).\n\n**Property:**\n"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@keypress.global","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA key is pressed down and that key normally produces a character value (use input instead).\n\n**Property:**\nThe `.global` property forces the event listener to be attached to the `document` instead of the target element."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@keypress.self","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA key is pressed down and that key normally produces a character value (use input instead).\n\n**Property:**\nThe `.self` property attaches an event handler to the element, conditionally excluding the children of that element. This means that it only executes the expression when only target element is fired. This could be used for cards with additional interactives."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@keypress.stop","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA key is pressed down and that key normally produces a character value (use input instead).\n\n**Property:**\nThe `.stop` property calls the `stopPropogation()` on the event when it is called, essentially preventing bubbling from child elements to parent elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@keypress.outside","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA key is pressed down and that key normally produces a character value (use input instead).\n\n**Property:**\nThe `.outside` property attaches an event handler to the document, conditionally excluding the element it is attached to. This means that it only executes the expression when anything other than the target element is fired. This could be used for modals or special UI elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@keypress.once","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA key is pressed down and that key normally produces a character value (use input instead).\n\n**Property:**\nThe `.once` property forces the event listener to only be called once, meaning that event calls after will not work. This can be useful for one-time actions, such as loading HTML into the document from Ajax."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@keypress.passive","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA key is pressed down and that key normally produces a character value (use input instead).\n\n**Property:**\nThe `.passive` property helps with better scroll performance, especially on mobile devices."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@keyup","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA key is released.\n\n**Property:**\n"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@keyup.global","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA key is released.\n\n**Property:**\nThe `.global` property forces the event listener to be attached to the `document` instead of the target element."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@keyup.self","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA key is released.\n\n**Property:**\nThe `.self` property attaches an event handler to the element, conditionally excluding the children of that element. This means that it only executes the expression when only target element is fired. This could be used for cards with additional interactives."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@keyup.stop","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA key is released.\n\n**Property:**\nThe `.stop` property calls the `stopPropogation()` on the event when it is called, essentially preventing bubbling from child elements to parent elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@keyup.outside","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA key is released.\n\n**Property:**\nThe `.outside` property attaches an event handler to the document, conditionally excluding the element it is attached to. This means that it only executes the expression when anything other than the target element is fired. This could be used for modals or special UI elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@keyup.once","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA key is released.\n\n**Property:**\nThe `.once` property forces the event listener to only be called once, meaning that event calls after will not work. This can be useful for one-time actions, such as loading HTML into the document from Ajax."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@keyup.passive","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA key is released.\n\n**Property:**\nThe `.passive` property helps with better scroll performance, especially on mobile devices."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@load","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA resource and its dependent resources have finished loading.\n\n**Property:**\n"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@load.global","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA resource and its dependent resources have finished loading.\n\n**Property:**\nThe `.global` property forces the event listener to be attached to the `document` instead of the target element."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@load.self","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA resource and its dependent resources have finished loading.\n\n**Property:**\nThe `.self` property attaches an event handler to the element, conditionally excluding the children of that element. This means that it only executes the expression when only target element is fired. This could be used for cards with additional interactives."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@load.stop","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA resource and its dependent resources have finished loading.\n\n**Property:**\nThe `.stop` property calls the `stopPropogation()` on the event when it is called, essentially preventing bubbling from child elements to parent elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@load.outside","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA resource and its dependent resources have finished loading.\n\n**Property:**\nThe `.outside` property attaches an event handler to the document, conditionally excluding the element it is attached to. This means that it only executes the expression when anything other than the target element is fired. This could be used for modals or special UI elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@load.once","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA resource and its dependent resources have finished loading.\n\n**Property:**\nThe `.once` property forces the event listener to only be called once, meaning that event calls after will not work. This can be useful for one-time actions, such as loading HTML into the document from Ajax."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@load.passive","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA resource and its dependent resources have finished loading.\n\n**Property:**\nThe `.passive` property helps with better scroll performance, especially on mobile devices."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@loadeddata","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe first frame of the media has finished loading.\n\n**Property:**\n"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@loadeddata.global","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe first frame of the media has finished loading.\n\n**Property:**\nThe `.global` property forces the event listener to be attached to the `document` instead of the target element."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@loadeddata.self","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe first frame of the media has finished loading.\n\n**Property:**\nThe `.self` property attaches an event handler to the element, conditionally excluding the children of that element. This means that it only executes the expression when only target element is fired. This could be used for cards with additional interactives."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@loadeddata.stop","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe first frame of the media has finished loading.\n\n**Property:**\nThe `.stop` property calls the `stopPropogation()` on the event when it is called, essentially preventing bubbling from child elements to parent elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@loadeddata.outside","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe first frame of the media has finished loading.\n\n**Property:**\nThe `.outside` property attaches an event handler to the document, conditionally excluding the element it is attached to. This means that it only executes the expression when anything other than the target element is fired. This could be used for modals or special UI elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@loadeddata.once","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe first frame of the media has finished loading.\n\n**Property:**\nThe `.once` property forces the event listener to only be called once, meaning that event calls after will not work. This can be useful for one-time actions, such as loading HTML into the document from Ajax."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@loadeddata.passive","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe first frame of the media has finished loading.\n\n**Property:**\nThe `.passive` property helps with better scroll performance, especially on mobile devices."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@loadedmetadata","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe metadata has been loaded.\n\n**Property:**\n"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@loadedmetadata.global","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe metadata has been loaded.\n\n**Property:**\nThe `.global` property forces the event listener to be attached to the `document` instead of the target element."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@loadedmetadata.self","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe metadata has been loaded.\n\n**Property:**\nThe `.self` property attaches an event handler to the element, conditionally excluding the children of that element. This means that it only executes the expression when only target element is fired. This could be used for cards with additional interactives."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@loadedmetadata.stop","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe metadata has been loaded.\n\n**Property:**\nThe `.stop` property calls the `stopPropogation()` on the event when it is called, essentially preventing bubbling from child elements to parent elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@loadedmetadata.outside","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe metadata has been loaded.\n\n**Property:**\nThe `.outside` property attaches an event handler to the document, conditionally excluding the element it is attached to. This means that it only executes the expression when anything other than the target element is fired. This could be used for modals or special UI elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@loadedmetadata.once","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe metadata has been loaded.\n\n**Property:**\nThe `.once` property forces the event listener to only be called once, meaning that event calls after will not work. This can be useful for one-time actions, such as loading HTML into the document from Ajax."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@loadedmetadata.passive","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe metadata has been loaded.\n\n**Property:**\nThe `.passive` property helps with better scroll performance, especially on mobile devices."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@loadstart","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nProgress has begun.\n\n**Property:**\n"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@loadstart.global","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nProgress has begun.\n\n**Property:**\nThe `.global` property forces the event listener to be attached to the `document` instead of the target element."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@loadstart.self","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nProgress has begun.\n\n**Property:**\nThe `.self` property attaches an event handler to the element, conditionally excluding the children of that element. This means that it only executes the expression when only target element is fired. This could be used for cards with additional interactives."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@loadstart.stop","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nProgress has begun.\n\n**Property:**\nThe `.stop` property calls the `stopPropogation()` on the event when it is called, essentially preventing bubbling from child elements to parent elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@loadstart.outside","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nProgress has begun.\n\n**Property:**\nThe `.outside` property attaches an event handler to the document, conditionally excluding the element it is attached to. This means that it only executes the expression when anything other than the target element is fired. This could be used for modals or special UI elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@loadstart.once","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nProgress has begun.\n\n**Property:**\nThe `.once` property forces the event listener to only be called once, meaning that event calls after will not work. This can be useful for one-time actions, such as loading HTML into the document from Ajax."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@loadstart.passive","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nProgress has begun.\n\n**Property:**\nThe `.passive` property helps with better scroll performance, especially on mobile devices."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@mounted","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nWhen a component is mounted onto an element, must be inline with `l-state`\n\n**Property:**\n"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@mounted.global","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nWhen a component is mounted onto an element, must be inline with `l-state`\n\n**Property:**\nThe `.global` property forces the event listener to be attached to the `document` instead of the target element."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@mounted.self","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nWhen a component is mounted onto an element, must be inline with `l-state`\n\n**Property:**\nThe `.self` property attaches an event handler to the element, conditionally excluding the children of that element. This means that it only executes the expression when only target element is fired. This could be used for cards with additional interactives."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@mounted.stop","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nWhen a component is mounted onto an element, must be inline with `l-state`\n\n**Property:**\nThe `.stop` property calls the `stopPropogation()` on the event when it is called, essentially preventing bubbling from child elements to parent elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@mounted.outside","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nWhen a component is mounted onto an element, must be inline with `l-state`\n\n**Property:**\nThe `.outside` property attaches an event handler to the document, conditionally excluding the element it is attached to. This means that it only executes the expression when anything other than the target element is fired. This could be used for modals or special UI elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@mounted.once","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nWhen a component is mounted onto an element, must be inline with `l-state`\n\n**Property:**\nThe `.once` property forces the event listener to only be called once, meaning that event calls after will not work. This can be useful for one-time actions, such as loading HTML into the document from Ajax."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@mounted.passive","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nWhen a component is mounted onto an element, must be inline with `l-state`\n\n**Property:**\nThe `.passive` property helps with better scroll performance, especially on mobile devices."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@mousedown","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA pointing device button (usually a mouse) is pressed on an element.\n\n**Property:**\n"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@mousedown.global","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA pointing device button (usually a mouse) is pressed on an element.\n\n**Property:**\nThe `.global` property forces the event listener to be attached to the `document` instead of the target element."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@mousedown.self","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA pointing device button (usually a mouse) is pressed on an element.\n\n**Property:**\nThe `.self` property attaches an event handler to the element, conditionally excluding the children of that element. This means that it only executes the expression when only target element is fired. This could be used for cards with additional interactives."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@mousedown.stop","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA pointing device button (usually a mouse) is pressed on an element.\n\n**Property:**\nThe `.stop` property calls the `stopPropogation()` on the event when it is called, essentially preventing bubbling from child elements to parent elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@mousedown.outside","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA pointing device button (usually a mouse) is pressed on an element.\n\n**Property:**\nThe `.outside` property attaches an event handler to the document, conditionally excluding the element it is attached to. This means that it only executes the expression when anything other than the target element is fired. This could be used for modals or special UI elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@mousedown.once","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA pointing device button (usually a mouse) is pressed on an element.\n\n**Property:**\nThe `.once` property forces the event listener to only be called once, meaning that event calls after will not work. This can be useful for one-time actions, such as loading HTML into the document from Ajax."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@mousedown.passive","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA pointing device button (usually a mouse) is pressed on an element.\n\n**Property:**\nThe `.passive` property helps with better scroll performance, especially on mobile devices."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@mousemove","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA pointing device is moved over an element.\n\n**Property:**\n"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@mousemove.global","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA pointing device is moved over an element.\n\n**Property:**\nThe `.global` property forces the event listener to be attached to the `document` instead of the target element."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@mousemove.self","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA pointing device is moved over an element.\n\n**Property:**\nThe `.self` property attaches an event handler to the element, conditionally excluding the children of that element. This means that it only executes the expression when only target element is fired. This could be used for cards with additional interactives."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@mousemove.stop","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA pointing device is moved over an element.\n\n**Property:**\nThe `.stop` property calls the `stopPropogation()` on the event when it is called, essentially preventing bubbling from child elements to parent elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@mousemove.outside","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA pointing device is moved over an element.\n\n**Property:**\nThe `.outside` property attaches an event handler to the document, conditionally excluding the element it is attached to. This means that it only executes the expression when anything other than the target element is fired. This could be used for modals or special UI elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@mousemove.once","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA pointing device is moved over an element.\n\n**Property:**\nThe `.once` property forces the event listener to only be called once, meaning that event calls after will not work. This can be useful for one-time actions, such as loading HTML into the document from Ajax."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@mousemove.passive","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA pointing device is moved over an element.\n\n**Property:**\nThe `.passive` property helps with better scroll performance, especially on mobile devices."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@mouseout","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA pointing device is moved off the element that has the listener attached or off one of its children.\n\n**Property:**\n"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@mouseout.global","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA pointing device is moved off the element that has the listener attached or off one of its children.\n\n**Property:**\nThe `.global` property forces the event listener to be attached to the `document` instead of the target element."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@mouseout.self","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA pointing device is moved off the element that has the listener attached or off one of its children.\n\n**Property:**\nThe `.self` property attaches an event handler to the element, conditionally excluding the children of that element. This means that it only executes the expression when only target element is fired. This could be used for cards with additional interactives."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@mouseout.stop","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA pointing device is moved off the element that has the listener attached or off one of its children.\n\n**Property:**\nThe `.stop` property calls the `stopPropogation()` on the event when it is called, essentially preventing bubbling from child elements to parent elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@mouseout.outside","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA pointing device is moved off the element that has the listener attached or off one of its children.\n\n**Property:**\nThe `.outside` property attaches an event handler to the document, conditionally excluding the element it is attached to. This means that it only executes the expression when anything other than the target element is fired. This could be used for modals or special UI elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@mouseout.once","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA pointing device is moved off the element that has the listener attached or off one of its children.\n\n**Property:**\nThe `.once` property forces the event listener to only be called once, meaning that event calls after will not work. This can be useful for one-time actions, such as loading HTML into the document from Ajax."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@mouseout.passive","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA pointing device is moved off the element that has the listener attached or off one of its children.\n\n**Property:**\nThe `.passive` property helps with better scroll performance, especially on mobile devices."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@mouseover","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA pointing device is moved onto the element that has the listener attached or onto one of its children.\n\n**Property:**\n"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@mouseover.global","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA pointing device is moved onto the element that has the listener attached or onto one of its children.\n\n**Property:**\nThe `.global` property forces the event listener to be attached to the `document` instead of the target element."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@mouseover.self","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA pointing device is moved onto the element that has the listener attached or onto one of its children.\n\n**Property:**\nThe `.self` property attaches an event handler to the element, conditionally excluding the children of that element. This means that it only executes the expression when only target element is fired. This could be used for cards with additional interactives."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@mouseover.stop","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA pointing device is moved onto the element that has the listener attached or onto one of its children.\n\n**Property:**\nThe `.stop` property calls the `stopPropogation()` on the event when it is called, essentially preventing bubbling from child elements to parent elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@mouseover.outside","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA pointing device is moved onto the element that has the listener attached or onto one of its children.\n\n**Property:**\nThe `.outside` property attaches an event handler to the document, conditionally excluding the element it is attached to. This means that it only executes the expression when anything other than the target element is fired. This could be used for modals or special UI elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@mouseover.once","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA pointing device is moved onto the element that has the listener attached or onto one of its children.\n\n**Property:**\nThe `.once` property forces the event listener to only be called once, meaning that event calls after will not work. This can be useful for one-time actions, such as loading HTML into the document from Ajax."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@mouseover.passive","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA pointing device is moved onto the element that has the listener attached or onto one of its children.\n\n**Property:**\nThe `.passive` property helps with better scroll performance, especially on mobile devices."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@mouseup","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA pointing device button is released over an element.\n\n**Property:**\n"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@mouseup.global","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA pointing device button is released over an element.\n\n**Property:**\nThe `.global` property forces the event listener to be attached to the `document` instead of the target element."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@mouseup.self","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA pointing device button is released over an element.\n\n**Property:**\nThe `.self` property attaches an event handler to the element, conditionally excluding the children of that element. This means that it only executes the expression when only target element is fired. This could be used for cards with additional interactives."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@mouseup.stop","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA pointing device button is released over an element.\n\n**Property:**\nThe `.stop` property calls the `stopPropogation()` on the event when it is called, essentially preventing bubbling from child elements to parent elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@mouseup.outside","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA pointing device button is released over an element.\n\n**Property:**\nThe `.outside` property attaches an event handler to the document, conditionally excluding the element it is attached to. This means that it only executes the expression when anything other than the target element is fired. This could be used for modals or special UI elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@mouseup.once","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA pointing device button is released over an element.\n\n**Property:**\nThe `.once` property forces the event listener to only be called once, meaning that event calls after will not work. This can be useful for one-time actions, such as loading HTML into the document from Ajax."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@mouseup.passive","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA pointing device button is released over an element.\n\n**Property:**\nThe `.passive` property helps with better scroll performance, especially on mobile devices."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@pause","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nPlayback has been paused.\n\n**Property:**\n"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@pause.global","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nPlayback has been paused.\n\n**Property:**\nThe `.global` property forces the event listener to be attached to the `document` instead of the target element."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@pause.self","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nPlayback has been paused.\n\n**Property:**\nThe `.self` property attaches an event handler to the element, conditionally excluding the children of that element. This means that it only executes the expression when only target element is fired. This could be used for cards with additional interactives."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@pause.stop","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nPlayback has been paused.\n\n**Property:**\nThe `.stop` property calls the `stopPropogation()` on the event when it is called, essentially preventing bubbling from child elements to parent elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@pause.outside","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nPlayback has been paused.\n\n**Property:**\nThe `.outside` property attaches an event handler to the document, conditionally excluding the element it is attached to. This means that it only executes the expression when anything other than the target element is fired. This could be used for modals or special UI elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@pause.once","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nPlayback has been paused.\n\n**Property:**\nThe `.once` property forces the event listener to only be called once, meaning that event calls after will not work. This can be useful for one-time actions, such as loading HTML into the document from Ajax."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@pause.passive","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nPlayback has been paused.\n\n**Property:**\nThe `.passive` property helps with better scroll performance, especially on mobile devices."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@play","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nPlayback has begun.\n\n**Property:**\n"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@play.global","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nPlayback has begun.\n\n**Property:**\nThe `.global` property forces the event listener to be attached to the `document` instead of the target element."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@play.self","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nPlayback has begun.\n\n**Property:**\nThe `.self` property attaches an event handler to the element, conditionally excluding the children of that element. This means that it only executes the expression when only target element is fired. This could be used for cards with additional interactives."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@play.stop","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nPlayback has begun.\n\n**Property:**\nThe `.stop` property calls the `stopPropogation()` on the event when it is called, essentially preventing bubbling from child elements to parent elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@play.outside","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nPlayback has begun.\n\n**Property:**\nThe `.outside` property attaches an event handler to the document, conditionally excluding the element it is attached to. This means that it only executes the expression when anything other than the target element is fired. This could be used for modals or special UI elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@play.once","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nPlayback has begun.\n\n**Property:**\nThe `.once` property forces the event listener to only be called once, meaning that event calls after will not work. This can be useful for one-time actions, such as loading HTML into the document from Ajax."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@play.passive","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nPlayback has begun.\n\n**Property:**\nThe `.passive` property helps with better scroll performance, especially on mobile devices."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@playing","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nPlayback is ready to start after having been paused or delayed due to lack of data.\n\n**Property:**\n"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@playing.global","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nPlayback is ready to start after having been paused or delayed due to lack of data.\n\n**Property:**\nThe `.global` property forces the event listener to be attached to the `document` instead of the target element."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@playing.self","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nPlayback is ready to start after having been paused or delayed due to lack of data.\n\n**Property:**\nThe `.self` property attaches an event handler to the element, conditionally excluding the children of that element. This means that it only executes the expression when only target element is fired. This could be used for cards with additional interactives."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@playing.stop","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nPlayback is ready to start after having been paused or delayed due to lack of data.\n\n**Property:**\nThe `.stop` property calls the `stopPropogation()` on the event when it is called, essentially preventing bubbling from child elements to parent elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@playing.outside","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nPlayback is ready to start after having been paused or delayed due to lack of data.\n\n**Property:**\nThe `.outside` property attaches an event handler to the document, conditionally excluding the element it is attached to. This means that it only executes the expression when anything other than the target element is fired. This could be used for modals or special UI elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@playing.once","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nPlayback is ready to start after having been paused or delayed due to lack of data.\n\n**Property:**\nThe `.once` property forces the event listener to only be called once, meaning that event calls after will not work. This can be useful for one-time actions, such as loading HTML into the document from Ajax."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@playing.passive","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nPlayback is ready to start after having been paused or delayed due to lack of data.\n\n**Property:**\nThe `.passive` property helps with better scroll performance, especially on mobile devices."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@progress","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nIn progress.\n\n**Property:**\n"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@progress.global","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nIn progress.\n\n**Property:**\nThe `.global` property forces the event listener to be attached to the `document` instead of the target element."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@progress.self","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nIn progress.\n\n**Property:**\nThe `.self` property attaches an event handler to the element, conditionally excluding the children of that element. This means that it only executes the expression when only target element is fired. This could be used for cards with additional interactives."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@progress.stop","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nIn progress.\n\n**Property:**\nThe `.stop` property calls the `stopPropogation()` on the event when it is called, essentially preventing bubbling from child elements to parent elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@progress.outside","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nIn progress.\n\n**Property:**\nThe `.outside` property attaches an event handler to the document, conditionally excluding the element it is attached to. This means that it only executes the expression when anything other than the target element is fired. This could be used for modals or special UI elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@progress.once","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nIn progress.\n\n**Property:**\nThe `.once` property forces the event listener to only be called once, meaning that event calls after will not work. This can be useful for one-time actions, such as loading HTML into the document from Ajax."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@progress.passive","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nIn progress.\n\n**Property:**\nThe `.passive` property helps with better scroll performance, especially on mobile devices."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@ratechange","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe playback rate has changed.\n\n**Property:**\n"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@ratechange.global","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe playback rate has changed.\n\n**Property:**\nThe `.global` property forces the event listener to be attached to the `document` instead of the target element."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@ratechange.self","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe playback rate has changed.\n\n**Property:**\nThe `.self` property attaches an event handler to the element, conditionally excluding the children of that element. This means that it only executes the expression when only target element is fired. This could be used for cards with additional interactives."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@ratechange.stop","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe playback rate has changed.\n\n**Property:**\nThe `.stop` property calls the `stopPropogation()` on the event when it is called, essentially preventing bubbling from child elements to parent elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@ratechange.outside","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe playback rate has changed.\n\n**Property:**\nThe `.outside` property attaches an event handler to the document, conditionally excluding the element it is attached to. This means that it only executes the expression when anything other than the target element is fired. This could be used for modals or special UI elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@ratechange.once","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe playback rate has changed.\n\n**Property:**\nThe `.once` property forces the event listener to only be called once, meaning that event calls after will not work. This can be useful for one-time actions, such as loading HTML into the document from Ajax."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@ratechange.passive","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe playback rate has changed.\n\n**Property:**\nThe `.passive` property helps with better scroll performance, especially on mobile devices."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@reset","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA form is reset.\n\n**Property:**\n"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@reset.global","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA form is reset.\n\n**Property:**\nThe `.global` property forces the event listener to be attached to the `document` instead of the target element."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@reset.self","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA form is reset.\n\n**Property:**\nThe `.self` property attaches an event handler to the element, conditionally excluding the children of that element. This means that it only executes the expression when only target element is fired. This could be used for cards with additional interactives."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@reset.stop","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA form is reset.\n\n**Property:**\nThe `.stop` property calls the `stopPropogation()` on the event when it is called, essentially preventing bubbling from child elements to parent elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@reset.outside","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA form is reset.\n\n**Property:**\nThe `.outside` property attaches an event handler to the document, conditionally excluding the element it is attached to. This means that it only executes the expression when anything other than the target element is fired. This could be used for modals or special UI elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@reset.once","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA form is reset.\n\n**Property:**\nThe `.once` property forces the event listener to only be called once, meaning that event calls after will not work. This can be useful for one-time actions, such as loading HTML into the document from Ajax."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@reset.passive","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA form is reset.\n\n**Property:**\nThe `.passive` property helps with better scroll performance, especially on mobile devices."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@resize","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe document view has been resized.\n\n**Property:**\n"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@resize.global","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe document view has been resized.\n\n**Property:**\nThe `.global` property forces the event listener to be attached to the `document` instead of the target element."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@resize.self","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe document view has been resized.\n\n**Property:**\nThe `.self` property attaches an event handler to the element, conditionally excluding the children of that element. This means that it only executes the expression when only target element is fired. This could be used for cards with additional interactives."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@resize.stop","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe document view has been resized.\n\n**Property:**\nThe `.stop` property calls the `stopPropogation()` on the event when it is called, essentially preventing bubbling from child elements to parent elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@resize.outside","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe document view has been resized.\n\n**Property:**\nThe `.outside` property attaches an event handler to the document, conditionally excluding the element it is attached to. This means that it only executes the expression when anything other than the target element is fired. This could be used for modals or special UI elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@resize.once","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe document view has been resized.\n\n**Property:**\nThe `.once` property forces the event listener to only be called once, meaning that event calls after will not work. This can be useful for one-time actions, such as loading HTML into the document from Ajax."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@resize.passive","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe document view has been resized.\n\n**Property:**\nThe `.passive` property helps with better scroll performance, especially on mobile devices."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@readystatechange","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe readyState attribute of a document has changed.\n\n**Property:**\n"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@readystatechange.global","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe readyState attribute of a document has changed.\n\n**Property:**\nThe `.global` property forces the event listener to be attached to the `document` instead of the target element."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@readystatechange.self","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe readyState attribute of a document has changed.\n\n**Property:**\nThe `.self` property attaches an event handler to the element, conditionally excluding the children of that element. This means that it only executes the expression when only target element is fired. This could be used for cards with additional interactives."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@readystatechange.stop","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe readyState attribute of a document has changed.\n\n**Property:**\nThe `.stop` property calls the `stopPropogation()` on the event when it is called, essentially preventing bubbling from child elements to parent elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@readystatechange.outside","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe readyState attribute of a document has changed.\n\n**Property:**\nThe `.outside` property attaches an event handler to the document, conditionally excluding the element it is attached to. This means that it only executes the expression when anything other than the target element is fired. This could be used for modals or special UI elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@readystatechange.once","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe readyState attribute of a document has changed.\n\n**Property:**\nThe `.once` property forces the event listener to only be called once, meaning that event calls after will not work. This can be useful for one-time actions, such as loading HTML into the document from Ajax."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@readystatechange.passive","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe readyState attribute of a document has changed.\n\n**Property:**\nThe `.passive` property helps with better scroll performance, especially on mobile devices."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@scroll","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe document view or an element has been scrolled.\n\n**Property:**\n"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@scroll.global","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe document view or an element has been scrolled.\n\n**Property:**\nThe `.global` property forces the event listener to be attached to the `document` instead of the target element."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@scroll.self","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe document view or an element has been scrolled.\n\n**Property:**\nThe `.self` property attaches an event handler to the element, conditionally excluding the children of that element. This means that it only executes the expression when only target element is fired. This could be used for cards with additional interactives."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@scroll.stop","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe document view or an element has been scrolled.\n\n**Property:**\nThe `.stop` property calls the `stopPropogation()` on the event when it is called, essentially preventing bubbling from child elements to parent elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@scroll.outside","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe document view or an element has been scrolled.\n\n**Property:**\nThe `.outside` property attaches an event handler to the document, conditionally excluding the element it is attached to. This means that it only executes the expression when anything other than the target element is fired. This could be used for modals or special UI elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@scroll.once","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe document view or an element has been scrolled.\n\n**Property:**\nThe `.once` property forces the event listener to only be called once, meaning that event calls after will not work. This can be useful for one-time actions, such as loading HTML into the document from Ajax."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@scroll.passive","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe document view or an element has been scrolled.\n\n**Property:**\nThe `.passive` property helps with better scroll performance, especially on mobile devices."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@seeked","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA seek operation completed.\n\n**Property:**\n"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@seeked.global","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA seek operation completed.\n\n**Property:**\nThe `.global` property forces the event listener to be attached to the `document` instead of the target element."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@seeked.self","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA seek operation completed.\n\n**Property:**\nThe `.self` property attaches an event handler to the element, conditionally excluding the children of that element. This means that it only executes the expression when only target element is fired. This could be used for cards with additional interactives."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@seeked.stop","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA seek operation completed.\n\n**Property:**\nThe `.stop` property calls the `stopPropogation()` on the event when it is called, essentially preventing bubbling from child elements to parent elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@seeked.outside","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA seek operation completed.\n\n**Property:**\nThe `.outside` property attaches an event handler to the document, conditionally excluding the element it is attached to. This means that it only executes the expression when anything other than the target element is fired. This could be used for modals or special UI elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@seeked.once","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA seek operation completed.\n\n**Property:**\nThe `.once` property forces the event listener to only be called once, meaning that event calls after will not work. This can be useful for one-time actions, such as loading HTML into the document from Ajax."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@seeked.passive","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA seek operation completed.\n\n**Property:**\nThe `.passive` property helps with better scroll performance, especially on mobile devices."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@seeking","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA seek operation began.\n\n**Property:**\n"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@seeking.global","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA seek operation began.\n\n**Property:**\nThe `.global` property forces the event listener to be attached to the `document` instead of the target element."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@seeking.self","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA seek operation began.\n\n**Property:**\nThe `.self` property attaches an event handler to the element, conditionally excluding the children of that element. This means that it only executes the expression when only target element is fired. This could be used for cards with additional interactives."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@seeking.stop","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA seek operation began.\n\n**Property:**\nThe `.stop` property calls the `stopPropogation()` on the event when it is called, essentially preventing bubbling from child elements to parent elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@seeking.outside","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA seek operation began.\n\n**Property:**\nThe `.outside` property attaches an event handler to the document, conditionally excluding the element it is attached to. This means that it only executes the expression when anything other than the target element is fired. This could be used for modals or special UI elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@seeking.once","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA seek operation began.\n\n**Property:**\nThe `.once` property forces the event listener to only be called once, meaning that event calls after will not work. This can be useful for one-time actions, such as loading HTML into the document from Ajax."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@seeking.passive","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA seek operation began.\n\n**Property:**\nThe `.passive` property helps with better scroll performance, especially on mobile devices."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@select","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nSome text is being selected.\n\n**Property:**\n"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@select.global","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nSome text is being selected.\n\n**Property:**\nThe `.global` property forces the event listener to be attached to the `document` instead of the target element."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@select.self","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nSome text is being selected.\n\n**Property:**\nThe `.self` property attaches an event handler to the element, conditionally excluding the children of that element. This means that it only executes the expression when only target element is fired. This could be used for cards with additional interactives."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@select.stop","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nSome text is being selected.\n\n**Property:**\nThe `.stop` property calls the `stopPropogation()` on the event when it is called, essentially preventing bubbling from child elements to parent elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@select.outside","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nSome text is being selected.\n\n**Property:**\nThe `.outside` property attaches an event handler to the document, conditionally excluding the element it is attached to. This means that it only executes the expression when anything other than the target element is fired. This could be used for modals or special UI elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@select.once","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nSome text is being selected.\n\n**Property:**\nThe `.once` property forces the event listener to only be called once, meaning that event calls after will not work. This can be useful for one-time actions, such as loading HTML into the document from Ajax."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@select.passive","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nSome text is being selected.\n\n**Property:**\nThe `.passive` property helps with better scroll performance, especially on mobile devices."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@show","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA contextmenu event was fired on/bubbled to an element that has a contextmenu attribute\n\n**Property:**\n"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@show.global","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA contextmenu event was fired on/bubbled to an element that has a contextmenu attribute\n\n**Property:**\nThe `.global` property forces the event listener to be attached to the `document` instead of the target element."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@show.self","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA contextmenu event was fired on/bubbled to an element that has a contextmenu attribute\n\n**Property:**\nThe `.self` property attaches an event handler to the element, conditionally excluding the children of that element. This means that it only executes the expression when only target element is fired. This could be used for cards with additional interactives."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@show.stop","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA contextmenu event was fired on/bubbled to an element that has a contextmenu attribute\n\n**Property:**\nThe `.stop` property calls the `stopPropogation()` on the event when it is called, essentially preventing bubbling from child elements to parent elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@show.outside","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA contextmenu event was fired on/bubbled to an element that has a contextmenu attribute\n\n**Property:**\nThe `.outside` property attaches an event handler to the document, conditionally excluding the element it is attached to. This means that it only executes the expression when anything other than the target element is fired. This could be used for modals or special UI elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@show.once","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA contextmenu event was fired on/bubbled to an element that has a contextmenu attribute\n\n**Property:**\nThe `.once` property forces the event listener to only be called once, meaning that event calls after will not work. This can be useful for one-time actions, such as loading HTML into the document from Ajax."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@show.passive","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA contextmenu event was fired on/bubbled to an element that has a contextmenu attribute\n\n**Property:**\nThe `.passive` property helps with better scroll performance, especially on mobile devices."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@stalled","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe user agent is trying to fetch media data, but data is unexpectedly not forthcoming.\n\n**Property:**\n"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@stalled.global","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe user agent is trying to fetch media data, but data is unexpectedly not forthcoming.\n\n**Property:**\nThe `.global` property forces the event listener to be attached to the `document` instead of the target element."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@stalled.self","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe user agent is trying to fetch media data, but data is unexpectedly not forthcoming.\n\n**Property:**\nThe `.self` property attaches an event handler to the element, conditionally excluding the children of that element. This means that it only executes the expression when only target element is fired. This could be used for cards with additional interactives."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@stalled.stop","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe user agent is trying to fetch media data, but data is unexpectedly not forthcoming.\n\n**Property:**\nThe `.stop` property calls the `stopPropogation()` on the event when it is called, essentially preventing bubbling from child elements to parent elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@stalled.outside","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe user agent is trying to fetch media data, but data is unexpectedly not forthcoming.\n\n**Property:**\nThe `.outside` property attaches an event handler to the document, conditionally excluding the element it is attached to. This means that it only executes the expression when anything other than the target element is fired. This could be used for modals or special UI elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@stalled.once","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe user agent is trying to fetch media data, but data is unexpectedly not forthcoming.\n\n**Property:**\nThe `.once` property forces the event listener to only be called once, meaning that event calls after will not work. This can be useful for one-time actions, such as loading HTML into the document from Ajax."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@stalled.passive","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe user agent is trying to fetch media data, but data is unexpectedly not forthcoming.\n\n**Property:**\nThe `.passive` property helps with better scroll performance, especially on mobile devices."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@submit","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA form is submitted.\n\n**Property:**\n"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@submit.global","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA form is submitted.\n\n**Property:**\nThe `.global` property forces the event listener to be attached to the `document` instead of the target element."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@submit.self","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA form is submitted.\n\n**Property:**\nThe `.self` property attaches an event handler to the element, conditionally excluding the children of that element. This means that it only executes the expression when only target element is fired. This could be used for cards with additional interactives."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@submit.stop","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA form is submitted.\n\n**Property:**\nThe `.stop` property calls the `stopPropogation()` on the event when it is called, essentially preventing bubbling from child elements to parent elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@submit.outside","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA form is submitted.\n\n**Property:**\nThe `.outside` property attaches an event handler to the document, conditionally excluding the element it is attached to. This means that it only executes the expression when anything other than the target element is fired. This could be used for modals or special UI elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@submit.once","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA form is submitted.\n\n**Property:**\nThe `.once` property forces the event listener to only be called once, meaning that event calls after will not work. This can be useful for one-time actions, such as loading HTML into the document from Ajax."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@submit.passive","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nA form is submitted.\n\n**Property:**\nThe `.passive` property helps with better scroll performance, especially on mobile devices."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@suspend","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nMedia data loading has been suspended.\n\n**Property:**\n"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@suspend.global","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nMedia data loading has been suspended.\n\n**Property:**\nThe `.global` property forces the event listener to be attached to the `document` instead of the target element."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@suspend.self","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nMedia data loading has been suspended.\n\n**Property:**\nThe `.self` property attaches an event handler to the element, conditionally excluding the children of that element. This means that it only executes the expression when only target element is fired. This could be used for cards with additional interactives."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@suspend.stop","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nMedia data loading has been suspended.\n\n**Property:**\nThe `.stop` property calls the `stopPropogation()` on the event when it is called, essentially preventing bubbling from child elements to parent elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@suspend.outside","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nMedia data loading has been suspended.\n\n**Property:**\nThe `.outside` property attaches an event handler to the document, conditionally excluding the element it is attached to. This means that it only executes the expression when anything other than the target element is fired. This could be used for modals or special UI elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@suspend.once","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nMedia data loading has been suspended.\n\n**Property:**\nThe `.once` property forces the event listener to only be called once, meaning that event calls after will not work. This can be useful for one-time actions, such as loading HTML into the document from Ajax."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@suspend.passive","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nMedia data loading has been suspended.\n\n**Property:**\nThe `.passive` property helps with better scroll performance, especially on mobile devices."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@timeupdate","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe time indicated by the currentTime attribute has been updated.\n\n**Property:**\n"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@timeupdate.global","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe time indicated by the currentTime attribute has been updated.\n\n**Property:**\nThe `.global` property forces the event listener to be attached to the `document` instead of the target element."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@timeupdate.self","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe time indicated by the currentTime attribute has been updated.\n\n**Property:**\nThe `.self` property attaches an event handler to the element, conditionally excluding the children of that element. This means that it only executes the expression when only target element is fired. This could be used for cards with additional interactives."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@timeupdate.stop","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe time indicated by the currentTime attribute has been updated.\n\n**Property:**\nThe `.stop` property calls the `stopPropogation()` on the event when it is called, essentially preventing bubbling from child elements to parent elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@timeupdate.outside","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe time indicated by the currentTime attribute has been updated.\n\n**Property:**\nThe `.outside` property attaches an event handler to the document, conditionally excluding the element it is attached to. This means that it only executes the expression when anything other than the target element is fired. This could be used for modals or special UI elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@timeupdate.once","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe time indicated by the currentTime attribute has been updated.\n\n**Property:**\nThe `.once` property forces the event listener to only be called once, meaning that event calls after will not work. This can be useful for one-time actions, such as loading HTML into the document from Ajax."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@timeupdate.passive","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe time indicated by the currentTime attribute has been updated.\n\n**Property:**\nThe `.passive` property helps with better scroll performance, especially on mobile devices."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@volumechange","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe volume has changed.\n\n**Property:**\n"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@volumechange.global","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe volume has changed.\n\n**Property:**\nThe `.global` property forces the event listener to be attached to the `document` instead of the target element."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@volumechange.self","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe volume has changed.\n\n**Property:**\nThe `.self` property attaches an event handler to the element, conditionally excluding the children of that element. This means that it only executes the expression when only target element is fired. This could be used for cards with additional interactives."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@volumechange.stop","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe volume has changed.\n\n**Property:**\nThe `.stop` property calls the `stopPropogation()` on the event when it is called, essentially preventing bubbling from child elements to parent elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@volumechange.outside","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe volume has changed.\n\n**Property:**\nThe `.outside` property attaches an event handler to the document, conditionally excluding the element it is attached to. This means that it only executes the expression when anything other than the target element is fired. This could be used for modals or special UI elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@volumechange.once","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe volume has changed.\n\n**Property:**\nThe `.once` property forces the event listener to only be called once, meaning that event calls after will not work. This can be useful for one-time actions, such as loading HTML into the document from Ajax."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@volumechange.passive","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nThe volume has changed.\n\n**Property:**\nThe `.passive` property helps with better scroll performance, especially on mobile devices."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@waiting","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nPlayback has stopped because of a temporary lack of data.\n\n**Property:**\n"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@waiting.global","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nPlayback has stopped because of a temporary lack of data.\n\n**Property:**\nThe `.global` property forces the event listener to be attached to the `document` instead of the target element."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@waiting.self","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nPlayback has stopped because of a temporary lack of data.\n\n**Property:**\nThe `.self` property attaches an event handler to the element, conditionally excluding the children of that element. This means that it only executes the expression when only target element is fired. This could be used for cards with additional interactives."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@waiting.stop","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nPlayback has stopped because of a temporary lack of data.\n\n**Property:**\nThe `.stop` property calls the `stopPropogation()` on the event when it is called, essentially preventing bubbling from child elements to parent elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@waiting.outside","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nPlayback has stopped because of a temporary lack of data.\n\n**Property:**\nThe `.outside` property attaches an event handler to the document, conditionally excluding the element it is attached to. This means that it only executes the expression when anything other than the target element is fired. This could be used for modals or special UI elements."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@waiting.once","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nPlayback has stopped because of a temporary lack of data.\n\n**Property:**\nThe `.once` property forces the event listener to only be called once, meaning that event calls after will not work. This can be useful for one-time actions, such as loading HTML into the document from Ajax."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"@waiting.passive","description":{"kind":"markdown","value":"`l-on` adds an event listener to the element is is attached to. This means if that event is emited on the element, then it will execute the expression. Check the Events refererence on MDN for more information.\n\n**Syntax:** `<button l-on:[event]=\"[expression]\">...</button>`\n\n**Example:** `<button l-on:click=\"key = 'value'\">Change value</button>`\n\n**Event:**\nPlayback has stopped because of a temporary lack of data.\n\n**Property:**\nThe `.passive` property helps with better scroll performance, especially on mobile devices."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/on-directive"}]},{"name":"l-bind:class","description":{"kind":"markdown","value":"`l-bind` changes the value of an attribute based on the expression. If the value is a boolean, the attribute will be conditionally rendered.\n\n**Syntax:** `<button l-bind:[attribute]=\"[expression]\">...</button>`\n\n**Example:** `<button l-bind:title=\"key\">...</button>`\n\n**Attribute:**\nA space-separated list of the classes of the element. Classes allows CSS and JavaScript to select and access specific elements via the [class selectors](/en-US/docs/Web/CSS/Class_selectors) or functions like the method [`Document.getElementsByClassName()`](/en-US/docs/Web/API/Document/getElementsByClassName \"returns an array-like object of all child elements which have all of the given class names.\")."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/bind-directive"}]},{"name":"l-bind:disabled","description":{"kind":"markdown","value":"`l-bind` changes the value of an attribute based on the expression. If the value is a boolean, the attribute will be conditionally rendered.\n\n**Syntax:** `<button l-bind:[attribute]=\"[expression]\">...</button>`\n\n**Example:** `<button l-bind:title=\"key\">...</button>`\n\n**Attribute:**\nThis Boolean attribute indicates that the user cannot interact with the control."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/bind-directive"}]},{"name":"l-bind:readonly","description":{"kind":"markdown","value":"`l-bind` changes the value of an attribute based on the expression. If the value is a boolean, the attribute will be conditionally rendered.\n\n**Syntax:** `<button l-bind:[attribute]=\"[expression]\">...</button>`\n\n**Example:** `<button l-bind:title=\"key\">...</button>`\n\n**Attribute:**\nThis Boolean attribute indicates that the user cannot modify the value of the control."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/bind-directive"}]},{"name":"l-bind:required","description":{"kind":"markdown","value":"`l-bind` changes the value of an attribute based on the expression. If the value is a boolean, the attribute will be conditionally rendered.\n\n**Syntax:** `<button l-bind:[attribute]=\"[expression]\">...</button>`\n\n**Example:** `<button l-bind:title=\"key\">...</button>`\n\n**Attribute:**\nThis attribute specifies that the user must fill in a value before submitting a form."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/bind-directive"}]},{"name":"l-bind:checked","description":{"kind":"markdown","value":"`l-bind` changes the value of an attribute based on the expression. If the value is a boolean, the attribute will be conditionally rendered.\n\n**Syntax:** `<button l-bind:[attribute]=\"[expression]\">...</button>`\n\n**Example:** `<button l-bind:title=\"key\">...</button>`\n\n**Attribute:**\nIndicates the current \"checked\" state of checkboxes, radio buttons, and other widgets."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/bind-directive"}]},{"name":"l-bind:hidden","description":{"kind":"markdown","value":"`l-bind` changes the value of an attribute based on the expression. If the value is a boolean, the attribute will be conditionally rendered.\n\n**Syntax:** `<button l-bind:[attribute]=\"[expression]\">...</button>`\n\n**Example:** `<button l-bind:title=\"key\">...</button>`\n\n**Attribute:**\nA Boolean attribute indicates that the element is not yet, or is no longer, _relevant_. For example, it can be used to hide elements of the page that can't be used until the login process has been completed. The browser won't render such elements. This attribute must not be used to hide content that could legitimately be shown."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/bind-directive"}]},{"name":"l-bind:selected","description":{"kind":"markdown","value":"`l-bind` changes the value of an attribute based on the expression. If the value is a boolean, the attribute will be conditionally rendered.\n\n**Syntax:** `<button l-bind:[attribute]=\"[expression]\">...</button>`\n\n**Example:** `<button l-bind:title=\"key\">...</button>`\n\n**Attribute:**\nIf present, this Boolean attribute indicates that the option is initially selected. If the `<option>` element is the descendant of a [`<select>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/select \"The HTML <select> element represents a control that provides a menu of options\") element whose [`multiple`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/select#attr-multiple) attribute is not set, only one single `<option>` of this [`<select>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/select \"The HTML <select> element represents a control that provides a menu of options\") element may have the `selected` attribute."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/bind-directive"}]},{"name":":class","description":{"kind":"markdown","value":"`l-bind` changes the value of an attribute based on the expression. If the value is a boolean, the attribute will be conditionally rendered.\n\n**Syntax:** `<button l-bind:[attribute]=\"[expression]\">...</button>`\n\n**Example:** `<button l-bind:title=\"key\">...</button>`\n\n**Attribute:**\nA space-separated list of the classes of the element. Classes allows CSS and JavaScript to select and access specific elements via the [class selectors](/en-US/docs/Web/CSS/Class_selectors) or functions like the method [`Document.getElementsByClassName()`](/en-US/docs/Web/API/Document/getElementsByClassName \"returns an array-like object of all child elements which have all of the given class names.\")."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/bind-directive"}]},{"name":":disabled","description":{"kind":"markdown","value":"`l-bind` changes the value of an attribute based on the expression. If the value is a boolean, the attribute will be conditionally rendered.\n\n**Syntax:** `<button l-bind:[attribute]=\"[expression]\">...</button>`\n\n**Example:** `<button l-bind:title=\"key\">...</button>`\n\n**Attribute:**\nThis Boolean attribute indicates that the user cannot interact with the control."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/bind-directive"}]},{"name":":readonly","description":{"kind":"markdown","value":"`l-bind` changes the value of an attribute based on the expression. If the value is a boolean, the attribute will be conditionally rendered.\n\n**Syntax:** `<button l-bind:[attribute]=\"[expression]\">...</button>`\n\n**Example:** `<button l-bind:title=\"key\">...</button>`\n\n**Attribute:**\nThis Boolean attribute indicates that the user cannot modify the value of the control."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/bind-directive"}]},{"name":":required","description":{"kind":"markdown","value":"`l-bind` changes the value of an attribute based on the expression. If the value is a boolean, the attribute will be conditionally rendered.\n\n**Syntax:** `<button l-bind:[attribute]=\"[expression]\">...</button>`\n\n**Example:** `<button l-bind:title=\"key\">...</button>`\n\n**Attribute:**\nThis attribute specifies that the user must fill in a value before submitting a form."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/bind-directive"}]},{"name":":checked","description":{"kind":"markdown","value":"`l-bind` changes the value of an attribute based on the expression. If the value is a boolean, the attribute will be conditionally rendered.\n\n**Syntax:** `<button l-bind:[attribute]=\"[expression]\">...</button>`\n\n**Example:** `<button l-bind:title=\"key\">...</button>`\n\n**Attribute:**\nIndicates the current \"checked\" state of checkboxes, radio buttons, and other widgets."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/bind-directive"}]},{"name":":hidden","description":{"kind":"markdown","value":"`l-bind` changes the value of an attribute based on the expression. If the value is a boolean, the attribute will be conditionally rendered.\n\n**Syntax:** `<button l-bind:[attribute]=\"[expression]\">...</button>`\n\n**Example:** `<button l-bind:title=\"key\">...</button>`\n\n**Attribute:**\nA Boolean attribute indicates that the element is not yet, or is no longer, _relevant_. For example, it can be used to hide elements of the page that can't be used until the login process has been completed. The browser won't render such elements. This attribute must not be used to hide content that could legitimately be shown."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/bind-directive"}]},{"name":":selected","description":{"kind":"markdown","value":"`l-bind` changes the value of an attribute based on the expression. If the value is a boolean, the attribute will be conditionally rendered.\n\n**Syntax:** `<button l-bind:[attribute]=\"[expression]\">...</button>`\n\n**Example:** `<button l-bind:title=\"key\">...</button>`\n\n**Attribute:**\nIf present, this Boolean attribute indicates that the option is initially selected. If the `<option>` element is the descendant of a [`<select>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/select \"The HTML <select> element represents a control that provides a menu of options\") element whose [`multiple`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/select#attr-multiple) attribute is not set, only one single `<option>` of this [`<select>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/select \"The HTML <select> element represents a control that provides a menu of options\") element may have the `selected` attribute."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/bind-directive"}]},{"name":"l-for","description":{"kind":"markdown","value":"`l-for` allows for iterative rendering, where elements are created based on the value of an array. The expression must adhere to a special syntax, which is detailed below. There can only be one child element in the scope. When referencing the `item` or `index` it must be prepended with `this.`. The children under the `l-for` element cannot be components.\n\n**Syntax:** `(item, index) in array`\n\n**Example:**\r\n```html\r\n<div l-for=\"(item, index) in items\">\r\n  <p l-text=\"this.item\"></p>\r\n</div>\r\n```"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/for-directive"}]},{"name":"l-model","description":{"kind":"markdown","value":"`l-model` allows the value of the input element will be kept in sync with the value of the state property of the component, allowing two-way binding. When the input is changed, `l-model` automatically detects the values of text inputs, checkboxes, radio buttons, textareas, selects, and multiple selects.\n\n**Syntax:** `<input type=\"text\" l-model=\"[prop]\">`\n\n**Example:** `<input type=\"text\" l-model=\"key\">`\r\n"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/model-directive"}]},{"name":"l-model.debounce","description":{"kind":"markdown","value":"`l-model` allows the value of the input element will be kept in sync with the value of the state property of the component, allowing two-way binding. When the input is changed, `l-model` automatically detects the values of text inputs, checkboxes, radio buttons, textareas, selects, and multiple selects.\n\n**Syntax:** `<input type=\"text\" l-model=\"[prop]\">`\n\n**Example:** `<input type=\"text\" l-model=\"key\">`\r\n\n\n**Property:**\nThe `debounce` property prevents any action regarding the event handler until the input is unfocused. This can be useful if you want to wait for the input to be given before updating / sending a Ajax request."},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/model-directive"}]},{"name":"l-mask","description":{"kind":"markdown","value":"`l-mask` is removed when an element is rendered. If you want elements to have a certain style on load, this is really useful for you. A typical use case is to use it to hide anything you don't want to show until Lucia renders it.\n\n```css\r\n[l-mask] {\r\n  display: none;\r\n}\r\n```\n\n**Syntax:** `<div l-mask></div>`\r\n"},"references":[{"name":"Documentation","url":"https://lucia.js.org/docs/directives/mask-directive"}]}]}
